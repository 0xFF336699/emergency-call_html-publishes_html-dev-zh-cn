{"version":3,"file":"static/chunks/816-02dd29a144a81928.js","mappings":"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","sources":["webpack://_N_E/./src/components/navbar/NavBar.tsx","webpack://_N_E/../../node_modules/.pnpm/react-i18next@15.6.0_i18next@24.2.3_typescript@5.7.3__react-dom@19.1.0_react@19.1.0__react@19.1.0_typescript@5.7.3/node_modules/react-i18next/dist/es/index.js","webpack://_N_E/../../libs/fanfanlo/src/i18n/i18n-init.ts","webpack://_N_E/../../libs/fanfanlo/src/storage/store-page-context.tsx","webpack://_N_E/../../libs/app/ui/src/components/app/AppShell.tsx","webpack://_N_E/../../libs/im/livekit/src/livekit-meeting/MeetingRoom5.tsx","webpack://_N_E/../../libs/app/model/src/remote/emc/inviteContacts.ts","webpack://_N_E/../../libs/app/model/src/remote/emc/tmsEmcGetContactTypes.ts","webpack://_N_E/./src/components/dialogs/InviteContactDialog.tsx","webpack://_N_E/./src/components/jpush/IsInitialized.tsx","webpack://_N_E/../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/lodash.js","webpack://_N_E/./src/components/pre-alarm-config/index.tsx","webpack://_N_E/./src/components/privacies/PrivacyDialog.tsx","webpack://_N_E/./src/components/privacies/ListenShowPrivacyContent.tsx","webpack://_N_E/./src/components/sensor-monitor/SensorMonitor.tsx","webpack://_N_E/./src/components/test/TestEmergencyCall.tsx","webpack://_N_E/./src/pages/home/index.tsx","webpack://_N_E/../../libs/app/ui/src/components/page/PageContent.tsx","webpack://_N_E/../../libs/app/ui/src/components/page/AndroidPageContent.tsx","webpack://_N_E/../../libs/app/ui/src/components/tabbar/Tabbar.tsx"],"sourcesContent":["import { useRouter } from \"next/router\";\r\nimport { useTranslation } from \"@fanfanlo\";\r\n\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport { BottomNavigation, BottomNavigationAction } from \"@mui/material\";\r\ninterface TabInfoType {\r\n  label: string;\r\n  value: string;\r\n  icon: React.ReactNode;\r\n}\r\n\r\nexport function NavBar() {\r\n  const router = useRouter();\r\n  const { pathname } = router;\r\n  const { t } = useTranslation('emergency-call/components/navbar/content');\r\n  const tabInfoList: TabInfoType[] = [\r\n    { label: t('NavBar.home'), value: '/', icon: <HomeIcon /> },\r\n    // { label: t('content.create'), value: '/script-creator', icon: <CreateIcon /> },\r\n    // { label: t('content.market'), value: '/market', icon: <StorefrontIcon /> },\r\n    { label: t('NavBar.settings'), value: '/settings', icon: <SettingsIcon /> },\r\n  ];\r\n  return (\r\n\r\n    <BottomNavigation showLabels value={pathname}>\r\n      {tabInfoList.map(e => (\r\n        <BottomNavigationAction\r\n          key={e.value}\r\n          label={e.label}\r\n          icon={e.icon}\r\n          data-id={`tabbar-${e.value}`}\r\n          className={pathname === e.value ? 'Mui-selected' : ''}\r\n          onClick={() => {\r\n            if (pathname === e.value) return;\r\n            router.push(e.value);\r\n          }}\r\n        />\r\n      ))}\r\n    </BottomNavigation>\r\n  );\r\n}","export * from \"C:\\\\work\\\\android-droid\\\\html\\\\website-2024-12\\\\node_modules\\\\.pnpm\\\\react-i18next@15.6.0_i18next@24.2.3_typescript@5.7.3__react-dom@19.1.0_react@19.1.0__react@19.1.0_typescript@5.7.3\\\\node_modules\\\\react-i18next\\\\dist\\\\es\\\\index.js\"","\"use client\";\r\n// 现在用的是这个文件\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\nimport Backend, { type HttpBackendOptions } from \"i18next-http-backend\";\r\n\r\nimport i18next from \"i18next\";\r\nimport { Log } from \"../log/Log\";\r\nimport { getBuildTime, isServer } from \"../nextjs/env/env\";\r\n;\r\nexport { useTranslation } from 'react-i18next';\r\nlet fileDateVersion:string = ''// = getConfig().publicRuntimeConfig?.version\r\nexport const i18nLogger = new Log(false, `i18n`);\r\nconst windowHref = (()=>{\r\n  if(typeof window === 'undefined')return ''\r\n  const u = new URL(window.location.href || window.parent?.location.href);\r\n  // 同域文本iframe里的页面会获取不到href，所以判断一下直接用父级的就行.\r\n  return u.origin == null || u.origin == 'null' ? '' : u.origin\r\n})()\r\nconst backendOptions = {\r\n  loadPath: function (lngs: string[], namespaces: string[]) {\r\n    const log = i18nLogger.sub(false, `i18n loadpath`);\r\n    log.pause = true;\r\n    const lng = lngs[0]\r\n    let p = ``\r\n    // p = `/options/_locales/${lngs[0].replace(\"-\", \"_\")}/messages.json`;\r\n    // p = `/locales/zh-CN/ns1/content.json`;\r\n    // p = `locales/${lng}/${namespaces[0]}.json?v=${fileDateVersion}`\r\n    const ps = namespaces[0].split('/')\r\n    ps.splice(ps.length - 1, 0, lng)\r\n    // p = `locales/${ps.join('/')}.json?v=${fileDateVersion}`\r\n    p = `locales/${ps.join('/')}.json?v=${getBuildTime()}`\r\n    log.log(`lngs=`, lngs);\r\n    log.log(`namespaces=`, namespaces);\r\n    log.log(\"p=\", p);\r\n    p = `${windowHref}/${p}`\r\n    log.log('windowHref p=', p)\r\n    return p;\r\n\r\n  },\r\n  parse: function (\r\n    data: string,\r\n    languages?: string | string[],\r\n    namespaces?: string | string[]\r\n  ) {\r\n    const log = i18nLogger.sub(false, `i18n backend parse`);\r\n    log.pause = true;\r\n    // log.log(`parrrse`, data, languages, namespaces);\r\n    const l = JSON.parse(data);\r\n    log.print(`before set i18ndata`);\r\n    // i18nData = l as II18n;\r\n    // log.log(`i18nData.rule.scripts.sys.rules`, i18nData.rule.scripts.sys.rules);\r\n    log.log(`parrrse`, languages, namespaces);\r\n    return l;\r\n  },\r\n};\r\nconst backend = new Backend();\r\nbackend.init(null, backendOptions);\r\nexport const i18n = i18next;\r\n// export const resources: Resource = {\r\n//   // 'zh-CN': {\r\n//   //   translation: _.merge({}, zhCN),\r\n//   // },\r\n//   // en: {\r\n//   //   translation: _.merge({}, en),\r\n//   // },\r\n// };\r\n\r\n\r\ni18n.on(\"languageChanged\", async function (lng) {\r\n  const log = i18nLogger.sub(false, `onlanguageChanged`);\r\n  log.pause = true;\r\n  log.log(`lllllng`, lng);\r\n  // lng = \"en\";\r\n  // const p = `/options/_locales/${lng.replace(\"-\", \"_\")}/messages.json`;\r\n});\r\n\r\n\r\n\r\n\r\nexport function i18nInit(_fileDateVersion:string=''){\r\n  fileDateVersion = _fileDateVersion\r\n  i18n\r\n  .use(LanguageDetector)\r\n  .use(backend)\r\n  .use(initReactI18next)\r\n  .init<HttpBackendOptions>({\r\n    load: \"currentOnly\",\r\n    // load: \"all\",\r\n    // supportedLngs: ['zh-CN', 'zh-TW', 'en', 'en-GB', 'ja'],\r\n    // resources,\r\n    fallbackLng: isServer ? \"en\" : \"zh-CN\",\r\n    // fallbackLng: \"zh-CN\",\r\n    // lng: \"zh-CN\",\r\n    partialBundledLanguages:true,\r\n    ns:[],\r\n    \r\n    debug: false,\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    },\r\n    detection: {\r\n      caches: [\"localStorage\"],\r\n    },\r\n  });\r\n}\r\ni18n.on(\"missingKey\", function (lngs, namespace, key, res) {\r\n  console.error(\r\n    \"i18n mssing key, lngs=%s, namespace=%s, key=%s, res=%s\",\r\n    lngs,\r\n    namespace,\r\n    key,\r\n    res\r\n  );\r\n});\r\n\r\ni18n.on(\"loaded\", function (loaded) {\r\n  const log = i18nLogger.sub(false, `onloaded`);\r\n  log.pause = true;\r\n  log.log(`onloaded arguments`, loaded);\r\n});\r\n\r\ni18n.on(\"failedLoading\", function (lng, ns, msg) {\r\n  const log = i18nLogger.sub(false, `onfailedLoading`);\r\n  log.pause = true;\r\n  log.log(`failedLoading arguments`, lng, ns, msg);\r\n});\r\n\r\ni18n.on(\"added\", function () {\r\n  console.log('added', arguments)\r\n});   \r\n\r\nexport default i18n;","import { createContext } from \"react\";\r\nimport { storeUtils } from \"./store-utils\";\r\n// import { storeUtils } from \"./store\";\r\nconst s = storeUtils.namespace('store-page-context')\r\n\r\nexport interface IPageScrollPosition{\r\n    x:number\r\n    y:number\r\n}\r\n\r\nfunction create(){\r\n    return createContext(s)\r\n}\r\nexport const StorePageContext = createContext<any>(s)\r\n\r\nexport const StorePageDynamicContext = createContext<Record<string, any>>({})","'use client'\r\nimport { i18n, i18nInit, IPageScrollPosition, StorePageContext, StorePageDynamicContext, toProxy, watchUpdates, storeUtils } from \"@fanfanlo\";\r\nimport { useRouter } from \"next/router\";\r\nimport getConfig from \"node_modules/next/config\";\r\nimport { PropsWithChildren, useEffect } from \"react\";\r\nimport { I18nextProvider } from \"react-i18next\";\r\n\r\ncheckReloadPage();\r\ni18nInit()\r\n\r\n\r\nfunction checkReloadPage(){\r\n  if(typeof window === 'undefined')return\r\n  if(getConfig().publicRuntimeConfig.isDevelopment){\r\n    return\r\n  }\r\n  // 帮我检测url中是否包含_htmlRefreshTime的参数\r\n  // 如果没有，则添加_htmlRefresTime的参数，值为当前时间的毫秒数\r\n  const searchParams = new URL(window.location.href).searchParams\r\n  const htmlRefreshTime = searchParams.get('_htmlRefreshTime')\r\n  if (!htmlRefreshTime) {\r\n    const newUrl = new URL(window.location.href)\r\n    newUrl.searchParams.set('_htmlRefreshTime', String(Date.now()))\r\n    window.location.href = newUrl.toString()\r\n    return\r\n  }\r\n\r\n  const refreshTime = Number(htmlRefreshTime)\r\n  if (refreshTime + 2 * 60 * 1000 < Date.now()) {\r\n    const newUrl = new URL(window.location.href)\r\n    newUrl.searchParams.set('_htmlRefreshTime', String(Date.now()))\r\n    window.location.href = newUrl.toString()\r\n  }\r\n}\r\nexport function AppShell({ children }: PropsWithChildren) {\r\n  const router = useRouter();\r\n  const scrollKey = 'scrollPositionInfo'\r\n  const href = window.location.href.split(\"#\")[0]\r\n  const dynamicKey = `dynamic-${href}`\r\n  const s = storeUtils.namespace(dynamicKey);\r\n  let o: Record<string, unknown>|undefined = s.read(dynamicKey)\r\n  if (!o) {\r\n    o = {}\r\n    s.write(dynamicKey, o)\r\n  }\r\n  o = toProxy(o)\r\n  useEffect(() => {\r\n\r\n    router.beforePopState((state) => {\r\n      s.clearAll()\r\n      return true\r\n    })\r\n  })\r\n  useEffect(() => {\r\n    s.write(dynamicKey, o)\r\n    return watchUpdates(o, () => {\r\n      s.write(dynamicKey, o)\r\n    })\r\n  }, [])\r\n  useEffect(() => {\r\n    const info = (s.read(scrollKey) || { x: 0, y: 0 }) as IPageScrollPosition\r\n    // console.log('app shell scroll info info = ', info)\r\n    if (info.x == 0 && info.y == 0) {\r\n      listenScroll()\r\n    } else {\r\n      window.requestAnimationFrame(() => {\r\n        window.scrollTo(info.x, info.y)\r\n        listenScroll()\r\n      })\r\n    }\r\n    function onScroll(e: Event) {\r\n      // console.log('app shell on scroll', { x: window.scrollX, y: window.scrollY })\r\n      s.write(scrollKey, { x: window.scrollX, y: window.scrollY })\r\n    }\r\n    function listenScroll() {\r\n      window.addEventListener('scroll', onScroll)\r\n    }\r\n\r\n    function unsub() {\r\n      window.removeEventListener('scroll', onScroll)\r\n    }\r\n    return unsub\r\n  });\r\n  return (\r\n    <StorePageContext value={s}>\r\n      <StorePageDynamicContext value={o}>\r\n\r\n        <I18nextProvider i18n={i18n}>\r\n          {children}\r\n        </I18nextProvider>\r\n      </StorePageDynamicContext>\r\n    </StorePageContext>\r\n  )\r\n}","import React, {\r\n    useCallback,\r\n    useEffect,\r\n    useRef,\r\n    useState,\r\n    forwardRef,\r\n    ForwardedRef\r\n} from 'react';\r\nimport {\r\n    Room,\r\n    RoomEvent,\r\n    Participant,\r\n    RemoteParticipant,\r\n    RemoteTrack,\r\n    Track,\r\n    LocalTrack,\r\n    LocalVideoTrack,\r\n    LocalAudioTrack,\r\n    createLocalAudioTrack,\r\n    createLocalVideoTrack,\r\n    VideoPreset,\r\n    VideoPresets,\r\n    TrackPublication,\r\n    LocalParticipant\r\n} from 'livekit-client';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Typography,\r\n    Alert,\r\n    IconButton,\r\n    CircularProgress,\r\n    Stack,\r\n    SxProps,\r\n    Theme\r\n} from '@mui/material';\r\nimport Grid from '@mui/material/Grid';\r\nimport {\r\n    Mic as MicIcon,\r\n    MicOff as MicOffIcon,\r\n    ScreenShare as ScreenShareIcon,\r\n    StopScreenShare as StopScreenShareIcon,\r\n    Videocam as VideoIcon,\r\n    VideocamOff as VideoOffIcon,\r\n    CallEnd as CallEndIcon,\r\n    Settings as SettingsIcon,\r\n    VolumeUp as VolumeUpIcon,\r\n    VolumeOff as VolumeOffIcon,\r\n    Fullscreen as FullscreenIcon,\r\n    FullscreenExit as FullscreenExitIcon,\r\n    Refresh as RefreshIcon,\r\n    Visibility as VisibilityIcon,\r\n    VisibilityOff as VisibilityOffIcon\r\n} from '@mui/icons-material';\r\nimport { Log } from '@fanfanlo';\r\n// import { mainModel } from '@src/libs/mc/main/MainModel';\r\nimport { MeetingRoomProps, VideoPresetConfig, ExtendedParticipantState, ParticipantState } from './meeting-room.intf';\r\n\r\n// 日志记录器\r\nconst logger = new Log(false, 'livekit-meeting.MeetingRoom');\r\nconst uiLogger = logger.sub(false, 'MeetingRoom_ui');\r\n\r\n// 视频预设\r\nconst VIDEO_PRESET: VideoPresetConfig = {\r\n    width: 1280,\r\n    height: 720,\r\n    // @ts-ignore - frameRate is used by LiveKit internally\r\n    frameRate: 24,\r\n    maxBitrate: 3000 * 1000, // 3Mbps\r\n};\r\n\r\n// 类型定义已移至 meetint-room.intf.ts\r\n\r\n\r\n// function getTokenEndpoint(): string {\r\n//     if (!mainModel.appConfig?.livekit?.jwt) {\r\n//         throw new Error('LiveKit JWT endpoint is not configured');\r\n//     }\r\n//     return `${mainModel.appConfig.livekit.jwt}/token`;\r\n// }\r\n// 主组件实现\r\nfunction MeetingRoomComponent(\r\n    {\r\n        livekitConfig,\r\n        roomName,\r\n        userName,\r\n        onDisconnect,\r\n        onError,\r\n        className = '',\r\n        style,\r\n        sx,\r\n        directly = false,\r\n    }: MeetingRoomProps,\r\n    ref: ForwardedRef<HTMLDivElement>\r\n) {\r\n    // 全局音视频控制状态\r\n    const [globalMediaState, setGlobalMediaState] = useState<{\r\n        isAudioEnabled: boolean;\r\n        isVideoEnabled: boolean;\r\n    }>({\r\n        isAudioEnabled: true,\r\n        isVideoEnabled: true,\r\n    });\r\n\r\n    // 远程参与者媒体订阅状态\r\n    const [remoteMediaState, setRemoteMediaState] = useState({\r\n        isAudioSubscribed: true,\r\n        isVideoSubscribed: true\r\n    });\r\n\r\n    // 切换全局远程音频订阅状态\r\n    const toggleRemoteAudio = useCallback(() => {\r\n        const newState = !remoteMediaState.isAudioSubscribed;\r\n        logger.log('Toggling remote audio subscription to:', newState);\r\n        \r\n        // 更新状态\r\n        setRemoteMediaState(prev => {\r\n            logger.log('Remote audio subscription state changed:', { \r\n                from: prev.isAudioSubscribed, \r\n                to: newState \r\n            });\r\n            return {\r\n                ...prev,\r\n                isAudioSubscribed: newState\r\n            };\r\n        });\r\n        \r\n        // 更新所有远程参与者的音频订阅状态\r\n        if (roomRef.current) {\r\n            const participantCount = roomRef.current.remoteParticipants.size;\r\n            logger.log(`Updating audio subscription for ${participantCount} remote participants`);\r\n            \r\n            roomRef.current.remoteParticipants.forEach((participant, identity) => {\r\n                let audioTrackCount = 0;\r\n                participant.trackPublications.forEach(publication => {\r\n                    if (publication.kind === Track.Kind.Audio) {\r\n                        audioTrackCount++;\r\n                        logger.log(`Setting audio subscription for ${identity} to ${newState}`, {\r\n                            trackSid: publication.trackSid,\r\n                            isSubscribed: publication.isSubscribed\r\n                        });\r\n                        publication.setSubscribed(newState);\r\n                    }\r\n                });\r\n                logger.log(`Processed ${audioTrackCount} audio tracks for participant: ${identity}`);\r\n            });\r\n        }\r\n    }, [remoteMediaState.isAudioSubscribed]);\r\n\r\n    // 切换全局远程视频订阅状态\r\n    const toggleRemoteVideo = useCallback(() => {\r\n        const newState = !remoteMediaState.isVideoSubscribed;\r\n        logger.log('Toggling remote video subscription to:', newState);\r\n        \r\n        // 更新状态\r\n        setRemoteMediaState(prev => {\r\n            logger.log('Remote video subscription state changed:', { \r\n                from: prev.isVideoSubscribed, \r\n                to: newState \r\n            });\r\n            return {\r\n                ...prev,\r\n                isVideoSubscribed: newState\r\n            };\r\n        });\r\n        \r\n        // 更新所有远程参与者的视频订阅状态\r\n        if (roomRef.current) {\r\n            const participantCount = roomRef.current.remoteParticipants.size;\r\n            logger.log(`Updating video subscription for ${participantCount} remote participants`);\r\n            \r\n            roomRef.current.remoteParticipants.forEach((participant, identity) => {\r\n                let videoTrackCount = 0;\r\n                participant.trackPublications.forEach(publication => {\r\n                    if (publication.kind === Track.Kind.Video) {\r\n                        videoTrackCount++;\r\n                        logger.log(`Setting video subscription for ${identity} to ${newState}`, {\r\n                            trackSid: publication.trackSid,\r\n                            isSubscribed: publication.isSubscribed\r\n                        });\r\n                        publication.setSubscribed(newState);\r\n                    }\r\n                });\r\n                logger.log(`Processed ${videoTrackCount} video tracks for participant: ${identity}`);\r\n            });\r\n        }\r\n    }, [remoteMediaState.isVideoSubscribed]);\r\n\r\n    // 处理参与者连接\r\n    const handleParticipantConnected = useCallback((participant: RemoteParticipant) => {\r\n        logger.log('Participant connected:', participant.identity, {\r\n            audioSubscribed: remoteMediaState.isAudioSubscribed,\r\n            videoSubscribed: remoteMediaState.isVideoSubscribed\r\n        });\r\n        \r\n        // 应用当前的全局订阅设置\r\n        let audioTracksProcessed = 0;\r\n        let videoTracksProcessed = 0;\r\n        \r\n        participant.trackPublications.forEach(publication => {\r\n            if (publication.kind === Track.Kind.Audio || publication.kind === Track.Kind.Video) {\r\n                const isAudio = publication.kind === Track.Kind.Audio;\r\n                const shouldSubscribe = isAudio ? \r\n                    remoteMediaState.isAudioSubscribed : \r\n                    remoteMediaState.isVideoSubscribed;\r\n                \r\n                logger.log(`Setting ${isAudio ? 'audio' : 'video'} subscription for new participant ${participant.identity} to ${shouldSubscribe}`, {\r\n                    trackSid: publication.trackSid,\r\n                    isSubscribed: publication.isSubscribed\r\n                });\r\n                \r\n                publication.setSubscribed(shouldSubscribe);\r\n                \r\n                if (isAudio) audioTracksProcessed++;\r\n                else videoTracksProcessed++;\r\n            }\r\n        });\r\n        \r\n        logger.log(`Processed tracks for new participant ${participant.identity}:`, {\r\n            audioTracks: audioTracksProcessed,\r\n            videoTracks: videoTracksProcessed\r\n        });\r\n        \r\n        // 添加参与者到状态\r\n        setParticipants(prev => {\r\n            const exists = prev.some(p => p.identity === participant.identity);\r\n            if (!exists) {\r\n                logger.log('Adding participant to state:', participant.identity);\r\n                return [...prev, participant];\r\n            }\r\n            logger.log('Participant already in state, not adding again:', participant.identity);\r\n            return prev;\r\n        });\r\n    }, [remoteMediaState]);\r\n\r\n    // Refs\r\n    const roomRef = useRef<Room | null>(null);\r\n    const localTracksRef = useRef<LocalTrack[]>([]);\r\n    const videoElements = useRef<Record<string, HTMLVideoElement>>({});\r\n    const audioElements = useRef<Record<string, HTMLAudioElement>>({});\r\n    const [participantStates, setParticipantStates] = useState<Record<string, ExtendedParticipantState>>({});\r\n    const isUnmountedRef = useRef(false);\r\n\r\n    // State\r\n    const [isConnecting, setIsConnecting] = useState(false);\r\n    const [hasConnected, setHasConnected] = useState(false);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [isMuted, setIsMuted] = useState(false);\r\n    const [isVideoEnabled, setIsVideoEnabled] = useState(true);\r\n    const [participants, setParticipants] = useState<RemoteParticipant[]>([]);\r\n\r\n    // 获取 token\r\n    const fetchToken = useCallback(async (roomName: string, identity: string) => {\r\n        try {\r\n            const response = await fetch(`${livekitConfig.jwt}/token`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    room_name: roomName,\r\n                    identity,\r\n                }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('获取 token 失败');\r\n            }\r\n\r\n            const data = await response.json();\r\n            return data.token;\r\n        } catch (error) {\r\n            uiLogger.error('获取 token 失败:', error);\r\n            throw error;\r\n        }\r\n    }, []);\r\n\r\n    // 连接到房间\r\n    const connectToRoom = useCallback(async () => {\r\n        if (isConnecting || hasConnected) return;\r\n\r\n        setIsConnecting(true);\r\n        setError(null);\r\n\r\n        try {\r\n            // 1. 获取 token\r\n            const token = await fetchToken(roomName, userName);\r\n            uiLogger.log('token:', token);\r\n\r\n            // 2. 创建本地轨道\r\n            const { audioTrack, videoTrack } = await createLocalTracks();\r\n            localTracksRef.current = [audioTrack, videoTrack];\r\n            uiLogger.log('audioTrack:', audioTrack);\r\n            uiLogger.log('videoTrack:', videoTrack);\r\n            // 3. 创建房间连接\r\n            const room = new Room({\r\n                adaptiveStream: true,\r\n                dynacast: true,\r\n                videoCaptureDefaults: {\r\n                    resolution: VIDEO_PRESET,\r\n                },\r\n                // @ts-ignore - publishDefaults is a valid option\r\n                publishDefaults: {\r\n                    dtx: true,\r\n                    red: true,\r\n                    forceStereo: false,\r\n                    simulcast: true,\r\n                } as any, // Type assertion to bypass type checking for now\r\n            });\r\n            uiLogger.log('room:', room);\r\n            // 4. 设置事件监听\r\n            setupRoomListeners(room);\r\n\r\n            // 5. 连接到房间\r\n            await room.connect(\r\n                livekitConfig.wsUrl,\r\n                token,\r\n                {\r\n                    autoSubscribe: true,\r\n                }\r\n            );\r\n            uiLogger.log('room connected');\r\n            // 6. 发布本地轨道\r\n            try {\r\n                await Promise.all([\r\n                    room.localParticipant.publishTrack(audioTrack),\r\n                    room.localParticipant.publishTrack(videoTrack)\r\n                ]);\r\n            } catch (publishError) {\r\n                uiLogger.error('发布轨道失败:', publishError);\r\n                // 即使发布失败也继续，因为可能已经有其他参与者发布了相同的轨道\r\n            }\r\n\r\n            // 7. 更新引用和状态\r\n            roomRef.current = room;\r\n            setHasConnected(true);\r\n\r\n            // 8. 添加现有远程参与者到状态\r\n            const remoteParticipants = Array.from(room.remoteParticipants.values());\r\n            setParticipants(remoteParticipants);\r\n\r\n            // 9. 更新本地参与者状态\r\n            updateParticipantState(room.localParticipant.identity, {\r\n                isAudioEnabled: true,\r\n                isVideoEnabled: true,\r\n                audioTrack,\r\n                videoTrack,\r\n            });\r\n\r\n            // 10. 为现有远程参与者设置轨道\r\n            remoteParticipants.forEach(participant => {\r\n                // 初始化远程参与者状态\r\n                initParticipantState(participant);\r\n                uiLogger.log('已初始化远程参与者状态:', participant.identity);\r\n                \r\n                // 使用 getTrackPublications 获取所有轨道发布\r\n                participant.getTrackPublications().forEach(publication => {\r\n                    if (publication.track && publication.track instanceof RemoteTrack) {\r\n                        handleTrackSubscribed(publication.track, publication, participant);\r\n                    }\r\n                });\r\n            });\r\n            \r\n            // 初始化本地参与者状态\r\n            if (room.localParticipant) {\r\n                initParticipantState(room.localParticipant);\r\n                uiLogger.log('已初始化本地参与者状态:', room.localParticipant.identity);\r\n            }\r\n\r\n            uiLogger.log('成功加入会议');\r\n\r\n        } catch (error) {\r\n            uiLogger.error('连接房间失败啦:', error);\r\n            setError('加入会议失败，请检查网络和权限设置');\r\n            // 发生错误时清理资源\r\n            cleanupTracks(localTracksRef.current);\r\n            localTracksRef.current = [];\r\n\r\n            if (roomRef.current) {\r\n                try {\r\n                    await roomRef.current.disconnect();\r\n                } catch (e) {\r\n                    uiLogger.error('断开连接时出错:', e);\r\n                }\r\n                roomRef.current = null;\r\n            }\r\n        } finally {\r\n            setIsConnecting(false);\r\n        }\r\n    }, [roomName, userName, isConnecting, hasConnected, fetchToken]);\r\n\r\n    // 创建本地音视频轨道\r\n    const createLocalTracks = useCallback(async () => {\r\n        try {\r\n            const [audioTrack, videoTrack] = await Promise.all([\r\n                createLocalAudioTrack({\r\n                    echoCancellation: true,\r\n                    noiseSuppression: true,\r\n                    autoGainControl: true,\r\n                }),\r\n                createLocalVideoTrack({\r\n                    resolution: {\r\n                        width: 1280,\r\n                        height: 720,\r\n                        frameRate: 24,\r\n                    },\r\n                }),\r\n            ]);\r\n            return { audioTrack, videoTrack };\r\n        } catch (error) {\r\n            uiLogger.error('创建本地轨道失败:', error);\r\n            throw error;\r\n        }\r\n    }, []);\r\n\r\n    // 清理轨道\r\n    const cleanupTracks = useCallback((tracks: LocalTrack[]) => {\r\n        tracks.forEach(track => {\r\n            track.stop();\r\n            track.detach();\r\n        });\r\n    }, []);\r\n\r\n    // 跟踪已处理的轨道元素\r\n    const trackElementsRef = useRef<Record<string, boolean>>({});\r\n    const videoElementsRef = useRef<Record<string, HTMLVideoElement>>({});\r\n    const audioElementsRef = useRef<Record<string, HTMLAudioElement>>({});\r\n\r\n    // 更新参与者状态\r\n    const updateParticipantState = useCallback((identity: string, state: Partial<ParticipantState>) => {\r\n        setParticipantStates(prev => ({\r\n            ...prev,\r\n            [identity]: {\r\n                ...(prev[identity] || {\r\n                    isAudioEnabled: true,\r\n                    isVideoEnabled: true,\r\n                    isAudioEnabledGlobal: true,\r\n                    isVideoEnabledGlobal: true,\r\n                }),\r\n                ...state,\r\n            },\r\n        }));\r\n    }, []);\r\n    // 处理轨道订阅\r\n    const handleTrackSubscribed = useCallback((\r\n        track: RemoteTrack,\r\n        publication: TrackPublication,\r\n        participant: Participant\r\n    ) => {\r\n        if (!track) return () => { };\r\n\r\n        const { identity } = participant;\r\n        const isVideoTrack = track.kind === Track.Kind.Video;\r\n\r\n        uiLogger.log(`处理 ${track.kind} 轨道订阅:`, identity, track);\r\n\r\n        // 更新轨道状态的函数\r\n        const updateTrackState = () => {\r\n            const isMuted = track.isMuted;\r\n            const stateUpdate: Partial<ParticipantState> = {};\r\n\r\n            if (track.kind === Track.Kind.Audio) {\r\n                stateUpdate.isAudioEnabled = !isMuted;\r\n            } else if (track.kind === Track.Kind.Video) {\r\n                stateUpdate.isVideoEnabled = !isMuted;\r\n            }\r\n\r\n            updateParticipantState(identity, stateUpdate);\r\n\r\n            // 强制触发重新渲染以确保 ParticipantVideo 组件更新\r\n            if (isVideoTrack) {\r\n                setParticipants(prev => [...prev]);\r\n            }\r\n        };\r\n\r\n        // 监听轨道静音/取消静音事件\r\n        track.on('muted', updateTrackState);\r\n        track.on('unmuted', updateTrackState);\r\n\r\n        // 初始状态更新\r\n        updateTrackState();\r\n\r\n        // 强制更新参与者列表以触发重新渲染\r\n        // 这确保了即使没有状态变化，组件也会检查新的轨道\r\n        setParticipants(prev => {\r\n            const participantExists = prev.some(p => p.identity === identity);\r\n            if (!participantExists) {\r\n                return [...prev, participant as RemoteParticipant];\r\n            }\r\n            return [...prev];\r\n        });\r\n\r\n\r\n        // 清理函数\r\n        return () => {\r\n            track.off('muted', updateTrackState);\r\n            track.off('unmuted', updateTrackState);\r\n        };\r\n    }, [updateParticipantState]);\r\n\r\n    // 设置房间事件监听\r\n    const setupRoomListeners = useCallback((room: Room) => {\r\n        // 保存所有事件处理函数引用，以便后续清理\r\n        type EventHandler = (...args: any[]) => void;\r\n        const eventHandlers: Record<string, EventHandler> = {\r\n            // 处理远程参与者连接\r\n            participantConnected: (participant: RemoteParticipant) => {\r\n                if (!(participant instanceof RemoteParticipant)) return;\r\n\r\n                uiLogger.log('远程参与者已连接:', participant.identity);\r\n\r\n                // 添加新参与者到状态（使用函数式更新确保不重复添加）\r\n                setParticipants(prev => {\r\n                    // 如果已经存在该参与者，则返回原数组\r\n                    if (prev.some(p => p.identity === participant.identity)) {\r\n                        return prev;\r\n                    }\r\n                    return [...prev, participant];\r\n                });\r\n\r\n                // 监听参与者的轨道发布\r\n                const handleTrackPublished = (publication: TrackPublication) => {\r\n                    uiLogger.log('远程参与者发布轨道:', publication.kind, participant.identity);\r\n                    if (publication.track) {\r\n                        handleTrackSubscribed(publication.track as RemoteTrack, publication, participant);\r\n                    } else {\r\n                        publication.once('subscribed', (track: RemoteTrack) => {\r\n                            handleTrackSubscribed(track, publication, participant);\r\n                        });\r\n                    }\r\n                };\r\n\r\n                // 添加轨道发布监听\r\n                participant.on('trackPublished', handleTrackPublished);\r\n\r\n                // 处理已经发布的轨道\r\n                participant.trackPublications.forEach(publication => {\r\n                    if (publication.track) {\r\n                        handleTrackSubscribed(publication.track as RemoteTrack, publication, participant);\r\n                    }\r\n                });\r\n\r\n                // 返回清理函数\r\n                return () => {\r\n                    participant.off('trackPublished', handleTrackPublished);\r\n                };\r\n            },\r\n\r\n            // 处理参与者断开连接\r\n            participantDisconnected: (participant: RemoteParticipant) => {\r\n                uiLogger.log('远程参与者已断开连接:', participant.identity);\r\n                setParticipants(prev => {\r\n                    const newParticipants = prev.filter(p => p.identity !== participant.identity);\r\n                    uiLogger.log('更新后的参与者列表:', newParticipants.map(p => p.identity));\r\n                    return newParticipants;\r\n                });\r\n            },\r\n\r\n            // 处理轨道订阅\r\n            trackSubscribed: (track: RemoteTrack, publication: TrackPublication, participant: Participant) => {\r\n                if (!track) return;\r\n                uiLogger.log('轨道订阅成功:', track.kind, participant.identity);\r\n                // 处理远程轨道订阅\r\n                handleTrackSubscribed(track, publication, participant as RemoteParticipant);\r\n            },\r\n\r\n            disconnected: (reason?: any) => {\r\n                const reasonStr = reason?.toString?.() || '未知原因';\r\n                uiLogger.log('已从房间断开连接，原因:', reasonStr);\r\n                // 更新状态但不调用 handleDisconnect，因为可能是我们主动断开的\r\n                setHasConnected(false);\r\n                setParticipants([]);\r\n                setError(null);\r\n            },\r\n\r\n            reconnecting: () => {\r\n                uiLogger.log('正在重新连接到房间...');\r\n                setError('正在重新连接...');\r\n            },\r\n\r\n            reconnected: () => {\r\n                uiLogger.log('已重新连接到房间');\r\n                setError(null);\r\n            }\r\n        };\r\n\r\n        // 添加事件监听\r\n        room\r\n            .on(RoomEvent.Disconnected, eventHandlers.disconnected)\r\n            .on(RoomEvent.Reconnecting, eventHandlers.reconnecting)\r\n            .on(RoomEvent.Reconnected, eventHandlers.reconnected)\r\n            .on(RoomEvent.ParticipantConnected, handleParticipantConnected) // 使用新的处理函数\r\n            .on(RoomEvent.ParticipantDisconnected, eventHandlers.participantDisconnected)\r\n            .on(RoomEvent.TrackSubscribed, eventHandlers.trackSubscribed);\r\n\r\n        // 返回清理函数\r\n        return () => {\r\n            if (!room) return;\r\n            room\r\n                .off(RoomEvent.Disconnected, eventHandlers.disconnected)\r\n                .off(RoomEvent.Reconnecting, eventHandlers.reconnecting)\r\n                .off(RoomEvent.Reconnected, eventHandlers.reconnected)\r\n                .off(RoomEvent.ParticipantConnected, eventHandlers.participantConnected)\r\n                .off(RoomEvent.ParticipantDisconnected, eventHandlers.participantDisconnected)\r\n                .off(RoomEvent.TrackSubscribed, eventHandlers.trackSubscribed);\r\n\r\n            // 确保返回 void\r\n            return undefined;\r\n        };\r\n    }, [handleTrackSubscribed]);\r\n\r\n    // 离开会议\r\n    const leaveMeeting = useCallback(async () => {\r\n        uiLogger.log('正在离开会议...');\r\n        try {\r\n            // 停止所有本地轨道\r\n            cleanupTracks(localTracksRef.current);\r\n\r\n            // 断开房间连接\r\n            if (roomRef.current) {\r\n                await roomRef.current.disconnect();\r\n                roomRef.current = null;\r\n            }\r\n\r\n            // 更新状态\r\n            setHasConnected(false);\r\n            setParticipants([]);\r\n            setError(null);\r\n\r\n            // 清除所有媒体元素\r\n            Object.values(videoElements.current).forEach(el => el && el.remove());\r\n            Object.values(audioElements.current).forEach(el => el && el.remove());\r\n            videoElements.current = {};\r\n            audioElements.current = {};\r\n\r\n            // 调用断开连接回调\r\n            if (onDisconnect) {\r\n                onDisconnect();\r\n            }\r\n\r\n            uiLogger.log('已成功离开会议');\r\n        } catch (error) {\r\n            uiLogger.error('离开会议时出错:', error);\r\n            setError('离开会议时出错，请重试');\r\n        }\r\n    }, [onDisconnect]);\r\n\r\n    // 清理函数\r\n    const cleanup = useCallback(async (isUnmounting = false) => {\r\n        // 如果是组件卸载，设置卸载标志\r\n        if (isUnmounting) {\r\n            isUnmountedRef.current = true;\r\n        }\r\n\r\n        uiLogger.log('执行清理...');\r\n        if (!roomRef.current) return;\r\n\r\n        const localParticipant = roomRef.current.localParticipant;\r\n        const audioTrack = localTracksRef.current.find(\r\n            t => t.kind === Track.Kind.Audio\r\n        ) as LocalAudioTrack | undefined;\r\n        const videoTrack = localTracksRef.current.find(\r\n            t => t.kind === Track.Kind.Video\r\n        ) as LocalVideoTrack | undefined;\r\n\r\n        try {\r\n            if (audioTrack) {\r\n                await audioTrack.stop();\r\n            }\r\n            if (videoTrack) {\r\n                await videoTrack.stop();\r\n            }\r\n        } catch (error) {\r\n            uiLogger.error('停止轨道失败:', error);\r\n        }\r\n\r\n        // 清理轨道\r\n        cleanupTracks(localTracksRef.current);\r\n        localTracksRef.current = [];\r\n\r\n        // 清理房间\r\n        if (roomRef.current) {\r\n            roomRef.current.disconnect();\r\n            roomRef.current = null;\r\n        }\r\n\r\n        // 清理状态\r\n        setHasConnected(false);\r\n        setParticipants([]);\r\n        setParticipantStates({});\r\n    }, []);\r\n\r\n    // 更新全局媒体状态\r\n    const updateGlobalMediaState = useCallback((audioEnabled: boolean, videoEnabled: boolean) => {\r\n        setGlobalMediaState(prev => ({\r\n            ...prev,\r\n            isAudioEnabled: audioEnabled,\r\n            isVideoEnabled: videoEnabled,\r\n        }));\r\n    }, []);\r\n\r\n    // 切换静音状态（全局控制）\r\n    const toggleMute = useCallback(async () => {\r\n        if (!roomRef.current) return;\r\n\r\n        const localParticipant = roomRef.current.localParticipant;\r\n        const audioTrack = localTracksRef.current.find(\r\n            t => t.kind === Track.Kind.Audio\r\n        ) as LocalAudioTrack | undefined;\r\n\r\n        if (!audioTrack) return;\r\n\r\n        try {\r\n            // 全局按钮基于全局状态进行切换\r\n            const newGlobalAudioState = !globalMediaState.isAudioEnabled;\r\n\r\n            // 同步更新本地麦克风的物理状态\r\n            if (newGlobalAudioState) {\r\n                await audioTrack.unmute();\r\n            } else {\r\n                await audioTrack.mute();\r\n            }\r\n\r\n            // 更新本地UI状态\r\n            setIsMuted(!newGlobalAudioState);\r\n            updateParticipantState(localParticipant.identity, { isAudioEnabled: newGlobalAudioState });\r\n\r\n            // 更新全局音频状态，这将影响所有参与者的有效状态\r\n            updateGlobalMediaState(newGlobalAudioState, globalMediaState.isVideoEnabled);\r\n        } catch (error) {\r\n            uiLogger.error('切换静音状态失败:', error);\r\n            setError('切换麦克风状态失败');\r\n        }\r\n    }, [globalMediaState, updateParticipantState, updateGlobalMediaState]);\r\n\r\n    // 切换视频状态（全局控制）\r\n    const toggleVideo = useCallback(async () => {\r\n        if (!roomRef.current) return;\r\n\r\n        const localParticipant = roomRef.current.localParticipant;\r\n        const videoTrack = localTracksRef.current.find(\r\n            t => t.kind === Track.Kind.Video\r\n        ) as LocalVideoTrack | undefined;\r\n\r\n        if (!videoTrack) return;\r\n\r\n        try {\r\n            // 全局按钮基于全局状态进行切换\r\n            const newGlobalVideoState = !globalMediaState.isVideoEnabled;\r\n\r\n            // 同步更新本地摄像头的物理状态\r\n            if (newGlobalVideoState) {\r\n                await videoTrack.unmute();\r\n            } else {\r\n                await videoTrack.mute();\r\n            }\r\n\r\n            // 更新本地UI状态\r\n            setIsVideoEnabled(newGlobalVideoState);\r\n            updateParticipantState(localParticipant.identity, { isVideoEnabled: newGlobalVideoState });\r\n\r\n            // 更新全局视频状态，这将影响所有参与者的有效状态\r\n            updateGlobalMediaState(globalMediaState.isAudioEnabled, newGlobalVideoState);\r\n        } catch (error) {\r\n            uiLogger.error('切换视频状态失败:', error);\r\n            setError('切换摄像头状态失败');\r\n        }\r\n    }, [globalMediaState, updateParticipantState, updateGlobalMediaState]);\r\n\r\n    // 切换本地静音状态（仅本地tile）\r\n    const handleLocalMuteToggle = useCallback(async () => {\r\n        if (!roomRef.current) return;\r\n\r\n        const localParticipant = roomRef.current.localParticipant;\r\n        const audioTrack = localTracksRef.current.find(\r\n            t => t.kind === Track.Kind.Audio\r\n        ) as LocalAudioTrack | undefined;\r\n\r\n        if (!audioTrack) return;\r\n\r\n        try {\r\n            const newMutedState = !isMuted;\r\n            if (newMutedState) {\r\n                await audioTrack.mute();\r\n            } else {\r\n                await audioTrack.unmute();\r\n            }\r\n\r\n            setIsMuted(newMutedState);\r\n            updateParticipantState(localParticipant.identity, { isAudioEnabled: !newMutedState });\r\n        } catch (error) {\r\n            uiLogger.error('切换本地静音状态失败:', error);\r\n            setError('切换麦克风状态失败');\r\n        }\r\n    }, [isMuted, updateParticipantState]);\r\n\r\n    // 切换本地视频状态（仅本地tile）\r\n    const handleLocalVideoToggle = useCallback(async () => {\r\n        if (!roomRef.current) return;\r\n\r\n        const localParticipant = roomRef.current.localParticipant;\r\n        const videoTrack = localTracksRef.current.find(\r\n            t => t.kind === Track.Kind.Video\r\n        ) as LocalVideoTrack | undefined;\r\n\r\n        if (!videoTrack) return;\r\n\r\n        try {\r\n            const newVideoState = !isVideoEnabled;\r\n            if (newVideoState) {\r\n                await videoTrack.unmute();\r\n            } else {\r\n                await videoTrack.mute();\r\n            }\r\n\r\n            setIsVideoEnabled(newVideoState);\r\n            updateParticipantState(localParticipant.identity, { isVideoEnabled: newVideoState });\r\n        } catch (error) {\r\n            uiLogger.error('切换本地视频状态失败:', error);\r\n            setError('切换摄像头状态失败');\r\n        }\r\n    }, [isVideoEnabled, updateParticipantState]);\r\n\r\n    // 组件卸载时清理资源\r\n    useEffect(() => {\r\n        return () => {\r\n            // 清理资源\r\n            cleanup(true);\r\n        };\r\n    }, []);\r\n\r\n    // 获取参与者状态\r\n    const getParticipantState = useCallback((identity: string): ParticipantState => {\r\n        return participantStates[identity] || {\r\n            isAudioEnabled: true,\r\n            isVideoEnabled: true,\r\n            isAudioEnabledGlobal: true,\r\n            isVideoEnabledGlobal: true,\r\n        };\r\n    }, [participantStates]);\r\n\r\n    // 初始化参与者状态\r\n    const initParticipantState = useCallback((participant: Participant) => {\r\n        const state = getParticipantState(participant.identity);\r\n\r\n        // 更新音频状态\r\n        const audioTrack = participant.getTrackPublications().find(\r\n            pub => pub.kind === Track.Kind.Audio\r\n        )?.track as LocalAudioTrack | undefined;\r\n\r\n        // 更新视频状态\r\n        const videoTrack = participant.getTrackPublications().find(\r\n            pub => pub.kind === Track.Kind.Video\r\n        )?.track as LocalVideoTrack | undefined;\r\n\r\n        updateParticipantState(participant.identity, {\r\n            ...state,\r\n            isAudioEnabled: audioTrack ? !audioTrack.isMuted : false,\r\n            isVideoEnabled: videoTrack ? !videoTrack.isMuted : false\r\n        });\r\n    }, [getParticipantState, updateParticipantState]);\r\n\r\n    // 切换参与者的音频状态\r\n    const handleToggleAudio = useCallback((participant: Participant) => {\r\n        const currentState = participantStates[participant.identity] || {\r\n            isAudioEnabled: true,\r\n            isVideoEnabled: true,\r\n            isAudioEnabledGlobal: true,\r\n            isVideoEnabledGlobal: true,\r\n        };\r\n\r\n        updateParticipantState(participant.identity, {\r\n            ...currentState,\r\n            isAudioEnabled: !currentState.isAudioEnabled\r\n        });\r\n    }, [participantStates, updateParticipantState]);\r\n\r\n    // 切换参与者的视频状态\r\n    const handleToggleVideo = useCallback((participant: Participant) => {\r\n        const currentState = participantStates[participant.identity] || {\r\n            isAudioEnabled: true,\r\n            isVideoEnabled: true,\r\n            isAudioEnabledGlobal: true,\r\n            isVideoEnabledGlobal: true,\r\n        };\r\n\r\n        updateParticipantState(participant.identity, {\r\n            ...currentState,\r\n            isVideoEnabled: !currentState.isVideoEnabled\r\n        });\r\n    }, [participantStates, updateParticipantState]);\r\n\r\n    // 获取参与者的实际媒体状态（考虑全局覆盖）\r\n    const getEffectiveMediaState = useCallback((participantId: string) => {\r\n        const state = participantStates[participantId];\r\n        if (!state) return { isAudioEnabled: true, isVideoEnabled: true };\r\n\r\n        return {\r\n            isAudioEnabled: globalMediaState.isAudioEnabled ? state.isAudioEnabled : false,\r\n            isVideoEnabled: globalMediaState.isVideoEnabled ? state.isVideoEnabled : false,\r\n        };\r\n    }, [globalMediaState, participantStates]);\r\n\r\n    // 参与者视频组件\r\n    const ParticipantVideo = React.memo(({\r\n        participant,\r\n        isLocal,\r\n        isVideoEnabled\r\n    }: {\r\n        participant: Participant;\r\n        isLocal: boolean;\r\n        isVideoEnabled: boolean;\r\n    }) => {\r\n        const videoRef = useRef<HTMLVideoElement>(null);\r\n        const [videoTrack, setVideoTrack] = useState<RemoteTrack | LocalVideoTrack | Track | null>(null);\r\n\r\n        // 处理视频轨道变化\r\n        useEffect(() => {\r\n            if (!participant) return;\r\n\r\n            // 查找现有的视频轨道发布\r\n            const videoPublication = Array.from(participant.trackPublications.values())\r\n                .find(pub => pub.kind === Track.Kind.Video);\r\n\r\n            // 如果轨道已存在，则直接设置\r\n            if (videoPublication && videoPublication.track) {\r\n                setVideoTrack(videoPublication.track);\r\n            }\r\n\r\n            // 当订阅轨道时处理\r\n            const handleTrackSubscribed = (track: Track) => {\r\n                if (track.kind === Track.Kind.Video) {\r\n                    setVideoTrack(track as RemoteTrack | LocalVideoTrack);\r\n                }\r\n            };\r\n\r\n            // 当取消订阅轨道时处理\r\n            const handleTrackUnsubscribed = (track: Track) => {\r\n                if (track.kind === Track.Kind.Video) {\r\n                    setVideoTrack(null);\r\n                }\r\n            };\r\n\r\n            // 添加事件监听\r\n            participant.on(RoomEvent.TrackSubscribed, handleTrackSubscribed);\r\n            participant.on(RoomEvent.TrackUnsubscribed, handleTrackUnsubscribed);\r\n\r\n            // 清理函数\r\n            return () => {\r\n                participant.off(RoomEvent.TrackSubscribed, handleTrackSubscribed);\r\n                participant.off(RoomEvent.TrackUnsubscribed, handleTrackUnsubscribed);\r\n            };\r\n        }, [participant]);\r\n\r\n        // 处理视频元素附加/分离\r\n        useEffect(() => {\r\n            const videoElement = videoRef.current;\r\n            if (!videoElement || !videoTrack) return;\r\n\r\n            // 清理现有视频源\r\n            while (videoElement.firstChild) {\r\n                videoElement.removeChild(videoElement.firstChild);\r\n            }\r\n\r\n            // 附加视频轨道\r\n            if (isVideoEnabled) {\r\n                videoTrack.attach(videoElement);\r\n            }\r\n\r\n            return () => {\r\n                if (videoTrack) {\r\n                    videoTrack.detach(videoElement);\r\n                }\r\n            };\r\n        }, [videoTrack, isVideoEnabled]);\r\n\r\n        return (\r\n            <Box\r\n                sx={{\r\n                    width: '100%',\r\n                    aspectRatio: '16/9',\r\n                    bgcolor: 'grey.800',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    position: 'relative',\r\n                }}\r\n            >\r\n                <video\r\n                    ref={videoRef}\r\n                    autoPlay\r\n                    playsInline\r\n                    muted={isLocal}\r\n                    style={{\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        objectFit: 'cover',\r\n                        display: isVideoEnabled ? 'block' : 'none'\r\n                    }}\r\n                />\r\n                {!isVideoEnabled && (\r\n                    <Box\r\n                        sx={{\r\n                            position: 'absolute',\r\n                            top: 0,\r\n                            left: 0,\r\n                            right: 0,\r\n                            bottom: 0,\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            bgcolor: 'grey.900',\r\n                        }}\r\n                    >\r\n                        <Box\r\n                            sx={{\r\n                                width: 80,\r\n                                height: 80,\r\n                                borderRadius: '50%',\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                                bgcolor: 'primary.main',\r\n                                color: 'white',\r\n                                fontSize: 32,\r\n                                fontWeight: 'bold',\r\n                            }}\r\n                        >\r\n                            {participant.identity.charAt(0).toUpperCase()}\r\n                        </Box>\r\n                    </Box>\r\n                )}\r\n            </Box>\r\n        );\r\n    });\r\n\r\n    // 参与者音频组件\r\n    const ParticipantAudio = React.memo(({\r\n        participant,\r\n        isMuted,\r\n    }: {\r\n        participant: Participant;\r\n        isMuted: boolean;\r\n    }) => {\r\n        const audioRef = useRef<HTMLAudioElement>(null);\r\n        const [audioTrack, setAudioTrack] = useState<RemoteTrack | LocalAudioTrack | Track | null>(null);\r\n\r\n        useEffect(() => {\r\n            if (!participant) return;\r\n\r\n            const handleTrackSubscribed = (track: Track) => {\r\n                if (track.kind === Track.Kind.Audio) {\r\n                    setAudioTrack(track as RemoteTrack | LocalAudioTrack);\r\n                }\r\n            };\r\n\r\n            const handleTrackUnsubscribed = (track: Track) => {\r\n                if (track.kind === Track.Kind.Audio) {\r\n                    setAudioTrack(null);\r\n                }\r\n            };\r\n\r\n            // 查找现有的音频轨道\r\n            const audioPublication = Array.from(participant.trackPublications.values())\r\n                .find(pub => pub.kind === Track.Kind.Audio);\r\n\r\n            if (audioPublication && audioPublication.track) {\r\n                setAudioTrack(audioPublication.track);\r\n            }\r\n\r\n            participant.on(RoomEvent.TrackSubscribed, handleTrackSubscribed);\r\n            participant.on(RoomEvent.TrackUnsubscribed, handleTrackUnsubscribed);\r\n\r\n            return () => {\r\n                participant.off(RoomEvent.TrackSubscribed, handleTrackSubscribed);\r\n                participant.off(RoomEvent.TrackUnsubscribed, handleTrackUnsubscribed);\r\n            };\r\n        }, [participant]);\r\n\r\n        useEffect(() => {\r\n            const audioElement = audioRef.current;\r\n            if (audioElement && audioTrack) {\r\n                audioTrack.attach(audioElement);\r\n                // 远程音频默认静音，除非用户手动取消\r\n                audioElement.muted = isMuted;\r\n                return () => {\r\n                    audioTrack.detach(audioElement);\r\n                };\r\n            }\r\n        }, [audioTrack, isMuted]);\r\n\r\n        return <audio ref={audioRef} autoPlay playsInline />;\r\n    });\r\n\r\n    // 渲染参与者\r\n    const renderParticipant = useCallback((participant: Participant, isLocal: boolean) => {\r\n        const effectiveState = getEffectiveMediaState(participant.identity);\r\n\r\n        return (\r\n            <Box\r\n                key={participant.identity}\r\n                sx={{\r\n                    position: 'relative',\r\n                    borderRadius: 2,\r\n                    overflow: 'hidden',\r\n                    bgcolor: 'background.paper',\r\n                    boxShadow: 1,\r\n                }}\r\n            >\r\n                {/* 视频元素 */}\r\n                <ParticipantVideo\r\n                    participant={participant}\r\n                    isLocal={isLocal}\r\n                    isVideoEnabled={effectiveState.isVideoEnabled}\r\n                />\r\n\r\n                {/* 音频元素 */}\r\n                {!isLocal && (\r\n                    <ParticipantAudio\r\n                        participant={participant}\r\n                        isMuted={!effectiveState.isAudioEnabled}\r\n                    />\r\n                )}\r\n\r\n                {/* 控制栏 */}\r\n                <Grid container\r\n                    sx={{\r\n                        position: 'absolute',\r\n                        bottom: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        p: 1,\r\n                        bgcolor: 'rgba(0, 0, 0, 0.6)',\r\n                        justifyContent: 'center',\r\n                        gap: 1,\r\n                    }}\r\n                >\r\n                    <Grid item>\r\n                        <IconButton\r\n                            size=\"small\"\r\n                            color={effectiveState.isAudioEnabled ? 'primary' : 'error'}\r\n                            onClick={() => handleToggleAudio(participant)}\r\n                        >\r\n                            {effectiveState.isAudioEnabled ? <VolumeUpIcon /> : <VolumeOffIcon />}\r\n                        </IconButton>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <IconButton\r\n                            size=\"small\"\r\n                            color={effectiveState.isVideoEnabled ? 'primary' : 'error'}\r\n                            onClick={() => handleToggleVideo(participant)}\r\n                        >\r\n                            {effectiveState.isVideoEnabled ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n                        </IconButton>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography variant=\"caption\" color=\"white\">\r\n                            {participant.identity} {isLocal && '(你)'}\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    {/* 本地麦克风控制 */}\r\n                    {isLocal && (\r\n                        <Grid item>\r\n                            <IconButton\r\n                                size=\"small\"\r\n                                onClick={handleLocalMuteToggle}\r\n                                color={isMuted ? 'error' : 'primary'}\r\n                                sx={{ color: 'white' }}\r\n                                title={isMuted ? '取消静音' : '静音'}\r\n                            >\r\n                                {isMuted ? <MicOffIcon /> : <MicIcon />}\r\n                            </IconButton>\r\n                        </Grid>\r\n                    )}\r\n\r\n                    {/* 本地视频控制 */}\r\n                    {isLocal && (\r\n                        <Grid item>\r\n                            <IconButton\r\n                                size=\"small\"\r\n                                onClick={handleLocalVideoToggle}\r\n                                color={isVideoEnabled ? 'primary' : 'error'}\r\n                                sx={{ color: 'white' }}\r\n                                title={isVideoEnabled ? '关闭摄像头' : '开启摄像头'}\r\n                            >\r\n                                {isVideoEnabled ? <VideoIcon /> : <VideoOffIcon />}\r\n                            </IconButton>\r\n                        </Grid>\r\n                    )}\r\n                </Grid>\r\n            </Box>\r\n        );\r\n    }, [isMuted, isVideoEnabled, getEffectiveMediaState, handleToggleAudio, handleToggleVideo, handleLocalMuteToggle, handleLocalVideoToggle]);\r\n\r\n    // 渲染控制按钮\r\n    function renderControlButtons() {\r\n        return (\r\n            <Box sx={{ display: 'flex', gap: 1, p: 1, bgcolor: 'background.paper' }}>\r\n                {/* 本地音频控制 */}\r\n                <IconButton\r\n                    color={isMuted ? 'error' : 'primary'}\r\n                    onClick={toggleMute}\r\n                    title={isMuted ? '取消静音' : '静音'}\r\n                >\r\n                    {isMuted ? <MicOffIcon /> : <MicIcon />}\r\n                </IconButton>\r\n\r\n                {/* 本地视频控制 */}\r\n                <IconButton\r\n                    color={isVideoEnabled ? 'primary' : 'error'}\r\n                    onClick={toggleVideo}\r\n                    title={isVideoEnabled ? '关闭摄像头' : '开启摄像头'}\r\n                >\r\n                    {isVideoEnabled ? <VideoIcon /> : <VideoOffIcon />}\r\n                </IconButton>\r\n\r\n                {/* 全局远程音频控制 */}\r\n                <IconButton\r\n                    color={remoteMediaState.isAudioSubscribed ? 'primary' : 'error'}\r\n                    onClick={toggleRemoteAudio}\r\n                    title={remoteMediaState.isAudioSubscribed ? '关闭所有远程音频' : '开启所有远程音频'}\r\n                >\r\n                    {remoteMediaState.isAudioSubscribed ? <VolumeUpIcon /> : <VolumeOffIcon />}\r\n                </IconButton>\r\n\r\n                {/* 全局远程视频控制 */}\r\n                <IconButton\r\n                    color={remoteMediaState.isVideoSubscribed ? 'primary' : 'error'}\r\n                    onClick={toggleRemoteVideo}\r\n                    title={remoteMediaState.isVideoSubscribed ? '关闭所有远程视频' : '开启所有远程视频'}\r\n                >\r\n                    {remoteMediaState.isVideoSubscribed ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n                </IconButton>\r\n\r\n                {/* 离开会议按钮 */}\r\n                <IconButton\r\n                    color=\"error\"\r\n                    onClick={leaveMeeting}\r\n                    title=\"离开会议\"\r\n                >\r\n                    <CallEndIcon />\r\n                </IconButton>\r\n            </Box>\r\n        );\r\n    }\r\n\r\n    // 渲染主界面\r\n    function renderMainContent() {\r\n        // 如果已经连接，显示会议界面\r\n        if (hasConnected && roomRef.current) {\r\n            return (\r\n                <Box className={className} sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n                    <Box sx={{ flex: 1, overflow: 'auto', p: 2 }}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} md={participants.length === 0 ? 12 : 6}>\r\n                                {renderParticipant(roomRef.current.localParticipant, true)}\r\n                            </Grid>\r\n                            {participants.map(function (participant) {\r\n                                return (\r\n                                    <Grid item xs={12} md={6} key={participant.identity}>\r\n                                        {renderParticipant(participant, false)}\r\n                                    </Grid>\r\n                                );\r\n                            })}\r\n                        </Grid>\r\n                    </Box>\r\n                    {/* 底部控制栏 */}\r\n                    <Box sx={{ p: 1, borderTop: '1px solid', borderColor: 'divider' }}>\r\n                        {renderControlButtons()}\r\n                    </Box>\r\n                </Box>\r\n            );\r\n        }\r\n\r\n        // 未连接时显示连接界面\r\n        return (\r\n            <Box className={className} sx={{\r\n                height: '100%',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                p: 3\r\n            }}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    准备加入会议\r\n                </Typography>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={connectToRoom}\r\n                    disabled={isConnecting}\r\n                    startIcon={<VideoIcon />}\r\n                    sx={{ mt: 2 }}\r\n                >\r\n                    加入会议\r\n                    {isConnecting && (\r\n                        <CircularProgress\r\n                            size={16}\r\n                            sx={{\r\n                                color: 'inherit',\r\n                                ml: 1\r\n                            }}\r\n                        />\r\n                    )}\r\n                </Button>\r\n            </Box>\r\n        );\r\n    }\r\n\r\n    // 统一渲染内容，避免提前 return 导致 hooks 数量不一致\r\n    let content: React.ReactNode;\r\n    if (isConnecting) {\r\n        content = (\r\n            <Box sx={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                height: '100%',\r\n                p: 3\r\n            }}>\r\n                <CircularProgress />\r\n                <Typography variant=\"body1\" sx={{ mt: 2 }}>正在连接会议...</Typography>\r\n            </Box>\r\n        );\r\n    } else if (error) {\r\n        content = (\r\n            <Alert severity=\"error\" sx={{ m: 2 }}>\r\n                <Typography variant=\"body1\">{error}</Typography>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={connectToRoom}\r\n                    startIcon={<RefreshIcon />}\r\n                    sx={{ mt: 1 }}\r\n                >\r\n                    重试连接\r\n                </Button>\r\n            </Alert>\r\n        );\r\n    } else {\r\n        content = renderMainContent();\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(directly){\r\n            connectToRoom();\r\n        }\r\n    }, [directly])\r\n    // 渲染组件\r\n    return (\r\n        <Box ref={ref} sx={sx} style={style}>\r\n            {content}\r\n        </Box>\r\n    );\r\n}\r\n\r\n// 使用 forwardRef 导出组件\r\nconst MeetingRoom5 = forwardRef(MeetingRoomComponent);\r\nMeetingRoom5.displayName = 'MeetingRoom5';\r\n\r\nexport { MeetingRoom5 };","import { IRequestParams, IResultContent, request } from \"@fanfanlo\";\nimport { tms } from \"../tms\";\nimport { IRequestOptions } from \"../IRequestOptions\";\n\n/**\n * @description 单个联系人的信息，由前端提供\n */\nexport interface IEmcContactIdentity {\n    identity: string;\n    identityType: 'email' | 'mobile';\n}\n\n/**\n * @description 邀请联系人的请求参数\n */\nexport interface IEmcInviteContactsParams extends IRequestParams {\n    contacts: IEmcContactIdentity[];\n    remark?: string;\n    type: string;\n    message?: string;\n    matrix_access_token: string; // 新增：用于创建 Matrix 房间的授权 Token\n}\n\n/**\n * @description 单个邀请的处理结果，由后端返回\n */\nexport interface IEmcInviteResultItem {\n    identity: string;\n    result_code: string; // 使用 ResultCode 的字符串形式\n    msg: string;\n}\n\n/**\n * @description 邀请联系人的完整响应体\n */\n// export interface IEmcInviteContactsResult extends IResultContent {\n//     data: {\n//         data: {\n//             results: IEmcInviteResultItem[];\n//             msg?: string;\n//         };\n//         msg?: string;\n//     };\n//     results?: IEmcInviteResultItem[]; // 保持向后兼容\n// }\n\nexport interface IEmcInviteContactsResult extends IResultContent {\n    data: {\n        is_ok:boolean;\n        results: IEmcInviteResultItem[];\n        msg?: string;\n    };\n}\n\n/**\n * @description 调用邀请联系人接口的函数\n * @param opts 包含 params, gateway, handler 的请求选项\n */\nexport async function tmsEmcInviteContacts(opts: IRequestOptions<IEmcInviteContactsParams>) {\n    const res = await request<IEmcInviteContactsResult>(tms.TEmc, tms.MEmcInviteContacts, opts.params, opts.gateway, opts.handler);\n    return res;\n}","import { IRequestParams, IResultContent, request } from \"@fanfanlo\";\nimport { tms } from \"../tms\";\nimport { IRequestOptions } from \"../IRequestOptions\";\n\n/**\n * @description 获取联系人类型的请求参数\n */\nexport interface IEmcGetContactTypesParams extends IRequestParams {\n    // 可能不需要额外参数，但保留结构以备将来扩展\n}\n\n/**\n * @description 单个联系人类型\n */\nexport interface IEmcContactTypeItem {\n    id: string;\n    name: string;\n    // 根据实际需要可以添加更多字段，例如 icon, description 等\n}\n\n/**\n * @description 获取联系人类型的完整响应体\n */\nexport interface IEmcGetContactTypesResult extends IResultContent {\n    data: {\n        types: Array<{\n            uuid: string;\n            name: string;\n            is_system: boolean;\n        }>;\n    };\n}\n\n/**\n * @description 调用获取联系人类型接口的函数\n * @param opts 包含 params, gateway, handler 的请求选项\n */\nexport async function tmsEmcGetContactTypes(opts: IRequestOptions<IEmcGetContactTypesParams>) {\n    const res = await request<IEmcGetContactTypesResult>(tms.TEmc, tms.MEmcGetContactTypes, opts.params, opts.gateway, opts.handler);\n    return res;\n}\n","import {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    TextField,\n    Box,\n    CircularProgress,\n    Autocomplete,\n} from '@mui/material';\nimport { useState, useCallback, useEffect, useRef, SyntheticEvent } from 'react';\nimport { \n    IEmcInviteContactsParams, \n    tmsEmcInviteContacts, \n    IEmcContactIdentity, \n    user, \n    tmsEmcGetContactTypes,\n    IEmcGetContactTypesResult,\n    IEmcContactTypeItem,\n    IEmcInviteResultItem,\n} from '@app/model';\nimport toast from 'react-hot-toast';\nimport { matrixUser } from '@im/matrix';\nimport { authService } from '@src/services/authService';\nimport { Log, useProxyWatch,\n    IRequestResult } from '@fanfanlo';\nconst fileLogger = new Log(false, 'InviteContactDialog.tsx');\n\nconst isValidIdentity = (text: string) => /(^\\d{11}$)|(^[a-zA-Z0-9]{32}$)/.test(text);\nconst is11DigitNumber = (text: string) => /^\\d{11}$/.test(text);\n\ninterface InviteContactDialogProps {\n    open: boolean;\n    onClose: () => void;\n    onInviteSent?: () => void;\n}\n\nexport function InviteContactDialog({ open, onClose, onInviteSent }: InviteContactDialogProps) {\n    const uiLogger = fileLogger.sub(false, 'InviteContactDialog_ui');\n\n    const [contacts, setContacts] = useState('');\n    const [remark, setRemark] = useState('');\n    const [callType, setCallType] = useState<string | null>(null);\n    const [availableCallTypes, setAvailableCallTypes] = useState<readonly IEmcContactTypeItem[]>([]);\n    \n    // Debug effect to log availableCallTypes changes\n    useEffect(() => {\n        console.log('availableCallTypes updated:', availableCallTypes);\n    }, [availableCallTypes]);\n    \n    // Debug effect to log callType changes\n    useEffect(() => {\n        console.log('callType updated:', callType);\n    }, [callType]);\n    const [message, setMessage] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [isTypesLoading, setIsTypesLoading] = useState(false);\n\n    const [pendingParams, setPendingParams] = useState<Omit<IEmcInviteContactsParams, 'matrix_access_token'> | null>(null);\n    const executionLock = useRef(false);\n    const [accessToken] = useProxyWatch(matrixUser.userData.userInfo, 'loginResponse.access_token', matrixUser.userData.userInfo.loginResponse?.access_token);\n    const [isUserLoggedIn] = useProxyWatch(user.data.sessionData, 'global_user_info', !!user.data.sessionData.global_user_info);\n\n    useEffect(() => {\n        if (accessToken && pendingParams && !executionLock.current) {\n            executionLock.current = true;\n            const finalParams: IEmcInviteContactsParams = {\n                ...pendingParams,\n                matrix_access_token: accessToken,\n                contacts: pendingParams?.contacts || [],\n                type: pendingParams?.type || ''\n            };\n            executeApiCall(finalParams);\n        }\n    }, [accessToken, pendingParams]);\n\n    const executeApiCall = useCallback(async (params: IEmcInviteContactsParams) => {\n        if (!params.contacts || !params.type) {\n            toast.error('请填写联系人和呼叫类型');\n            return;\n        }\n\n        setIsLoading(true);\n        \n        try {\n            const res = await tmsEmcInviteContacts({\n                params,\n                handler: { printLog: true }\n            });\n\n            console.log('Invite response:', res);\n\n            // 处理响应结果\n            if (res.err || !res.shellIsOk || !res.dataIsOk) {\n                const errorMessage = res.err?.message || '邀请失败，请稍后重试';\n                toast.error(errorMessage);\n                return;\n            }\n\n            // 处理嵌套的响应结构\n            const responseData = res.data;\n            if (!responseData?.data?.results) {\n                const errorMessage = responseData?.data?.msg || res.data?.msg || '未返回有效的结果';\n                toast.error(errorMessage);\n                return;\n            }\n            \n            const results: IEmcInviteResultItem[] = responseData.data.results;\n\n            // 统计成功和失败的数量\n            const successResults = results.filter(r => r.result_code === 'SUCCESS');\n            const infoResults = results.filter(r => r.result_code === 'INVITE_ALREADY_SENT' || r.result_code === 'ALREADY_A_CONTACT');\n            const errorResults = results.filter(r => r.result_code !== 'SUCCESS' && r.result_code !== 'INVITE_ALREADY_SENT' && r.result_code !== 'ALREADY_A_CONTACT');\n\n            if (successResults.length > 0) {\n                toast.success(`成功邀请 ${successResults.length} 个联系人`);\n                onInviteSent?.();\n            }\n            \n            if (infoResults.length > 0) {\n                const infoMessages = infoResults.map(r => r.msg).filter(Boolean).join('\\n');\n                if (infoMessages) {\n                    // 使用默认的 toast 替代 toast.info\n                    toast(infoMessages);\n                }\n            }\n            \n            if (errorResults.length > 0) {\n                const errorMessages = errorResults.map(r => r.msg).filter(Boolean).join('\\n');\n                if (errorMessages) {\n                    toast.error(`部分邀请失败：\\n${errorMessages}`);\n                }\n            }\n        } catch (error) {\n            console.error('Error in executeApiCall:', error);\n            toast.error('处理请求时发生错误，请稍后重试');\n        } finally {\n            setIsLoading(false);\n        }\n    }, [onInviteSent]);\n\n    const fetchCallTypes = useCallback(async () => {\n        const logger = uiLogger.sub(false, 'fetchCallTypes_fn');\n        logger.log('Fetching call types...');\n        setIsTypesLoading(true);\n        const res: IRequestResult<IEmcGetContactTypesResult, any> = await tmsEmcGetContactTypes({ params: {}, handler: { printLog: true } });\n        logger.log('Call types response:', JSON.stringify(res));\n        setIsTypesLoading(false);\n\n        if (res.err || !res.shellIsOk || !res.dataIsOk) {\n            const errorMessage = res.err?.message || '加载呼叫类型失败。';\n            toast.error(errorMessage);\n            setAvailableCallTypes([]);\n            logger.error('Failed to load call types:', errorMessage);\n        } else {\n            // 从 res.data.data.types 获取数据\n            const types = res.data?.data?.types || [];\n            logger.log('Setting availableCallTypes:', JSON.stringify(types));\n            \n            // 转换为 IEmcContactTypeItem[] 格式\n            const formattedTypes = types.map(type => ({\n                id: type.uuid,\n                name: type.name,\n                is_system: type.is_system\n            }));\n            \n            setAvailableCallTypes(formattedTypes);\n            \n            // 只在 callType 为空时设置默认值\n            if (formattedTypes.length > 0 && !callType) {\n                const defaultType = formattedTypes[0].name;\n                logger.log('Setting default call type:', defaultType);\n                setCallType(defaultType);\n            } else if (formattedTypes.length === 0) {\n                logger.warn('No call types available');\n            }\n        }\n    }, []); // 移除了 callType 依赖\n\n    useEffect(() => {\n        if (open) {\n            fetchCallTypes();\n        } else {\n            setContacts('');\n            setRemark('');\n            setCallType(null);\n            setAvailableCallTypes([]);\n            setMessage('');\n            setIsLoading(false);\n            setPendingParams(null);\n            executionLock.current = false;\n        }\n    }, [open, fetchCallTypes]);\n\n    const handleSendInvitation = useCallback(async () => {\n        const contactInputs = contacts.split('\\n').map(c => c.trim()).filter(c => c);\n        if (contactInputs.length === 0) {\n            toast.error('请输入至少一个联系人。');\n            return;\n        }\n\n        const contactIdentities: IEmcContactIdentity[] = [];\n        for (const input of contactInputs) {\n            if (isValidIdentity(input)) {\n                const type = is11DigitNumber(input) ? 'mobile' : 'email';\n                contactIdentities.push({ identity: input, identityType: type });\n            } else {\n                toast.error(`联系人格式无效: ${input}。必须是11位手机号或32位字符串。`);\n                return;\n            }\n        }\n\n        if (!callType || callType.trim() === '') {\n            toast.error('请选择或输入一个呼叫类型。');\n            return;\n        }\n\n        setIsLoading(true);\n\n        if (!isUserLoggedIn) {\n            const appLoggedIn = await authService.showLoginDialog();\n            if (!appLoggedIn) {\n                setIsLoading(false);\n                return; \n            }\n        }\n\n        const currentAccessToken = matrixUser.userData.userInfo.loginResponse?.access_token;\n        const params: Omit<IEmcInviteContactsParams, 'matrix_access_token'> = {\n            contacts: contactIdentities,\n            type: callType.trim(),\n            remark: remark.trim(),\n            message: message.trim(),\n        };\n\n        if (currentAccessToken) {\n            executionLock.current = true;\n            const apiParams: IEmcInviteContactsParams = {\n                ...params,\n                matrix_access_token: currentAccessToken,\n                contacts: params.contacts || [],\n                type: params.type || ''\n            };\n            executeApiCall(apiParams);\n        } else {\n            toast('等待登录...');\n            setPendingParams(params);\n        }\n\n    }, [contacts, remark, callType, message, executeApiCall, isUserLoggedIn]);\n\n    return (\n        <Dialog open={open} onClose={() => onClose()} maxWidth=\"sm\" fullWidth>\n            <DialogTitle>邀请紧急联系人</DialogTitle>\n            <DialogContent>\n                <Box component=\"form\" sx={{ mt: 2 }}>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"contacts\"\n                        label=\"联系人 (11位手机号或32位ID)\"\n                        type=\"text\"\n                        fullWidth\n                        multiline\n                        rows={4}\n                        variant=\"outlined\"\n                        placeholder=\"13800138000&#10;550e8400e29b41d4a716446655440000\"\n                        value={contacts}\n                        onChange={(e) => setContacts(e.target.value)}\n                        disabled={isLoading}\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"remark\"\n                        label=\"备注名 (可选)\"\n                        type=\"text\"\n                        fullWidth\n                        variant=\"outlined\"\n                        value={remark}\n                        onChange={(e) => setRemark(e.target.value)}\n                        disabled={isLoading}\n                    />\n                    <Autocomplete\n                        freeSolo\n                        id=\"call-type-autocomplete\"\n                        options={availableCallTypes.map((option) => option.name)}\n                        value={callType || ''}\n                        onChange={(event: SyntheticEvent, newValue: string | null) => {\n                            console.log('Call type changed to:', newValue);\n                            setCallType(newValue);\n                        }}\n                        inputValue={callType || ''}\n                        onInputChange={(event, newInputValue, reason) => {\n                            // Only update when the user is typing, not when an option is selected\n                            if (reason === 'input') {\n                                console.log('Input value changed to:', newInputValue);\n                                setCallType(newInputValue);\n                            }\n                        }}\n                        disablePortal\n                        disableClearable\n                        forcePopupIcon={!isTypesLoading}\n                        sx={{ mt: 1, mb: 1, width: '100%' }}\n                        renderInput={(params) => (\n                            <TextField\n                                {...params}\n                                label=\"呼叫类型\"\n                                variant=\"outlined\"\n                                fullWidth\n                                InputProps={{\n                                    ...params.InputProps,\n                                    endAdornment: (\n                                        <>\n                                            {isTypesLoading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                                            {params.InputProps.endAdornment}\n                                        </>\n                                    ),\n                                }}\n                            />\n                        )}\n                        ListboxProps={{\n                            style: {\n                                maxHeight: '200px',\n                                overflow: 'auto',\n                            },\n                        }}\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"message\"\n                        label=\"邀请信息 (可选)\"\n                        type=\"text\"\n                        fullWidth\n                        multiline\n                        rows={3}\n                        variant=\"outlined\"\n                        placeholder=\"我已将您添加为我的紧急联系人，请接受邀请。\"\n                        value={message}\n                        onChange={(e) => setMessage(e.target.value)}\n                        disabled={isLoading}\n                    />\n                </Box>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => onClose()} disabled={isLoading}>关闭</Button>\n                <Button onClick={handleSendInvitation} variant=\"contained\" disabled={isLoading}>\n                    {isLoading ? <CircularProgress size={24} /> : '发送邀请'}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}","import { autoWebViewJs } from \"@droid/android\";\r\nimport { Box, Button } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n\r\nexport function JpushIsInitialized(){\r\n    const [isInitialized, setIsInitialized] = useState(false);\r\n    function refresh(){\r\n        const script = `var bl = com.fanfanlo.emergencycall.jpush.JpushManager.readIsJpushInitialized();\r\n        bl;`\r\n        const {javaResultData} = autoWebViewJs.callScript<boolean>(script);\r\n        setIsInitialized(typeof javaResultData == \"undefined\" ? false : javaResultData);\r\n    }\r\n    useEffect(() => {\r\n        refresh();\r\n    }, []);\r\n\r\n    return(\r\n        <Box>\r\n            <span>消息推送初始:</span><span>{isInitialized ? \"是\" : \"否\"}</span>\r\n            <span><Button onClick={refresh}>刷新</Button></span>\r\n        </Box>\r\n    )\r\n}","export * from \"C:\\\\work\\\\android-droid\\\\html\\\\website-2024-12\\\\node_modules\\\\.pnpm\\\\lodash@4.17.21\\\\node_modules\\\\lodash\\\\lodash.js\"","import React, { useState, useEffect, useCallback } from 'react';\nimport {\n    Box,\n    Switch,\n    FormControlLabel,\n    TextField,\n    Button,\n    List,\n    Typography,\n    Paper,\n    Select,\n    MenuItem,\n    FormControl,\n    InputLabel,\n    Chip,\n    Stack,\n    IconButton\n} from '@mui/material';\nimport {\n    DndContext,\n    closestCenter,\n    KeyboardSensor,\n    PointerSensor,\n    useSensor,\n    useSensors,\n    DragEndEvent,\n} from '@dnd-kit/core';\nimport {\n    arrayMove,\n    SortableContext,\n    sortableKeyboardCoordinates,\n    useSortable,\n    verticalListSortingStrategy,\n} from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { Delete as DeleteIcon, Add as AddIcon, DragIndicator as DragIndicatorIcon, PlayCircleOutline as PlayIcon } from '@mui/icons-material';\nimport { debounce } from 'lodash';\nimport { autoJsStoreUtils, autoWebViewJs } from '@droid/android';\n\nconst PRE_ALARM_CONFIG_KEY = 'PRE_ALARM_ACTIONS_CONFIG';\n\n// --- Data Structures ---\ninterface PreAlarmAction {\n    id: string;\n    type: \"sound\" | \"vibration\";\n    duration: number;\n    resourceId?: string;\n}\n\ninterface PreAlarmConfig {\n    enabled: boolean;\n    actions: PreAlarmAction[];\n    maxWaitDuration: number;\n}\n\nconst defaultSoundResources = [\n    { id: 'beep_short', name: '短提示音' },\n    { id: 'siren_gentle', name: '缓和警报' },\n    { id: 'alarm_clock', name: '闹钟' },\n];\n\n// --- Sortable Item Component ---\nconst SortableItem: React.FC<{\n    action: PreAlarmAction;\n    onUpdate: (id: string, updates: Partial<Omit<PreAlarmAction, 'id'>>) => void;\n    onRemove: (id: string) => void;\n}> = ({ action, onUpdate, onRemove }) => {\n    const {\n        attributes,\n        listeners,\n        setNodeRef,\n        transform,\n        transition,\n        isDragging,\n    } = useSortable({ id: action.id });\n\n    const style = {\n        transform: CSS.Transform.toString(transform),\n        transition,\n        zIndex: isDragging ? 1 : 'auto',\n        boxShadow: isDragging ? '0px 4px 8px rgba(0,0,0,0.2)' : 'none',\n    };\n    function handlePreviewSound(id:string){\n        const script = `\n        com.fanfanlo.emergencycall.manager.SoundManager.previewSound(\"${id}\");\n        `;\n        autoWebViewJs.callScript(script);\n    }\n    return (\n        <Paper\n            ref={setNodeRef}\n            style={style}\n            elevation={1}\n            sx={{\n                width: '100%',\n                p: 1.5,\n                mb: 1.5,\n                border: '1px solid #ddd',\n                borderRadius: '8px',\n                bgcolor: 'background.paper',\n                display: 'flex',\n                gap: 1,\n                userSelect: 'none',\n            }}\n        >\n            <Box {...attributes} {...listeners} sx={{ display: 'flex', alignItems: 'center', cursor: 'grab', alignSelf: 'flex-start', pt: 0.5, touchAction: 'none' }}>\n                <DragIndicatorIcon />\n            </Box>\n            <Stack spacing={1.5} sx={{ flexGrow: 1 }}>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                    <Chip label={action.type === 'sound' ? '声音' : '震动'} color={action.type === 'sound' ? 'primary' : 'secondary'} size=\"small\" />\n                    <IconButton size=\"small\" aria-label=\"delete\" onClick={() => onRemove(action.id)}>\n                        <DeleteIcon fontSize=\"small\" />\n                    </IconButton>\n                </Box>\n                <TextField\n                    label=\"持续时间 (ms)\"\n                    type=\"number\"\n                    size=\"small\"\n                    value={action.duration}\n                    onChange={(e) => onUpdate(action.id, { duration: parseInt(e.target.value, 10) || 0 })}\n                    fullWidth\n                />\n                {action.type === 'sound' && (\n                    <Box sx={{ display: 'flex', gap: 1, alignItems: 'center' }}>\n                        <FormControl size=\"small\" fullWidth>\n                            <InputLabel>音频</InputLabel>\n                            <Select\n                                value={action.resourceId}\n                                label=\"音频\"\n                                onChange={(e) => onUpdate(action.id, { resourceId: e.target.value })}\n                            >\n                                {defaultSoundResources.map(res => (\n                                    <MenuItem key={res.id} value={res.id}>{res.name}</MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                        <IconButton \n                            aria-label=\"preview sound\" \n                            onClick={() => handlePreviewSound(action.resourceId)}\n                            size=\"small\"\n                        >\n                            <PlayIcon />\n                        </IconButton>\n                    </Box>\n                )}\n            </Stack>\n        </Paper>\n    );\n};\n\n\n// --- Main Component ---\nconst PreAlarmConfigComponent: React.FC = () => {\n    const [config, setConfig] = useState<PreAlarmConfig | null>(null);\n\n    const debouncedWrite = useCallback(debounce((newConfig: PreAlarmConfig) => {\n        autoJsStoreUtils.write(PRE_ALARM_CONFIG_KEY, newConfig);\n    }, 500), []);\n\n    useEffect(() => {\n        const fetchConfig = async () => {\n            const storedConfig = await autoJsStoreUtils.read<PreAlarmConfig>(PRE_ALARM_CONFIG_KEY);\n            if (storedConfig && typeof storedConfig === 'object') {\n                const actionsWithIds = storedConfig.actions.map(a => ({ ...a, id: a.id || Math.random().toString(36).substr(2, 9) }));\n                setConfig({ ...storedConfig, actions: actionsWithIds });\n            } else {\n                setConfig({\n                    enabled: true,\n                    maxWaitDuration: 30000,\n                    actions: [],\n                });\n            }\n        };\n        fetchConfig();\n    }, []);\n\n    const handleConfigChange = (newConfig: Partial<PreAlarmConfig>) => {\n        setConfig(prev => {\n            if (!prev) return null;\n            const updatedConfig = { ...prev, ...newConfig };\n            debouncedWrite(updatedConfig);\n            return updatedConfig;\n        });\n    };\n\n    const handleAddAction = (type: 'sound' | 'vibration') => {\n        const newAction: PreAlarmAction = {\n            id: `action-${Date.now()}`, // More robust ID\n            type,\n            duration: 3000,\n            ...(type === 'sound' && { resourceId: defaultSoundResources[0].id }),\n        };\n        handleConfigChange({ actions: [...(config?.actions || []), newAction] });\n    };\n\n    const handleRemoveAction = (id: string) => {\n        handleConfigChange({ actions: config?.actions.filter(a => a.id !== id) });\n    };\n\n    const handleUpdateAction = (id: string, updates: Partial<Omit<PreAlarmAction, 'id'>>) => {\n        handleConfigChange({\n            actions: config?.actions.map(a => (a.id === id ? { ...a, ...updates } : a)),\n        });\n    };\n\n    const sensors = useSensors(\n        useSensor(PointerSensor),\n        useSensor(KeyboardSensor, {\n            coordinateGetter: sortableKeyboardCoordinates,\n        })\n    );\n\n    const handleDragEnd = (event: DragEndEvent) => {\n        const { active, over } = event;\n        if (over && active.id !== over.id) {\n            setConfig((prev) => {\n                if (!prev) return null;\n                const oldIndex = prev.actions.findIndex(item => item.id === active.id);\n                const newIndex = prev.actions.findIndex(item => item.id === over.id);\n                const newActions = arrayMove(prev.actions, oldIndex, newIndex);\n                \n                // We call handleConfigChange to trigger the debounced write\n                handleConfigChange({ actions: newActions });\n\n                // Return the new state directly for immediate UI update\n                return { ...prev, actions: newActions };\n            });\n        }\n    };\n\n    if (!config) {\n        return <Typography>Loading configuration...</Typography>;\n    }\n\n    return (\n        <Box sx={{ p: 1, margin: 'auto' }}>\n            <Paper elevation={2} sx={{ p: 2 }}>\n                <Typography variant=\"h6\" gutterBottom>\n                    防误触报警设置\n                </Typography>\n\n                <FormControlLabel\n                    control={<Switch checked={config.enabled} onChange={e => handleConfigChange({ enabled: e.target.checked })} />}\n                    label=\"启用防误触功能\"\n                />\n\n                <TextField\n                    label=\"最大等待时间 (毫秒)\"\n                    type=\"number\"\n                    value={config.maxWaitDuration}\n                    onChange={e => handleConfigChange({ maxWaitDuration: parseInt(e.target.value, 10) || 0 })}\n                    fullWidth\n                    margin=\"normal\"\n                />\n\n                <Typography variant=\"subtitle1\" sx={{ mt: 2, mb: 1 }}>\n                    预警动作序列\n                </Typography>\n\n                <DndContext\n                    sensors={sensors}\n                    collisionDetection={closestCenter}\n                    onDragEnd={handleDragEnd}\n                >\n                    <SortableContext\n                        items={config.actions.map(a => a.id)}\n                        strategy={verticalListSortingStrategy}\n                    >\n                        <List disablePadding>\n                            {config.actions.map(action => (\n                                <SortableItem \n                                    key={action.id} \n                                    action={action} \n                                    onUpdate={handleUpdateAction} \n                                    onRemove={handleRemoveAction} \n                                />\n                            ))}\n                        </List>\n                    </SortableContext>\n                </DndContext>\n\n                <Stack direction=\"row\" spacing={1} sx={{ mt: 1 }}>\n                    <Button startIcon={<AddIcon />} onClick={() => handleAddAction('vibration')} variant=\"outlined\" size=\"small\">\n                        添加震动\n                    </Button>\n                    <Button startIcon={<AddIcon />} onClick={() => handleAddAction('sound')} variant=\"outlined\" size=\"small\">\n                        添加声音\n                    </Button>\n                </Stack>\n            </Paper>\n        </Box>\n    );\n};\n\nexport default PreAlarmConfigComponent;","import { Dialog, DialogContent, IconButton } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport CloseIcon from '@mui/icons-material/Close';\n\n// Add a React import for useRef\nimport React from 'react';\nimport { autoJsStoreUtils, autoWebViewJs, isRealInAndroid } from '@droid/android';\n\ninterface PrivacyDialogProps {\n  // open: boolean;\n  // onClose: () => void;\n  // onResult: (agree: boolean) => void;\n  type: string;\n  area: string;\n}\n\ninterface IPrivacyInfo{\n  agree:boolean;\n  disagreeTime:number;\n}\n\nexport function PrivacyDialog({ type, area }: PrivacyDialogProps) {\n  const url = `/privacies/${type}/${area}.html`;\n  const [iframeSrc, setIframeSrc] = useState(url);\n\n  const [open, setOpen] = useState(false);\n  function onClose() {\n    setOpen(false);\n  }\n\n  useEffect(()=>{\n    setIframeSrc(`/privacies/${type}/${area}.html`)\n  }, [type, area]);\n\n  useEffect(() => {\n    const def:IPrivacyInfo = {agree:false, disagreeTime:0}\n    const res = autoJsStoreUtils.read<IPrivacyInfo>(`privacy_${type}`, def);\n    const value:IPrivacyInfo = res && 'agree' in res ? res : def;\n    if(!isRealInAndroid){\n      return;\n    }\n    if(value.agree){\n      return\n    }\n    if(value.disagreeTime && value.disagreeTime != 0 &&  value.disagreeTime + 3 * 24 * 60 * 60 * 1000 > Date.now()){\n      return;\n    }\n    setOpen(true)\n  }, []);\n\n  useEffect(() => {\n    const handleMessage = (event: MessageEvent) => {\n      // Basic security check: ensure the message is from a trusted source if possible\n      // For now, we check the data structure.\n      if (event.source !== iframeRef.current?.contentWindow) {\n        return;\n      }\n\n      const { sender, agree } = event.data;\n\n      if (sender === 'privacy_page') {\n        console.log(`Received privacy decision: ${agree ? 'Agreed' : 'Disagreed'}`);\n\n        const value:IPrivacyInfo = {\n          agree,\n          disagreeTime: agree ? 0 : Date.now()\n        }\n        autoJsStoreUtils.write(`privacy_${type}`, value);\n        const s = `\n        var data = new com.fanfanlo.emergencycall.data.PrivacyData(${value.agree}, ${value.disagreeTime});\n        com.fanfanlo.emergencycall.data.PrivacyStateHolder.updateMainPrivacyByJs(data);\n        `\n        autoWebViewJs.callScript(s);\n\n        // onResult(agree);\n        onClose();\n      }\n    };\n\n    window.addEventListener('message', handleMessage);\n\n    return () => {\n      window.removeEventListener('message', handleMessage);\n    };\n  }, []);\n\n  const iframeRef = React.useRef<HTMLIFrameElement>(null);\n\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      PaperProps={{\n        sx: {\n          width: '80%',\n          height: '80%',\n          maxWidth: 'none',\n        },\n      }}>\n      <IconButton\n        aria-label=\"close\"\n        onClick={onClose}\n        sx={{\n          position: 'absolute',\n          right: 8,\n          top: 8,\n          color: theme => theme.palette.grey[500],\n        }}>\n        <CloseIcon />\n      </IconButton>\n      <DialogContent sx={{ padding: 0, overflow: 'hidden' }}>\n        {iframeSrc && (\n          <iframe\n            ref={iframeRef}\n            src={iframeSrc}\n            style={{ width: '100%', height: '100%', border: 'none' }}\n            title={`Privacy Policy - ${type}/${area}`}\n          />\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n}\n\n\n","import { useEffect, useState } from \"react\";\r\nimport { PrivacyDialog } from \"./PrivacyDialog\";\r\nimport { autoJsStoreUtils } from \"@droid/android\";\r\n\r\n\r\nexport function ListenShowPrivacyContent({type}:{type:string}){\r\n\r\n    const [open, setOpen] = useState(false);\r\n    function onClose() {\r\n        setOpen(false);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        const value = autoJsStoreUtils.read(`privacy_${type}`, false)\r\n        console.log('privacy value is', value, typeof value);\r\n    }, [])\r\n    return(\r\n        <PrivacyDialog type={type} area=\"zh-cn\" />\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\nimport { Box, TextField, Button, Typography, Paper } from '@mui/material';\nimport { autoWebViewJs } from '@droid/android';\n\n\n\nexport const SensorMonitor: React.FC = () => {\n  const [threshold, setThreshold] = useState<string>('15.0');\n  const [isMonitoring, setIsMonitoring] = useState<boolean>(false);\n\n  // Effect to fetch the initial monitoring state from Android\n  useEffect(() => {\n    try {\n      const script = `\n      var isMonitoring = com.fanfanlo.emergencycall.manager.SensorManager.isMonitoring();\n      isMonitoring;`;\n      const result = autoWebViewJs.callScript(script);\n      if (typeof result === 'boolean') {\n        setIsMonitoring(result);\n      }\n    } catch (error) {\n      console.error('Error fetching initial monitoring state:', error);\n    }\n  }, []);\n\n  const handleSetThreshold = () => {\n    const thresholdValue = parseFloat(threshold);\n    if (isNaN(thresholdValue)) {\n      alert('请输入一个有效的数字作为阈值。');\n      return;\n    }\n    try {\n      // This script now ONLY updates the threshold.\n      const script = `com.fanfanlo.emergencycall.manager.SensorManager.updateThreshold(${thresholdValue});`;\n      autoWebViewJs.callScript(script);\n      alert(`阈值已设置为: ${thresholdValue}`);\n    } catch (error) {\n      console.error('Error calling updateThreshold:', error);\n      alert('设置阈值失败。请确保您在安卓应用中。');\n    }\n  };\n\n  const handleToggleMonitoring = () => {\n    try {\n      if (isMonitoring) {\n        const script = `com.fanfanlo.emergencycall.manager.SensorManager.stopMonitoring();`;\n        autoWebViewJs.callScript(script);\n        setIsMonitoring(false);\n      } else {\n        const script = `com.fanfanlo.emergencycall.manager.SensorManager.startMonitoring();`;\n        autoWebViewJs.callScript(script);\n        setIsMonitoring(true);\n      }\n    } catch (error) {\n      console.error('Error toggling monitoring:', error);\n      alert('切换监控状态失败。请确保您在安卓应用中。');\n    }\n  };\n\n  return (\n    <Paper elevation={3} sx={{ padding: 2, margin: 2 }}>\n      <Typography variant=\"h6\" gutterBottom>\n        传感器监控控制\n      </Typography>\n      <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, marginBottom: 2 }}>\n        <TextField\n          label=\"震动阈值\"\n          variant=\"outlined\"\n          type=\"number\"\n          value={threshold}\n          onChange={(e) => setThreshold(e.target.value)}\n          size=\"small\"\n        />\n        <Button variant=\"contained\" onClick={handleSetThreshold}>\n          设置\n        </Button>\n      </Box>\n      <Button\n        variant=\"contained\"\n        color={isMonitoring ? 'error' : 'primary'}\n        onClick={handleToggleMonitoring}\n        fullWidth\n      >\n        {isMonitoring ? '停止监控' : '开始监控'}\n      </Button>\n    </Paper>\n  );\n};\n\nexport default SensorMonitor;\n\n\n","import { autoWebViewJs } from \"@droid/android\";\r\nimport { Box, Button } from \"@mui/material\";\r\n\r\n\r\nexport function TestEmergencyCall() {\r\n    function onClick(){\r\n        const script = `\r\n        var instance = com.fanfanlo.emergencycall.service.SensorMonitoringService.instance;\r\n        if(instance){\r\n            instance.triggerEmergencyCall();\r\n        }\r\n        `\r\n        autoWebViewJs.callScript(script);\r\n    }\r\n    return(\r\n        <Box sx={{mt:\"10px\", mb:\"10px\"\r\n        }}>\r\n            <Button onClick={onClick}>\r\n                测试医疗呼救\r\n            </Button>\r\n        </Box>  \r\n    )\r\n}","import { AppShell, TabbarContainer } from '@app/ui';\nimport { MeetingRoom5 } from '@im/livekit';\nimport { IMOpenPageLink } from '@im/matrix';\nimport { Box, Button } from '@mui/material';\nimport { InviteContactDialog } from '@src/components/dialogs/InviteContactDialog';\nimport { JpushIsInitialized } from '@src/components/jpush/IsInitialized';\nimport { NavBar } from '@src/components/navbar/NavBar';\nimport PreAlarmConfigComponent from '@src/components/pre-alarm-config';\nimport { ListenShowPrivacyContent } from '@src/components/privacies/ListenShowPrivacyContent';\nimport { SensorMonitor } from '@src/components/sensor-monitor/SensorMonitor';\nimport { TestEmergencyCall } from '@src/components/test/TestEmergencyCall';\nimport { mainModel } from '@src/libs/mc/main/MainModel';\nimport { useState } from 'react';\n\nfunction Content() {\n  const [openInviteDialog, setOpenInviteDialog] = useState(false);\n\n  return (\n    <Box sx={{ my: 2, p: 2 }}>\n        <ListenShowPrivacyContent type=\"main\" />\n      <PreAlarmConfigComponent />\n      <JpushIsInitialized />\n      <TestEmergencyCall />\n      <Button variant=\"contained\" onClick={() => setOpenInviteDialog(true)}>\n        邀请紧急联系人\n      </Button>\n      <SensorMonitor />\n      {openInviteDialog && (\n        <InviteContactDialog \n          open={openInviteDialog} \n          onClose={() => setOpenInviteDialog(false)} \n        />\n      )}\n\n      <MeetingRoom5\n        roomName=\"test-room\"\n        userName={`user-${Math.random().toString(36).substring(2, 8)}`}\n        livekitConfig={mainModel.appConfig.livekit}\n        // role=\"initiator\" // Add role for testing\n      />\n      <IMOpenPageLink />\n    </Box>\n  );\n}\n\nexport default function Home() {\n  return (\n    <AppShell>\n      <TabbarContainer titleConf={{ ns: 'emergency-call/pages/home/content', key: 'home.title' }} navBar={<NavBar />}>\n        <Content />\n      </TabbarContainer>\n    </AppShell>\n  );\n}\n\n","import { Box, Button, Container } from '@mui/material';\r\nimport { createContext, PropsWithChildren, useContext, useEffect } from 'react';\r\nimport { ITitleI18nConf, ITitleI18nNsConf, ITitleI18nTitleConf } from '.';\r\nimport { isBuild, isDev, isServer, loadI18nValue, publicRuntimeConfig } from '@fanfanlo';\r\nimport { read } from 'fs';\r\nimport { useTranslation } from '@fanfanlo';\r\n\r\n\r\nfunction Reload(){\r\n  if(!isDev)return <>  </>\r\n  const {t} = useTranslation(\"app-ui/components/page/content\")\r\n  return(\r\n    <Box>\r\n      <Button onClick={() => {window.location.reload()}}>{t(\"PageContent.refresh\")}</Button>\r\n      {new Date().toLocaleString()}\r\n    </Box>\r\n  )\r\n}\r\n\r\nconst ScrollP = createContext({ x: 0, y: 0 });\r\nlet index = 0;\r\nexport default function PageContent({ children, titleConf, reload }: {titleConf?:ITitleI18nConf, reload?: boolean} & PropsWithChildren) {\r\n  index++;\r\n  const scroll = useContext(ScrollP);\r\n  const clazz = `${Date.now() + Math.random() * Date.now()}`;\r\n  useEffect(()=>{\r\n    async function loadTitle(){\r\n      if(!titleConf)return\r\n      let title = titleConf.title\r\n      if(titleConf.ns){\r\n        title = await loadI18nValue(titleConf.ns, titleConf.key || \"content.title\")\r\n      }\r\n      if(!title)return\r\n      document.title = title\r\n    }\r\n    loadTitle()\r\n  }, [])\r\n  useEffect(() => {\r\n    const container = document.getElementsByClassName(clazz)[0];\r\n    if (!container) return;\r\n    container.scrollTop = scroll.y;\r\n    const onScroll = () => {\r\n      var scrollTop = container.scrollTop;\r\n      scroll.y = scrollTop;\r\n    };\r\n    container.removeEventListener('scroll', onScroll);\r\n    container.addEventListener('scroll', onScroll, { passive: true });\r\n    return () => container.removeEventListener('scroll', onScroll);\r\n  }, [clazz, scroll]);\r\n  return (\r\n\r\n    <Container className={clazz} sx={{ flexGrow: 1, overflow: 'auto', padding: \"0px\" }}>\r\n      <Box>\r\n        {(reload || (reload == undefined)) && <Reload />}\r\n        \r\n        {children}\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import { PropsWithChildren } from \"react\";\r\nimport PageContent from \"./PageContent\";\r\nimport { ITitleI18nConf } from \".\";\r\nexport default function AndroidPageContent({ children, titleConf, reload }: {titleConf?:ITitleI18nConf, reload?: boolean} & PropsWithChildren)  {\r\n    return (\r\n        <PageContent titleConf={titleConf} reload={reload}>\r\n            {children}\r\n        </PageContent>\r\n    )\r\n}\r\n","'use client';\r\nimport { BottomNavigation, BottomNavigationAction, Box, CssBaseline, Paper, Stack } from '@mui/material';\r\n\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport StorefrontIcon from '@mui/icons-material/Storefront';\r\nimport { useRouter } from 'next/router';\r\nimport React, { PropsWithChildren } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ITitleI18nConf } from '../page';\r\nimport AndroidPageContent from '../page/AndroidPageContent';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\n// interface TabInfoType {\r\n//   label: string;\r\n//   value: string;\r\n//   icon: React.ReactNode;\r\n// }\r\n\r\nfunction BottomBar({navBar}:{navBar?:React.ReactNode}) {\r\n  return <Paper\r\n    id=\"bottom-navigation\"\r\n    sx={{ position: 'fixed', bottom: 0, left: 0, right: 0 }}\r\n    elevation={3}>\r\n    {/* <NavBar /> */}\r\n    {navBar}\r\n  </Paper>;\r\n}\r\n// function NavBar() {\r\n//   const router = useRouter();\r\n//   const { pathname } = router;\r\n//   const { t } = useTranslation('app-ui/components/tabbar/content');\r\n//   const tabInfoList: TabInfoType[] = [\r\n//     { label: t('content.home'), value: '/', icon: <HomeIcon /> },\r\n//     // { label: t('content.create'), value: '/script-creator', icon: <CreateIcon /> },\r\n//     // { label: t('content.market'), value: '/market', icon: <StorefrontIcon /> },\r\n//     { label: t('content.settings'), value: '/settings', icon: <SettingsIcon /> },\r\n//   ];\r\n//   return (\r\n\r\n//     <BottomNavigation showLabels value={pathname}>\r\n//       {tabInfoList.map(e => (\r\n//         <BottomNavigationAction\r\n//           key={e.value}\r\n//           label={e.label}\r\n//           icon={e.icon}\r\n//           data-id={`tabbar-${e.value}`}\r\n//           className={pathname === e.value ? 'Mui-selected' : ''}\r\n//           onClick={() => {\r\n//             if (pathname === e.value) return;\r\n//             router.push(e.value);\r\n//           }}\r\n//         />\r\n//       ))}\r\n//     </BottomNavigation>\r\n//   );\r\n// }\r\n\r\n\r\n// testWatchUpdates()\r\nexport function TabbarContainer({ children, titleConf, navBar }: {titleConf?:ITitleI18nConf, navBar:React.ReactNode} & PropsWithChildren)  {\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', height2: '100vh' }}>\r\n      <CssBaseline />\r\n      <Stack direction={\"column\"} spacing={3}\r\n      \r\n      >\r\n        <AndroidPageContent titleConf={titleConf}>\r\n          {children}\r\n        </AndroidPageContent>\r\n        <BottomBar navBar={navBar} />\r\n      </Stack>\r\n    </Box>\r\n  );\r\n}\r\n\r\n"],"names":["useRouter","useTranslation","HomeIcon","SettingsIcon","BottomNavigation","BottomNavigationAction","NavBar","router","pathname","t","tabInfoList","label","value","icon","showLabels","map","e","data-id","className","onClick","push","initReactI18next","LanguageDetector","Backend","i18next","Log","getBuildTime","isServer","fileDateVersion","i18nLogger","windowHref","window","u","URL","location","href","parent","origin","backendOptions","loadPath","lngs","namespaces","log","sub","pause","lng","p","ps","split","splice","length","join","parse","data","languages","l","JSON","print","backend","init","i18n","on","i18nInit","_fileDateVersion","use","load","fallbackLng","partialBundledLanguages","ns","debug","interpolation","escapeValue","detection","caches","namespace","key","res","console","error","loaded","msg","arguments","createContext","storeUtils","s","create","StorePageContext","StorePageDynamicContext","toProxy","watchUpdates","getConfig","useEffect","I18nextProvider","checkReloadPage","publicRuntimeConfig","isDevelopment","searchParams","htmlRefreshTime","get","newUrl","set","String","Date","now","toString","refreshTime","Number","AppShell","children","scrollKey","dynamicKey","o","read","write","beforePopState","state","clearAll","info","x","y","listenScroll","requestAnimationFrame","scrollTo","onScroll","scrollX","scrollY","addEventListener","unsub","removeEventListener","React","useCallback","useRef","useState","forwardRef","Room","RoomEvent","RemoteParticipant","RemoteTrack","Track","createLocalAudioTrack","createLocalVideoTrack","Box","Button","Typography","Alert","IconButton","CircularProgress","Grid","Mic","MicIcon","MicOff","MicOffIcon","Videocam","VideoIcon","VideocamOff","VideoOffIcon","CallEnd","CallEndIcon","VolumeUp","VolumeUpIcon","VolumeOff","VolumeOffIcon","Refresh","RefreshIcon","Visibility","VisibilityIcon","VisibilityOff","VisibilityOffIcon","logger","uiLogger","VIDEO_PRESET","width","height","frameRate","maxBitrate","MeetingRoomComponent","ref","livekitConfig","roomName","userName","onDisconnect","onError","style","sx","directly","globalMediaState","setGlobalMediaState","isAudioEnabled","isVideoEnabled","remoteMediaState","setRemoteMediaState","isAudioSubscribed","isVideoSubscribed","toggleRemoteAudio","newState","prev","from","to","roomRef","current","participantCount","remoteParticipants","size","forEach","participant","identity","audioTrackCount","trackPublications","publication","kind","Kind","Audio","trackSid","isSubscribed","setSubscribed","toggleRemoteVideo","videoTrackCount","Video","handleParticipantConnected","audioSubscribed","videoSubscribed","audioTracksProcessed","videoTracksProcessed","isAudio","shouldSubscribe","audioTracks","videoTracks","setParticipants","exists","some","localTracksRef","videoElements","audioElements","participantStates","setParticipantStates","isUnmountedRef","isConnecting","setIsConnecting","hasConnected","setHasConnected","setError","isMuted","setIsMuted","setIsVideoEnabled","participants","fetchToken","response","fetch","jwt","method","headers","body","stringify","room_name","ok","Error","json","token","connectToRoom","audioTrack","videoTrack","createLocalTracks","room","adaptiveStream","dynacast","videoCaptureDefaults","resolution","publishDefaults","dtx","red","forceStereo","simulcast","setupRoomListeners","connect","wsUrl","autoSubscribe","Promise","all","localParticipant","publishTrack","publishError","Array","values","updateParticipantState","initParticipantState","getTrackPublications","track","handleTrackSubscribed","cleanupTracks","disconnect","echoCancellation","noiseSuppression","autoGainControl","tracks","stop","detach","trackElementsRef","videoElementsRef","audioElementsRef","isAudioEnabledGlobal","isVideoEnabledGlobal","isVideoTrack","updateTrackState","stateUpdate","participantExists","off","eventHandlers","participantConnected","handleTrackPublished","once","participantDisconnected","newParticipants","filter","trackSubscribed","disconnected","reason","reasonStr","reconnecting","reconnected","Disconnected","Reconnecting","Reconnected","ParticipantConnected","ParticipantDisconnected","TrackSubscribed","undefined","leaveMeeting","Object","el","remove","cleanup","isUnmounting","find","updateGlobalMediaState","audioEnabled","videoEnabled","toggleMute","newGlobalAudioState","unmute","mute","toggleVideo","newGlobalVideoState","handleLocalMuteToggle","newMutedState","handleLocalVideoToggle","newVideoState","getParticipantState","pub","handleToggleAudio","currentState","handleToggleVideo","getEffectiveMediaState","participantId","ParticipantVideo","memo","isLocal","videoRef","setVideoTrack","videoPublication","handleTrackUnsubscribed","TrackUnsubscribed","videoElement","firstChild","removeChild","attach","aspectRatio","bgcolor","display","alignItems","justifyContent","position","video","autoPlay","playsInline","muted","objectFit","top","left","right","bottom","borderRadius","color","fontSize","fontWeight","charAt","toUpperCase","ParticipantAudio","audioRef","setAudioTrack","audioPublication","audioElement","audio","renderParticipant","effectiveState","overflow","boxShadow","container","gap","item","variant","title","renderControlButtons","renderMainContent","flexDirection","flex","spacing","xs","md","borderTop","borderColor","gutterBottom","disabled","startIcon","mt","ml","content","severity","m","MeetingRoom5","displayName","request","tms","tmsEmcInviteContacts","opts","TEmc","MEmcInviteContacts","params","gateway","handler","tmsEmcGetContactTypes","MEmcGetContactTypes","Dialog","DialogActions","DialogContent","DialogTitle","TextField","Autocomplete","user","toast","matrixUser","authService","useProxyWatch","fileLogger","isValidIdentity","text","test","is11DigitNumber","InviteContactDialog","open","onClose","onInviteSent","contacts","setContacts","remark","setRemark","callType","setCallType","availableCallTypes","setAvailableCallTypes","message","setMessage","isLoading","setIsLoading","isTypesLoading","setIsTypesLoading","pendingParams","setPendingParams","executionLock","accessToken","userData","userInfo","loginResponse","access_token","isUserLoggedIn","sessionData","global_user_info","finalParams","matrix_access_token","type","executeApiCall","responseData","printLog","err","shellIsOk","dataIsOk","errorMessage","results","successResults","r","result_code","infoResults","errorResults","success","infoMessages","Boolean","errorMessages","fetchCallTypes","types","formattedTypes","id","uuid","name","is_system","defaultType","warn","handleSendInvitation","contactInputs","c","trim","contactIdentities","input","identityType","appLoggedIn","showLoginDialog","currentAccessToken","apiParams","maxWidth","fullWidth","component","autoFocus","margin","multiline","rows","placeholder","onChange","target","freeSolo","options","option","event","newValue","inputValue","onInputChange","newInputValue","disablePortal","disableClearable","forcePopupIcon","mb","renderInput","InputProps","endAdornment","ListboxProps","maxHeight","autoWebViewJs","JpushIsInitialized","isInitialized","setIsInitialized","refresh","script","javaResultData","callScript","span","Switch","FormControlLabel","List","Paper","Select","MenuItem","FormControl","InputLabel","Chip","Stack","DndContext","closestCenter","KeyboardSensor","PointerSensor","useSensor","useSensors","arrayMove","SortableContext","sortableKeyboardCoordinates","useSortable","verticalListSortingStrategy","CSS","Delete","DeleteIcon","Add","AddIcon","DragIndicator","DragIndicatorIcon","PlayCircleOutline","PlayIcon","debounce","autoJsStoreUtils","PRE_ALARM_CONFIG_KEY","defaultSoundResources","SortableItem","action","onUpdate","onRemove","attributes","listeners","setNodeRef","transform","transition","isDragging","Transform","zIndex","handlePreviewSound","elevation","border","userSelect","cursor","alignSelf","pt","touchAction","flexGrow","aria-label","duration","parseInt","resourceId","PreAlarmConfigComponent","config","setConfig","debouncedWrite","newConfig","fetchConfig","storedConfig","actionsWithIds","actions","a","Math","random","substr","enabled","maxWaitDuration","handleConfigChange","updatedConfig","handleAddAction","newAction","handleRemoveAction","handleUpdateAction","updates","sensors","coordinateGetter","handleDragEnd","active","over","oldIndex","findIndex","newIndex","newActions","control","checked","collisionDetection","onDragEnd","items","strategy","disablePadding","direction","CloseIcon","isRealInAndroid","PrivacyDialog","area","url","iframeSrc","setIframeSrc","setOpen","def","agree","disagreeTime","handleMessage","iframeRef","source","contentWindow","sender","PaperProps","theme","palette","grey","padding","iframe","src","ListenShowPrivacyContent","SensorMonitor","threshold","setThreshold","isMonitoring","setIsMonitoring","result","handleSetThreshold","thresholdValue","parseFloat","isNaN","alert","handleToggleMonitoring","marginBottom","TestEmergencyCall","TabbarContainer","IMOpenPageLink","mainModel","Content","openInviteDialog","setOpenInviteDialog","my","substring","appConfig","livekit","Home","titleConf","navBar","Container","useContext","isDev","loadI18nValue","Reload","reload","toLocaleString","ScrollP","index","PageContent","scroll","clazz","loadTitle","document","getElementsByClassName","scrollTop","passive","AndroidPageContent","CssBaseline","BottomBar","height2"],"sourceRoot":"","ignoreList":[1,10]}