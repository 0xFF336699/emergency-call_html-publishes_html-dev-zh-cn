{"version":3,"file":"static/chunks/pages/contacts-e498b38b4485ba18.js","mappings":"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","sources":["webpack://_N_E/./src/components/navbar/NavBar.tsx","webpack://_N_E/?32db","webpack://_N_E/./src/components/InvitationManager/InvitationManager.tsx","webpack://_N_E/../../libs/app/model/src/remote/emergency-call/list_established_contacts.ts","webpack://_N_E/./src/components/EstablishedContactsManager/EstablishedContactsManager.tsx","webpack://_N_E/./src/components/ContactRelationshipManager/ContactRelationshipManager.tsx","webpack://_N_E/./src/pages/contacts/index.tsx","webpack://_N_E/../../libs/app/model/src/remote/emergency-call/list_all_invitations.ts","webpack://_N_E/../../libs/app/ui/src/components/tabbar/Tabbar.tsx"],"sourcesContent":["import { useRouter } from 'next/router';\nimport { nextPreload, useTranslation } from '@fanfanlo';\nimport { styled } from '@mui/material/styles';\nimport HomeIcon from '@mui/icons-material/Home';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport ListIcon from '@mui/icons-material/List';\nimport { BottomNavigation, BottomNavigationAction, Box } from '@mui/material';\nimport React from 'react';\n\nconst StyledBottomNavigation = styled(BottomNavigation)(({ theme }) => ({\n  backgroundColor: theme.palette.background.paper,\n  boxShadow: '0 -2px 12px rgba(0, 0, 0, 0.08)',\n  height: 72,\n  borderTopLeftRadius: 16,\n  borderTopRightRadius: 16,\n  '& .Mui-selected': {\n    color: theme.palette.primary.main,\n    '& .MuiBottomNavigationAction-label': {\n      fontSize: '0.75rem',\n      fontWeight: 600,\n      marginTop: '4px',\n    },\n  },\n  '& .MuiBottomNavigationAction-root': {\n    minWidth: 'auto',\n    padding: '8px 12px',\n    transition: 'all 0.2s ease',\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.02)',\n    },\n    '& .MuiBottomNavigationAction-label': {\n      fontSize: '0.7rem',\n      opacity: 0.9,\n      transition: 'all 0.2s ease',\n    },\n  },\n}));\n\ninterface TabInfoType {\n  label: string;\n  value: string;\n  icon: React.ReactNode;\n}\n\nexport function NavBar() {\n  const router = useRouter();\n  const { pathname } = router;\n  const { t } = useTranslation('emergency-call/components/navbar/content');\n  const tabInfoList: TabInfoType[] = [\n    { label: t('NavBar.home'), value: '/', icon: <HomeIcon /> },\n    { label: t('NavBar.settings'), value: '/settings', icon: <SettingsIcon /> },\n  ];\n\n  React.useEffect(() => {\n    nextPreload(router, '/settings')\n    nextPreload(router, '/')\n  }, [])\n\n  return (\n    <Box sx={{ position: 'fixed', bottom: 0, left: 0, right: 0, zIndex: 1000 }}>\n      <StyledBottomNavigation \n        showLabels \n        value={pathname}\n        onChange={(_, newValue) => {\n          if (pathname !== newValue) {\n            router.push(newValue);\n          }\n        }}\n      >\n        {tabInfoList.map((e) => {\n          const isSelected = pathname === e.value;\n          return (\n            <BottomNavigationAction\n              key={e.value}\n              value={e.value}\n              label={e.label}\n              icon={\n                <Box\n                  sx={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    padding: '6px 0',\n                  }}\n                >\n                  {e.icon}\n                </Box>\n              }\n              data-id={`tabbar-${e.value}`}\n              sx={{\n                minWidth: 'auto',\n                '&.Mui-selected': {\n                  color: (theme) => theme.palette.primary.main,\n                  '& .MuiSvgIcon-root': {\n                    transform: 'scale(1.1)',\n                  },\n                },\n                '& .MuiSvgIcon-root': {\n                  fontSize: '1.6rem',\n                  marginBottom: '2px',\n                  transition: 'transform 0.2s ease',\n                },\n              }}\n            />\n          );\n        })}\n      </StyledBottomNavigation>\n    </Box>\n  );\n}","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/contacts\",\n      function () {\n        return require(\"private-next-pages/contacts/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/contacts\"])\n      });\n    }\n  ","import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport {\n  Box,\n  Typography,\n  Button,\n  Card,\n  CardContent,\n  CardActions,\n  CircularProgress,\n  Divider,\n  Avatar,\n  Chip,\n  Paper,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n} from '@mui/material';\nimport {\n  Check as CheckIcon,\n  Close as CloseIcon,\n  AccessTime as AccessTimeIcon,\n  PersonAdd as PersonAddIcon,\n  Person as PersonIcon,\n  Refresh as RefreshIcon,\n  PersonRemove as PersonRemoveIcon,\n  HourglassEmpty as HourglassEmptyIcon,\n} from '@mui/icons-material';\nimport { formatDistanceToNow } from 'date-fns';\nimport { zhCN } from 'date-fns/locale';\nimport { emergencyCallInvitationService, cancelOrRemoveInvitation, InviteStatus } from '@app/model';\n\n// 定义请求处理器类型\ntype RequestHandler<T = any> = {\n  onSuccess: (res: T) => void;\n  onError: (err: Error) => void;\n};\n\n// 定义邀请接口\ninterface IInvitation {\n  invitation_id: string;\n  user_info: {\n    user_id: string;\n    display_name: string;\n    avatar_url?: string;\n  };\n  message?: string;\n  status: InviteStatus;\n  expires_at: number;\n  created_at: string;\n}\n\n// 定义 API 响应类型\ninterface IApiResponse<T = any> {\n  shellIsOk: boolean;\n  dataIsOk: boolean;\n  data?: {\n    is_ok: boolean;\n    msg?: string;\n    sent_invitations?: IInvitation[];\n    received_invitations?: IInvitation[];\n  } & T;\n}\n\n// 获取状态标签的配置\nconst getStatusConfig = (status: InviteStatus, expiresAt: number) => {\n  const isExpired = new Date(expiresAt * 1000) < new Date();\n  const statusTexts: Record<InviteStatus, string> = {\n    pending: '等待处理',\n    accepted: '已接受',\n    declined: '已拒绝',\n    expired: '已过期',\n    cancelled: '已取消',\n  };\n\n  const statusColors: Record<InviteStatus, 'default' | 'primary' | 'success' | 'error' | 'warning'> = {\n    pending: 'primary',\n    accepted: 'success',\n    declined: 'error',\n    expired: 'default',\n    cancelled: 'default',\n  };\n\n  return {\n    text: statusTexts[status] || status,\n    color: statusColors[status] || 'default',\n    isExpired,\n    showExpiry: status === 'pending' && !isExpired,\n  };\n};\n\n// 邀请状态标签组件\nfunction InvitationStatusChip({ status, expiresAt }: { status: InviteStatus; expiresAt: number }) {\n  const config = getStatusConfig(status, expiresAt);\n\n  return (\n    <Box display=\"flex\" alignItems=\"center\" gap={1}>\n      <Chip size=\"small\" label={config.text} color={config.color} variant=\"outlined\" />\n      {config.showExpiry && (\n        <Chip\n          size=\"small\"\n          icon={<AccessTimeIcon fontSize=\"small\" />}\n          label={`${formatDistanceToNow(expiresAt * 1000, {\n            addSuffix: true,\n            locale: zhCN,\n          })}`}\n          color=\"primary\"\n          variant=\"outlined\"\n        />\n      )}\n    </Box>\n  );\n}\n\n// 用户信息卡片组件\nfunction UserInfoCard({\n  userInfo,\n  message,\n  status,\n  expiresAt,\n  isReceived = false,\n  onRespond,\n  isProcessing = false,\n}: {\n  userInfo: { user_id: string; display_name: string; avatar_url?: string };\n  message?: string;\n  status: string;\n  expiresAt: number;\n  isReceived?: boolean;\n  onRespond?: (action: 'accept' | 'decline' | 'cancel' | 'remove') => Promise<void>;\n  isProcessing?: boolean;\n}) {\n  const [isProcessingAction, setIsProcessingAction] = useState(false);\n\n  const handleRespond = async (action: 'accept' | 'decline' | 'cancel' | 'remove') => {\n    if (!onRespond) return;\n\n    try {\n      setIsProcessingAction(true);\n      await onRespond(action);\n    } finally {\n      setIsProcessingAction(false);\n    }\n  };\n\n  return (\n    <Card variant=\"outlined\" sx={{ mb: 2, opacity: isProcessing ? 0.7 : 1 }}>\n      <CardContent>\n        <Box display=\"flex\" alignItems=\"center\" mb={1}>\n          <Avatar src={userInfo.avatar_url} alt={userInfo.display_name} sx={{ width: 40, height: 40, mr: 2 }}>\n            {userInfo.display_name?.[0]?.toUpperCase() || '?'}\n          </Avatar>\n          <Box flexGrow={1}>\n            <Typography variant=\"subtitle1\">{userInfo.display_name || '未知用户'}</Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              ID: {userInfo.user_id}\n            </Typography>\n          </Box>\n          <InvitationStatusChip status={status} expiresAt={expiresAt} />\n        </Box>\n\n        {message && (\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1, mb: 1 }}>\n            {message}\n          </Typography>\n        )}\n      </CardContent>\n\n      {isReceived ? (\n        // 接收的邀请\n        <CardActions sx={{ justifyContent: 'flex-end', pt: 0 }}>\n          {status === 'pending' ? (\n            // 待处理的邀请：显示接受/拒绝按钮\n            <>\n              <Button\n                size=\"small\"\n                color=\"error\"\n                startIcon={<CloseIcon />}\n                onClick={() => handleRespond('decline')}\n                disabled={isProcessing || isProcessingAction}>\n                拒绝\n              </Button>\n              <Button\n                size=\"small\"\n                color=\"primary\"\n                variant=\"contained\"\n                startIcon={<CheckIcon />}\n                onClick={() => handleRespond('accept')}\n                disabled={isProcessing || isProcessingAction}>\n                接受\n              </Button>\n            </>\n          ) : status === 'accepted' ? (\n            // 已接受的邀请：显示解除关系按钮\n            <Button\n              size=\"small\"\n              color=\"error\"\n              variant=\"outlined\"\n              startIcon={<PersonIcon />}\n              onClick={() => handleRespond('remove')}\n              disabled={isProcessing || isProcessingAction}>\n              解除关系\n            </Button>\n          ) : null}\n        </CardActions>\n      ) : status === 'pending' || status === 'accepted' ? (\n        // 发送的邀请：显示取消或解除关系按钮\n        <CardActions sx={{ justifyContent: 'flex-end', pt: 0 }}>\n          <Button\n            size=\"small\"\n            color=\"error\"\n            variant=\"outlined\"\n            startIcon={<CloseIcon />}\n            onClick={() => handleRespond('cancel')}\n            disabled={isProcessing || isProcessingAction}>\n            {status === 'pending' ? '取消邀请' : '解除关系'}\n          </Button>\n        </CardActions>\n      ) : null}\n    </Card>\n  );\n}\n\nconst InvitationManager: React.FC = () => {\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  const [isRefreshing, setIsRefreshing] = useState<boolean>(false);\n  const [invitations, setInvitations] = useState<{\n    sent: IInvitation[];\n    received: IInvitation[];\n  }>({ sent: [], received: [] });\n  const [isProcessing, setIsProcessing] = useState<boolean>(false);\n\n  // 加载邀请列表\n  const loadInvitations = useCallback(async (showLoading = true) => {\n    if (showLoading) {\n      setIsLoading(true);\n    } else {\n      setIsRefreshing(true);\n    }\n    setError(null);\n\n    try {\n      const res = await emergencyCallInvitationService.listAllInvitations({\n        params: {},\n      } as any);\n      \n      if (res.shellIsOk && res.dataIsOk && res.data?.is_ok) {\n        setInvitations({\n          sent: (res.data.sent_invitations || []).map((invite: any) => ({\n            ...invite,\n            status: invite.status as InviteStatus,\n          })),\n          received: (res.data.received_invitations || []).map((invite: any) => ({\n            ...invite,\n            status: invite.status as InviteStatus,\n          })),\n        });\n      } else {\n        setError(res.data?.msg || '加载邀请列表失败');\n      }\n    } catch (err) {\n      console.error('加载邀请列表异常:', err);\n      setError('发生未知错误');\n    } finally {\n      setIsLoading(false);\n      setIsRefreshing(false);\n    }\n  }, []);\n\n  // 处理取消或删除邀请\n  const handleCancelOrRemove = useCallback(\n    async (invitationId: string, isReceived: boolean) => {\n      try {\n        setIsProcessing(true);\n\n        const res = await cancelOrRemoveInvitation(invitationId, isReceived);\n        if (!res.shellIsOk || !res.dataIsOk || !res.data?.is_ok) {\n          throw new Error(res.data?.msg || '操作失败');\n        }\n        // 直接更新状态\n        setInvitations(prev => ({\n          sent: prev.sent.filter(i => i.invitation_id !== invitationId),\n          received: prev.received.filter(i => i.invitation_id !== invitationId),\n        }));\n      } catch (err) {\n        console.error('处理邀请失败:', err);\n        setError(err instanceof Error ? err.message : '操作失败，请重试');\n      } finally {\n        setIsProcessing(false);\n      }\n    },\n    [],\n  );\n\n  // 响应邀请\n  const handleRespondToInvite = useCallback(\n    async (invitationId: string, action: 'accept' | 'decline' | 'cancel' | 'remove'): Promise<void> => {\n      try {\n        setIsProcessing(true);\n\n        if (action === 'accept' || action === 'decline') {\n          // 接受或拒绝邀请\n          const res = await emergencyCallInvitationService.respondToInvite({\n            params: { invitation_id: invitationId, action },\n          } as any);\n\n          if (!res.shellIsOk || !res.dataIsOk || !res.data?.is_ok) {\n            throw new Error(res.data?.msg || '操作失败');\n          }\n          \n          // 直接更新状态\n          setInvitations(prev => {\n            const updateInvitation = (invites: IInvitation[]) =>\n              invites.map(invite =>\n                invite.invitation_id === invitationId\n                  ? {\n                      ...invite,\n                      status: action === 'accept' ? 'accepted' : ('declined' as InviteStatus),\n                    }\n                  : invite,\n              );\n\n            return {\n              sent: updateInvitation(prev.sent),\n              received: updateInvitation(prev.received),\n            };\n          });\n        } else {\n          // 取消邀请或解除关系\n          const isReceived = action === 'remove';\n          await handleCancelOrRemove(invitationId, isReceived);\n        }\n      } catch (err) {\n        console.error('处理邀请失败:', err);\n        setError(err instanceof Error ? err.message : '操作失败，请重试');\n      } finally {\n        setIsProcessing(false);\n      }\n    },\n    [handleCancelOrRemove],\n  );\n\n  // 处理刷新\n  const handleRefresh = useCallback(() => {\n    loadInvitations(false);\n  }, [loadInvitations]);\n\n  // 组件加载时获取数据\n  useEffect(() => {\n    loadInvitations();\n  }, [loadInvitations]);\n\n  const renderContent = () => {\n    if (isLoading) {\n      return (\n        <Box display=\"flex\" justifyContent=\"center\" p={4}>\n          <CircularProgress />\n        </Box>\n      );\n    }\n\n    if (error) {\n      return (\n        <Box p={2}>\n          <Typography color=\"error\">{error}</Typography>\n          <Button variant=\"outlined\" color=\"primary\" onClick={() => loadInvitations()} startIcon={<RefreshIcon />}>\n            重试\n          </Button>\n        </Box>\n      );\n    }\n\n    const hasSentInvitations = invitations.sent.length > 0;\n    const hasReceivedInvitations = invitations.received.length > 0;\n\n    return (\n      <Box>\n        <Typography variant=\"h6\" gutterBottom>\n          收到的邀请\n        </Typography>\n        {hasReceivedInvitations ? (\n          <Box mb={4}>\n            {invitations.received.map(invite => (\n              <UserInfoCard\n                key={`received-${invite.invitation_id}`}\n                userInfo={invite.user_info}\n                message={invite.message}\n                status={invite.status as InviteStatus}\n                expiresAt={invite.expires_at}\n                isReceived={true}\n                onRespond={async action => {\n                  if (action === 'remove') {\n                    await handleCancelOrRemove(invite.invitation_id, true);\n                  } else if (action === 'cancel') {\n                    await handleCancelOrRemove(invite.invitation_id, false);\n                  } else {\n                    await handleRespondToInvite(invite.invitation_id, action);\n                  }\n                }}\n                isProcessing={isRefreshing || isProcessing}\n              />\n            ))}\n          </Box>\n        ) : (\n          <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            p={4}\n            textAlign=\"center\"\n            bgcolor=\"action.hover\"\n            borderRadius={1}\n            mb={4}>\n            <PersonIcon color=\"disabled\" sx={{ fontSize: 48, mb: 1 }} />\n            <Typography color=\"textSecondary\">暂无收到的邀请</Typography>\n          </Box>\n        )}\n\n        <Typography variant=\"h6\" gutterBottom>\n          已发送的邀请\n        </Typography>\n        {hasSentInvitations ? (\n          <Box>\n            {invitations.sent.map(invite => (\n              <UserInfoCard\n                key={`sent-${invite.invitation_id}`}\n                userInfo={invite.user_info}\n                message={invite.message}\n                status={invite.status as InviteStatus}\n                expiresAt={invite.expires_at}\n                isReceived={false}\n                onRespond={async action => {\n                  if (action === 'cancel') {\n                    await handleCancelOrRemove(invite.invitation_id, false);\n                  }\n                }}\n                isProcessing={isRefreshing || isProcessing}\n              />\n            ))}\n          </Box>\n        ) : (\n          <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            p={4}\n            textAlign=\"center\"\n            bgcolor=\"action.hover\"\n            borderRadius={1}>\n            <PersonIcon color=\"disabled\" sx={{ fontSize: 48, mb: 1 }} />\n            <Typography color=\"textSecondary\">暂无已发送的邀请</Typography>\n          </Box>\n        )}\n      </Box>\n    );\n  };\n\n  return (\n    <Box p={2}>\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\n        <Typography variant=\"h5\">紧急联系人邀请</Typography>\n        <Button\n          variant=\"outlined\"\n          size=\"small\"\n          onClick={handleRefresh}\n          disabled={isRefreshing}\n          startIcon={isRefreshing ? <CircularProgress size={20} /> : <RefreshIcon />}>\n          {isRefreshing ? '刷新中...' : '刷新'}\n        </Button>\n      </Box>\n      {renderContent()}\n    </Box>\n  );\n};\n\nexport default InvitationManager;\n","import { IRequestOptions } from \"../IRequestOptions\";\nimport { tms } from \"../tms\";\nimport { request } from \"@fanfanlo\";\n\n/**\n * 获取已建立联系人关系的请求参数\n */\nexport interface IParamsListEstablishedContacts {\n  // 可以添加分页等参数\n  page?: number;\n  page_size?: number;\n}\n\n/**\n * 已建立联系人的用户信息\n */\nexport interface IEstablishedContactUserInfo {\n  user_id: string;\n  display_name: string;\n  avatar_url?: string;\n}\n\n/**\n * 已建立的联系人关系信息\n */\nexport interface IEstablishedContactInfo {\n  contact_id: string;\n  user_info: IEstablishedContactUserInfo;\n  relationship: string;\n  notes?: string;\n  created_at: number;\n  is_active: boolean;\n}\n\n/**\n * 获取已建立联系人关系的响应结果\n */\nexport interface IResultListEstablishedContacts {\n  is_ok: boolean;\n  msg?: string;\n  contacts: IEstablishedContactInfo[];\n}\n\n/**\n * 移除已建立联系人关系的请求参数\n */\nexport interface IParamsRemoveEstablishedContact {\n  contact_id: string;\n}\n\n/**\n * 移除已建立联系人关系的响应结果\n */\nexport interface IResultRemoveEstablishedContact {\n  is_ok: boolean;\n  msg?: string;\n}\n\n/**\n * 获取已建立的联系人关系\n */\nexport async function tmsEmergencyCallListEstablishedContacts(\n  opts: IRequestOptions<IParamsListEstablishedContacts>\n) {\n  return request<IResultListEstablishedContacts, IParamsListEstablishedContacts>(\n    tms.TEmc,\n    tms.MEmcListEstablishedContacts,\n    opts.params,\n    opts.gateway,\n    opts.handler\n  );\n}\n\n/**\n * 移除已建立的联系人关系\n */\nexport async function tmsEmergencyCallRemoveEstablishedContact(\n  opts: IRequestOptions<IParamsRemoveEstablishedContact>\n) {\n  return request<IResultRemoveEstablishedContact, IParamsRemoveEstablishedContact>(\n    tms.TEmc,\n    tms.MEmcRemoveEstablishedContact,\n    opts.params,\n    opts.gateway,\n    opts.handler\n  );\n}\n\n// 导出服务\nexport const emergencyCallContactService = {\n  listEstablishedContacts: tmsEmergencyCallListEstablishedContacts,\n  removeEstablishedContact: tmsEmergencyCallRemoveEstablishedContact,\n};\n\nexport default emergencyCallContactService;","import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  Box,\n  Typography,\n  Button,\n  Card,\n  CardContent,\n  CardActions,\n  CircularProgress,\n  Divider,\n  Avatar,\n  Chip,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  Alert,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  DialogContentText,\n} from '@mui/material';\nimport {\n  Person as PersonIcon,\n  Refresh as RefreshIcon,\n  PersonRemove as PersonRemoveIcon,\n  AccessTime as AccessTimeIcon,\n  ContactPhone as ContactPhoneIcon,\n} from '@mui/icons-material';\nimport { formatDistanceToNow } from 'date-fns';\nimport { zhCN } from 'date-fns/locale';\nimport { emergencyCallContactService, IEstablishedContactInfo, user } from '@app/model';\nimport { useProxyWatch } from '@fanfanlo';\n\n// 定义请求处理器类型\ntype RequestHandler<T = any> = {\n  onData: (res: T) => void;\n  onError: (err: Error) => void;\n};\n\n// 定义 API 响应类型\ninterface IApiResponse<T = any> {\n  shellIsOk: boolean;\n  dataIsOk: boolean;\n  data?: {\n    is_ok: boolean;\n    msg?: string;\n    contacts?: IEstablishedContactInfo[];\n  } & T;\n}\n\n// 联系人卡片组件\nfunction ContactCard({\n  contact,\n  onRemove,\n  isProcessing = false,\n}: {\n  contact: IEstablishedContactInfo;\n  onRemove?: (contactId: string) => Promise<void>;\n  isProcessing?: boolean;\n}) {\n  const [isRemoving, setIsRemoving] = useState(false);\n  const [showRemoveDialog, setShowRemoveDialog] = useState(false);\n\n  const handleRemove = async () => {\n    if (!onRemove) return;\n\n    try {\n      setIsRemoving(true);\n      await onRemove(contact.contact_id);\n      setShowRemoveDialog(false);\n    } finally {\n      setIsRemoving(false);\n    }\n  };\n\n  return (\n    <>\n      <Card variant=\"outlined\" sx={{ mb: 2, opacity: isProcessing ? 0.7 : 1 }}>\n        <CardContent>\n          <Box display=\"flex\" alignItems=\"center\" mb={1}>\n            <Avatar\n              src={contact.user_info.avatar_url}\n              alt={contact.user_info.display_name}\n              sx={{ width: 50, height: 50, mr: 2 }}>\n              {contact.user_info.display_name?.[0]?.toUpperCase() || '?'}\n            </Avatar>\n            <Box flexGrow={1}>\n              <Typography variant=\"h6\">{contact.user_info.display_name || '未知用户'}</Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                ID: {contact.user_info.user_id}\n              </Typography>\n              {contact.relationship && (\n                <Chip size=\"small\" label={contact.relationship} color=\"primary\" variant=\"outlined\" sx={{ mt: 0.5 }} />\n              )}\n            </Box>\n            <Box textAlign=\"right\">\n              <Chip\n                size=\"small\"\n                icon={<AccessTimeIcon fontSize=\"small\" />}\n                label={`${formatDistanceToNow(contact.created_at * 1000, {\n                  addSuffix: true,\n                  locale: zhCN,\n                })}`}\n                color=\"default\"\n                variant=\"outlined\"\n              />\n            </Box>\n          </Box>\n\n          {contact.notes && (\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\n              备注: {contact.notes}\n            </Typography>\n          )}\n        </CardContent>\n\n        <CardActions sx={{ justifyContent: 'flex-end', pt: 0 }}>\n          <Button\n            size=\"small\"\n            color=\"error\"\n            variant=\"outlined\"\n            startIcon={<PersonRemoveIcon />}\n            onClick={() => setShowRemoveDialog(true)}\n            disabled={isProcessing || isRemoving}>\n            解除关系\n          </Button>\n        </CardActions>\n      </Card>\n\n      {/* 删除确认对话框 */}\n      <Dialog\n        open={showRemoveDialog}\n        onClose={() => setShowRemoveDialog(false)}\n        aria-labelledby=\"remove-contact-dialog\">\n        <DialogTitle id=\"remove-contact-dialog\">确认解除联系人关系</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            您确定要与 <strong>{contact.user_info.display_name}</strong> 解除紧急联系人关系吗？ 此操作不可撤销。\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setShowRemoveDialog(false)} disabled={isRemoving}>\n            取消\n          </Button>\n          <Button\n            onClick={handleRemove}\n            color=\"error\"\n            variant=\"contained\"\n            disabled={isRemoving}\n            startIcon={isRemoving ? <CircularProgress size={16} /> : <PersonRemoveIcon />}>\n            {isRemoving ? '处理中...' : '确认解除'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nconst EstablishedContactsManager: React.FC = () => {\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  const [isRefreshing, setIsRefreshing] = useState<boolean>(false);\n  const [contacts, setContacts] = useState<IEstablishedContactInfo[]>([]);\n  const [isProcessing, setIsProcessing] = useState<boolean>(false);\n\n  // 加载已建立的联系人关系\n  const loadEstablishedContacts = useCallback(async (showLoading = true) => {\n    if (showLoading) {\n      setIsLoading(true);\n    } else {\n      setIsRefreshing(true);\n    }\n    setError(null);\n\n    try {\n      const res = await emergencyCallContactService.listEstablishedContacts({\n        params: {},\n      } as any);\n      if (res.shellIsOk && res.dataIsOk && res.data?.is_ok) {\n        setContacts(res.data.contacts || []);\n      } else {\n        setError(res.data?.msg || '加载联系人列表失败');\n      }\n    } catch (err) {\n      console.error('加载联系人列表异常:', err);\n      setError('发生未知错误');\n    } finally {\n      setIsLoading(false);\n      setIsRefreshing(false);\n    }\n  }, []);\n\n  // 移除联系人关系\n  const handleRemoveContact = useCallback(async (contactId: string): Promise<void> => {\n    try {\n      setIsProcessing(true);\n\n      const res = await emergencyCallContactService.removeEstablishedContact({\n        params: { contact_id: contactId },\n        // handler,\n      } as any);\n\n      if (!res.shellIsOk || !res.dataIsOk || !res.data?.is_ok) {\n        throw new Error(res.data?.msg || '移除联系人失败');\n      }\n      // 从本地状态中移除\n      setContacts(prev => prev.filter(contact => contact.contact_id !== contactId));\n    } catch (err) {\n      console.error('移除联系人失败:', err);\n      setError(err instanceof Error ? err.message : '移除联系人失败，请重试');\n    } finally {\n      setIsProcessing(false);\n    }\n  }, []);\n\n  // 处理刷新\n  const handleRefresh = useCallback(() => {\n    loadEstablishedContacts(false);\n  }, [loadEstablishedContacts]);\n\n  // 组件加载时获取数据\n  useEffect(() => {\n    loadEstablishedContacts();\n  }, [loadEstablishedContacts]);\n\n  const renderContent = () => {\n    if (isLoading) {\n      return (\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" p={4}>\n          <CircularProgress />\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 2 }}>\n            加载中...\n          </Typography>\n        </Box>\n      );\n    }\n\n    if (error) {\n      return (\n        <Box p={2}>\n          <Alert severity=\"error\" sx={{ mb: 2 }}>\n            {error}\n          </Alert>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            onClick={() => loadEstablishedContacts()}\n            startIcon={<RefreshIcon />}>\n            重试\n          </Button>\n        </Box>\n      );\n    }\n\n    if (contacts.length === 0) {\n      return (\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          p={4}\n          textAlign=\"center\"\n          bgcolor=\"action.hover\"\n          borderRadius={1}>\n          <ContactPhoneIcon color=\"disabled\" sx={{ fontSize: 64, mb: 2 }} />\n          <Typography variant=\"h6\" color=\"textSecondary\" gutterBottom>\n            暂无紧急联系人\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            您还没有建立任何紧急联系人关系\n          </Typography>\n        </Box>\n      );\n    }\n\n    return (\n      <Box>\n        {contacts.map(contact => (\n          <ContactCard\n            key={contact.contact_id}\n            contact={contact}\n            onRemove={handleRemoveContact}\n            isProcessing={isRefreshing || isProcessing}\n          />\n        ))}\n      </Box>\n    );\n  };\n\n  return (\n    <Box p={2}>\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\n        <Box>\n          <Typography variant=\"h5\" gutterBottom>\n            我的紧急联系人\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            管理您已建立的紧急联系人关系\n          </Typography>\n        </Box>\n        <Button\n          variant=\"outlined\"\n          size=\"small\"\n          onClick={handleRefresh}\n          disabled={isRefreshing}\n          startIcon={isRefreshing ? <CircularProgress size={20} /> : <RefreshIcon />}>\n          {isRefreshing ? '刷新中...' : '刷新'}\n        </Button>\n      </Box>\n\n      {contacts.length > 0 && (\n        <Alert severity=\"info\" sx={{ mb: 2 }}>\n          共有 {contacts.length} 个紧急联系人\n        </Alert>\n      )}\n\n      {renderContent()}\n    </Box>\n  );\n};\n\nexport default EstablishedContactsManager;\n","import React, { useState } from 'react';\nimport {\n  Box,\n  Typography,\n  Tabs,\n  Tab,\n  Paper,\n  Divider\n} from '@mui/material';\nimport {\n  People as PeopleIcon,\n  PersonAdd as PersonAddIcon,\n  ContactPhone as ContactPhoneIcon\n} from '@mui/icons-material';\n\nimport InvitationManager from '../InvitationManager/InvitationManager';\nimport EstablishedContactsManager from '../EstablishedContactsManager/EstablishedContactsManager';\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`contact-tabpanel-${index}`}\n      aria-labelledby={`contact-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nfunction a11yProps(index: number) {\n  return {\n    id: `contact-tab-${index}`,\n    'aria-controls': `contact-tabpanel-${index}`,\n  };\n}\n\nconst ContactRelationshipManager: React.FC = () => {\n  const [currentTab, setCurrentTab] = useState(0);\n\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\n    setCurrentTab(newValue);\n  };\n\n  return (\n    <Box sx={{ width: '100%', maxWidth: 800, mx: 'auto', p: 2 }}>\n      {/* 页面标题 */}\n      <Box mb={3} textAlign=\"center\">\n        <Typography variant=\"h4\" gutterBottom>\n          联系人关系管理\n        </Typography>\n        <Typography variant=\"body1\" color=\"text.secondary\">\n          管理您的紧急联系人邀请和已建立的关系\n        </Typography>\n      </Box>\n\n      <Paper elevation={2}>\n        {/* 标签导航 */}\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          <Tabs \n            value={currentTab} \n            onChange={handleTabChange}\n            aria-label=\"联系人管理标签\"\n            variant=\"fullWidth\"\n          >\n            <Tab \n              icon={<ContactPhoneIcon />}\n              label=\"我的联系人\" \n              {...a11yProps(0)}\n            />\n            <Tab \n              icon={<PersonAddIcon />}\n              label=\"邀请管理\" \n              {...a11yProps(1)}\n            />\n          </Tabs>\n        </Box>\n\n        {/* 标签内容 */}\n        <TabPanel value={currentTab} index={0}>\n          <EstablishedContactsManager />\n        </TabPanel>\n        \n        <TabPanel value={currentTab} index={1}>\n          <InvitationManager />\n        </TabPanel>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default ContactRelationshipManager;","import { AppbarContainer, AppShell, TabbarContainer } from \"@app/ui\";\nimport { NavBar } from \"@src/components/navbar/NavBar\";\nimport ContactRelationshipManager from \"@src/components/ContactRelationshipManager/ContactRelationshipManager\";\n\nexport default function ContactsPage() {\n\n    return (\n\n                    <AppShell>\n                        <AppbarContainer appbarProps={{title:\"联系人\", back:true}}>\n                <ContactRelationshipManager />\n                        </AppbarContainer>\n                    </AppShell>\n    )\n    return (\n        <AppShell>\n            <TabbarContainer \n                titleConf={{ ns: \"emergency-call/pages/contacts/content\", key: \"content.title\" }}\n                navBar={<NavBar/>}\n            >\n                <ContactRelationshipManager />\n            </TabbarContainer>\n        </AppShell>\n    )\n}","import { IRequestOptions } from \"../IRequestOptions\";\nimport { tms } from \"../tms\";\nimport { IRequestHandler, request } from \"@fanfanlo\";\n\n/**\n * 获取所有邀请的请求参数\n */\nexport interface IParamsListAllInvitations {\n  // 可以添加分页等参数\n  page?: number;\n  page_size?: number;\n}\n\n/**\n * 用户信息\n */\nexport interface IInvitationUserInfo {\n  user_id: string;\n  display_name: string;\n  avatar_url?: string;\n}\n\n// 邀请状态类型\nexport type InviteStatus = 'pending' | 'accepted' | 'declined' | 'expired' | 'cancelled';\n\n// 邀请记录详情\nexport interface IInvitationDetails {\n  invitation_id: string;\n  user_info: {\n    user_id: string;\n    display_name: string;\n    avatar_url?: string;\n  };\n  status: InviteStatus;\n  message: string;\n  created_at: number;\n  expires_at: number;\n}\n\n/**\n * 获取所有邀请的响应结果\n */\nexport interface IResultListAllInvitations {\n  is_ok: boolean;\n  msg?: string;\n  sent_invitations: IInvitationDetails[];\n  received_invitations: IInvitationDetails[];\n}\n\n/**\n * 响应邀请的请求参数\n */\nexport interface IParamsRespondToInvite {\n  invitation_id: string;\n  action: 'accept' | 'decline' | 'cancel' | 'remove';\n}\n\n/**\n * 获取所有邀请（发送和接收的）\n */\nexport async function tmsEmergencyCallListAllInvitations(\n  opts: IRequestOptions<IParamsListAllInvitations>\n) {\n  return request<IResultListAllInvitations, IParamsListAllInvitations>(\n    tms.TEmc,\n    tms.MEmcListAllInvitations,\n    opts.params,\n    opts.gateway,\n    opts.handler\n  );\n}\n\n/**\n * 取消或删除邀请\n * @param invitationId 邀请ID\n * @param isReceived 是否是接收的邀请\n * @returns Promise\n */\nexport async function cancelOrRemoveInvitation(\n  invitationId: string,\n  isReceived: boolean\n) {\n  const action = isReceived ? 'remove' : 'cancel';\n  return emergencyCallInvitationService.respondToInvite({\n    params: {\n      invitation_id: invitationId,\n      action\n    }\n  } as any);\n}\n\n/**\n * 响应邀请\n */\nexport async function tmsEmergencyCallRespondToInvite(\n  opts: IRequestOptions<IParamsRespondToInvite>\n) {\n  return request<{ is_ok: boolean; msg?: string }, IParamsRespondToInvite>(\n    tms.TEmc,\n    tms.MEmcRespondToInvite,\n    opts.params,\n    opts.gateway,\n    opts.handler\n  );\n}\n\n// 导出所有接口\nexport const emergencyCallInvitationService = {\n  listAllInvitations: tmsEmergencyCallListAllInvitations,\n  respondToInvite: tmsEmergencyCallRespondToInvite,\n};\n\nexport default emergencyCallInvitationService;\n","'use client';\r\nimport { Box, CssBaseline, Paper, Stack } from '@mui/material';\r\n\r\nimport React, { PropsWithChildren } from 'react';\r\nimport { ITitleI18nConf } from '../page';\r\nimport AndroidPageContent from '../page/AndroidPageContent';\r\n\r\nfunction BottomBar({navBar}:{navBar?:React.ReactNode}) {\r\n  return <Paper\r\n    id=\"bottom-navigation\"\r\n    sx={{ position: 'fixed', bottom: 0, left: 0, right: 0 }}\r\n    elevation={3}>\r\n    {navBar}\r\n  </Paper>;\r\n}\r\nexport function TabbarContainer({ children, titleConf, navBar }: {titleConf?:ITitleI18nConf, navBar:React.ReactNode} & PropsWithChildren)  {\r\n  return (\r\n    <Box sx={{ \r\n      minHeight: '100vh',\r\n      paddingBottom: '72px' // 为固定在底部的tabbar留出空间\r\n    }}>\r\n      <CssBaseline />\r\n      <AndroidPageContent titleConf={titleConf}>\r\n        {children}\r\n      </AndroidPageContent>\r\n      <BottomBar navBar={navBar} />\r\n    </Box>\r\n  );\r\n}\r\n\r\n"],"names":["useRouter","nextPreload","useTranslation","styled","HomeIcon","SettingsIcon","BottomNavigation","BottomNavigationAction","Box","React","StyledBottomNavigation","theme","backgroundColor","palette","background","paper","boxShadow","height","borderTopLeftRadius","borderTopRightRadius","color","primary","main","fontSize","fontWeight","marginTop","minWidth","padding","transition","opacity","NavBar","router","pathname","t","tabInfoList","label","value","icon","useEffect","sx","position","bottom","left","right","zIndex","showLabels","onChange","_","newValue","push","map","e","isSelected","display","flexDirection","alignItems","justifyContent","data-id","transform","marginBottom","useState","useCallback","Typography","Button","Card","CardContent","CardActions","CircularProgress","Avatar","Chip","Check","CheckIcon","Close","CloseIcon","AccessTime","AccessTimeIcon","Person","PersonIcon","Refresh","RefreshIcon","formatDistanceToNow","zhCN","emergencyCallInvitationService","cancelOrRemoveInvitation","getStatusConfig","status","expiresAt","isExpired","Date","statusTexts","pending","accepted","declined","expired","cancelled","statusColors","text","showExpiry","InvitationStatusChip","config","gap","size","variant","addSuffix","locale","UserInfoCard","userInfo","message","isReceived","onRespond","isProcessing","isProcessingAction","setIsProcessingAction","handleRespond","action","mb","src","avatar_url","alt","display_name","width","mr","toUpperCase","flexGrow","user_id","mt","pt","startIcon","onClick","disabled","InvitationManager","isLoading","setIsLoading","error","setError","isRefreshing","setIsRefreshing","invitations","setInvitations","sent","received","setIsProcessing","loadInvitations","showLoading","res","listAllInvitations","params","shellIsOk","dataIsOk","data","is_ok","sent_invitations","invite","received_invitations","msg","err","console","handleCancelOrRemove","invitationId","Error","prev","filter","i","invitation_id","handleRespondToInvite","respondToInvite","updateInvitation","invites","handleRefresh","renderContent","p","hasSentInvitations","length","hasReceivedInvitations","gutterBottom","user_info","expires_at","textAlign","bgcolor","borderRadius","tms","request","tmsEmergencyCallListEstablishedContacts","opts","TEmc","MEmcListEstablishedContacts","gateway","handler","tmsEmergencyCallRemoveEstablishedContact","MEmcRemoveEstablishedContact","emergencyCallContactService","listEstablishedContacts","removeEstablishedContact","Alert","Dialog","DialogTitle","DialogContent","DialogActions","DialogContentText","PersonRemove","PersonRemoveIcon","ContactPhone","ContactPhoneIcon","ContactCard","contact","onRemove","isRemoving","setIsRemoving","showRemoveDialog","setShowRemoveDialog","handleRemove","contact_id","relationship","created_at","notes","open","onClose","aria-labelledby","id","strong","EstablishedContactsManager","contacts","setContacts","loadEstablishedContacts","handleRemoveContact","contactId","severity","Tabs","Tab","Paper","PersonAdd","PersonAddIcon","TabPanel","props","children","index","other","div","role","hidden","a11yProps","ContactRelationshipManager","currentTab","setCurrentTab","handleTabChange","event","maxWidth","mx","elevation","borderBottom","borderColor","aria-label","AppbarContainer","AppShell","TabbarContainer","ContactsPage","appbarProps","title","back","titleConf","ns","key","navBar","tmsEmergencyCallListAllInvitations","MEmcListAllInvitations","tmsEmergencyCallRespondToInvite","MEmcRespondToInvite","CssBaseline","AndroidPageContent","BottomBar","minHeight","paddingBottom"],"sourceRoot":"","ignoreList":[]}