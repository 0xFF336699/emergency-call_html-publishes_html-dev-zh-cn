{"version":3,"file":"static/chunks/62-92c2b460ee10080c.js","mappings":";;;;;;;;;;;;;;;;;;AAAwC;AACG;AAEK;AACQ;AACiB;AAOlE,SAASM;IACd,MAAMC,SAASP,sDAASA;IACxB,MAAM,EAAEQ,QAAQ,EAAE,GAAGD;IACrB,MAAM,EAAEE,CAAC,EAAE,GAAGR,mEAAcA,CAAC;IAC7B,MAAMS,cAA6B;QACjC;YAAEC,OAAOF,EAAE;YAAgBG,OAAO;YAAKC,oBAAM,uDAACX,yEAAQA;QAAI;QAC1D,kFAAkF;QAClF,8EAA8E;QAC9E;YAAES,OAAOF,EAAE;YAAoBG,OAAO;YAAaC,oBAAM,uDAACV,6EAAYA;QAAI;KAC3E;IACD,qBAEE,uDAACC,4HAAgBA;QAACU,UAAU;QAACF,OAAOJ;kBACjCE,YAAYK,GAAG,CAACC,CAAAA,kBACf,uDAACX,4HAAsBA;gBAErBM,OAAOK,EAAEL,KAAK;gBACdE,MAAMG,EAAEH,IAAI;gBACZI,WAAS,UAAkB,OAARD,EAAEJ,KAAK;gBAC1BM,WAAWV,aAAaQ,EAAEJ,KAAK,GAAG,iBAAiB;gBACnDO,SAAS;oBACP,IAAIX,aAAaQ,EAAEJ,KAAK,EAAE;oBAC1BL,OAAOa,IAAI,CAACJ,EAAEJ,KAAK;gBACrB;eARKI,EAAEJ,KAAK;;AAatB;;;;;;;;;;;;;;;;;;;ACxCwP;;;;;;;;;;;;;qGCCvM;AAEe;AACQ;AAE1C;AACG;AACY;AAEE;AAC/C,IAAIe,kBAAyB,GAAE,6CAA6C;;AACrE,MAAMC,aAAa,IAAIH,eAAGA,CAAC,OAAQ,QAAO;AACjD,MAAMI,aAAa,CAAC;QAEwBC;IAD1C,IAAG,KAA6B,EAAC,EAAO;IACxC,MAAMC,IAAI,IAAIC,IAAIF,OAAOG,QAAQ,CAACC,IAAI,MAAIJ,iBAAAA,OAAOK,MAAM,cAAbL,qCAAAA,eAAeG,QAAQ,CAACC,IAAI;IACtE,0CAA0C;IAC1C,OAAOH,EAAEK,MAAM,IAAI,QAAQL,EAAEK,MAAM,IAAI,SAAS,KAAKL,EAAEK,MAAM;AAC/D;AACA,MAAMC,iBAAiB;IACrBC,UAAU,SAAUC,IAAc,EAAEC,UAAoB;QACtD,MAAMC,MAAMb,WAAWc,GAAG,CAAC,OAAQ;QACnCD,IAAIE,KAAK,GAAG;QACZ,MAAMC,MAAML,IAAI,CAAC,EAAE;QACnB,IAAIM,IAAK;QACT,sEAAsE;QACtE,yCAAyC;QACzC,kEAAkE;QAClE,MAAMC,KAAKN,UAAU,CAAC,EAAE,CAACO,KAAK,CAAC;QAC/BD,GAAGE,MAAM,CAACF,GAAGG,MAAM,GAAG,GAAG,GAAGL;QAC5BC,IAAI,WAAkClB,OAAvBmB,GAAGI,IAAI,CAAC,MAAK,YAA0B,OAAhBvB;QACtCc,IAAIA,GAAG,CAAE,SAAQF;QACjBE,IAAIA,GAAG,CAAE,eAAcD;QACvBC,IAAIA,GAAG,CAAC,MAAMI;QACdA,IAAI,GAAiBA,OAAdhB,YAAW,KAAK,OAAFgB;QACrBJ,IAAIA,GAAG,CAAC,iBAAiBI;QACzB,OAAOA;IAET;IACAM,OAAO,SACLC,IAAY,EACZC,SAA6B,EAC7Bb,UAA8B;QAE9B,MAAMC,MAAMb,WAAWc,GAAG,CAAC,OAAQ;QACnCD,IAAIE,KAAK,GAAG;QACZ,mDAAmD;QACnD,MAAMW,IAAIC,KAAKJ,KAAK,CAACC;QACrBX,IAAIe,KAAK,CAAE;QACX,yBAAyB;QACzB,+EAA+E;QAC/Ef,IAAIA,GAAG,CAAE,WAAUY,WAAWb;QAC9B,OAAOc;IACT;AACF;AACA,MAAMG,UAAU,IAAIlC,kBAAOA;AAC3BkC,QAAQC,IAAI,CAAC,MAAMrB;AACZ,MAAMsB,OAAOnC,uBAAOA,CAAC;AAC5B,uCAAuC;AACvC,kBAAkB;AAClB,yCAAyC;AACzC,UAAU;AACV,aAAa;AACb,uCAAuC;AACvC,UAAU;AACV,KAAK;AAGLmC,KAAKC,EAAE,CAAC,mBAAmB,eAAgBhB,GAAG;IAC5C,MAAMH,MAAMb,WAAWc,GAAG,CAAC,OAAQ;IACnCD,IAAIE,KAAK,GAAG;IACZF,IAAIA,GAAG,CAAE,WAAUG;AACnB,cAAc;AACd,wEAAwE;AAC1E;AAKO,SAASiB;QAASC,mBAAAA,iEAAwB;IAC/CnC,kBAAkBmC;IAClBH,KACCI,GAAG,CAACzC,6CAAgBA,EACpByC,GAAG,CAACN,SACJM,GAAG,CAAC1C,2BAAgBA,EACpBqC,IAAI,CAAqB;QACxBM,MAAM;QACN,eAAe;QACf,0DAA0D;QAC1D,aAAa;QACbC,aAAavC,oBAAQA,GAAG,OAAO;QAC/B,wBAAwB;QACxB,gBAAgB;QAChBwC,yBAAwB;QACxBC,IAAG,EAAE;QAELC,OAAO;QACPC,eAAe;YACbC,aAAa;QACf;QACAC,WAAW;YACTC,QAAQ;gBAAC;aAAe;QAC1B;IACF;AACF;AACAb,KAAKC,EAAE,CAAC,cAAc,SAAUrB,IAAI,EAAEkC,SAAS,EAAEC,GAAG,EAAEC,GAAG;IACvDC,QAAQC,KAAK,CACX,0DACAtC,MACAkC,WACAC,KACAC;AAEJ;AAEAhB,KAAKC,EAAE,CAAC,UAAU,SAAUkB,MAAM;IAChC,MAAMrC,MAAMb,WAAWc,GAAG,CAAC,OAAQ;IACnCD,IAAIE,KAAK,GAAG;IACZF,IAAIA,GAAG,CAAE,sBAAqBqC;AAChC;AAEAnB,KAAKC,EAAE,CAAC,iBAAiB,SAAUhB,GAAG,EAAEuB,EAAE,EAAEY,GAAG;IAC7C,MAAMtC,MAAMb,WAAWc,GAAG,CAAC,OAAQ;IACnCD,IAAIE,KAAK,GAAG;IACZF,IAAIA,GAAG,CAAE,2BAA0BG,KAAKuB,IAAIY;AAC9C;AAEApB,KAAKC,EAAE,CAAC,SAAS;IACfgB,QAAQnC,GAAG,CAAC,SAASuC;AACvB;AAEA,gDAAerB,gDAAAA,IAAIA,EAAAA,EAAC;;;;;;;;;;;ACnIkB;AACK;AAC3C,wCAAwC;AACxC,MAAMwB,IAAID,6BAAUA,CAACT,SAAS,CAAC;AAO/B,SAASW;IACL,qBAAOH,cAAcE;AACzB;AACO,MAAME,iCAAmBJ,uBAAaA,CAAME,GAAE;AAE9C,MAAMG,wCAA0BL,uBAAaA,CAAsB,CAAC,GAAE;;;;;AFf2K;;;;AGC1G;AACtG;AACa;AACL;AAGhDpB,QAAQA;AAED,SAAS8B,SAAS,KAA+B;QAA/B,EAAEC,QAAQ,EAAqB,GAA/B;IACvB,MAAMrF,SAASP,yBAASA;IACxB,MAAM6F,YAAY;IAClB,MAAM3D,OAAOJ,OAAOG,QAAQ,CAACC,IAAI,CAACa,KAAK,CAAC,IAAI,CAAC,EAAE;IAC/C,MAAM+C,aAAa,WAAgB,OAAL5D;IAC9B,MAAMiD,IAAID,6BAAUA,CAACT,SAAS,CAACqB;IAC/B,IAAIC,IAAuCZ,EAAEa,IAAI,CAACF;IAClD,IAAI,CAACC,GAAG;QACNA,IAAI,CAAC;QACLZ,EAAEc,KAAK,CAACH,YAAYC;IACtB;IACAA,IAAIR,8BAAOA,CAACQ;IACZN,mBAASA,CAAC;QAERlF,OAAO2F,cAAc,CAAC,CAACC;YACrBhB,EAAEiB,QAAQ;YACV,OAAO;QACT;IACF;IACAX,mBAASA,CAAC;QACRN,EAAEc,KAAK,CAACH,YAAYC;QACpB,OAAOP,oCAAYA,CAACO,GAAG;YACrBZ,EAAEc,KAAK,CAACH,YAAYC;QACtB;IACF,GAAG,EAAE;IACLN,mBAASA,CAAC;QACR,MAAMY,OAAQlB,EAAEa,IAAI,CAACH,cAAc;YAAES,GAAG;YAAGC,GAAG;QAAE;QAChD,qDAAqD;QACrD,IAAIF,KAAKC,CAAC,IAAI,KAAKD,KAAKE,CAAC,IAAI,GAAG;YAC9BC;QACF,OAAO;YACL1E,OAAO2E,qBAAqB,CAAC;gBAC3B3E,OAAO4E,QAAQ,CAACL,KAAKC,CAAC,EAAED,KAAKE,CAAC;gBAC9BC;YACF;QACF;QACA,SAASG,SAAS3F,CAAQ;YACxB,+EAA+E;YAC/EmE,EAAEc,KAAK,CAACJ,WAAW;gBAAES,GAAGxE,OAAO8E,OAAO;gBAAEL,GAAGzE,OAAO+E,OAAO;YAAC;QAC5D;QACA,SAASL;YACP1E,OAAOgF,gBAAgB,CAAC,UAAUH;QACpC;QAEA,SAASI;YACPjF,OAAOkF,mBAAmB,CAAC,UAAUL;QACvC;QACA,OAAOI;IACT;IACA,qBACE,oBAAC1B,gBAAgBA;QAACzE,OAAOuE;kBACvB,kCAACG,uBAAuBA;YAAC1E,OAAOmF;sBAE9B,kCAACL,0BAAeA;gBAAC/B,MAAMA,IAAIA;0BACxBiC;;;;AAKX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEuD;AACyB;AAES;AAE9C;AAG3C,SAAS2B;IACP,IAAG,CAACF,iBAAKA,EAAC,qBAAO;kBAAE;;IACnB,MAAM,EAAC5G,CAAC,EAAC,GAAGR,6BAAcA,CAAC;IAC3B,qBACE,qBAACgH,kBAAGA;;0BACF,oBAACC,qBAAMA;gBAAC/F,SAAS;oBAAOW,OAAOG,QAAQ,CAACuF,MAAM;gBAAE;0BAAI/G,EAAE;;YACrD,IAAIgH,OAAOC,cAAc;;;AAGhC;AAEA,MAAMC,wBAAU1C,uBAAaA,CAAC;IAAEqB,GAAG;IAAGC,GAAG;AAAE;AAC3C,IAAIqB,QAAQ;AACG,SAASC,YAAY,KAAkG;QAAlG,EAAEjC,QAAQ,EAAEkC,SAAS,EAAEN,MAAM,EAAqE,GAAlG;IAClCI;IACA,MAAMG,SAASX,oBAAUA,CAACO;IAC1B,MAAMK,QAAQ,GAA2C,OAAxCP,KAAKQ,GAAG,KAAKC,KAAKC,MAAM,KAAKV,KAAKQ,GAAG;IACtDxC,mBAASA,CAAC;QACR,eAAe2C;YACb,IAAG,CAACN,WAAU;YACd,IAAIO,QAAQP,UAAUO,KAAK;YAC3B,IAAGP,UAAU3D,EAAE,EAAC;gBACdkE,QAAQ,MAAMf,0CAAaA,CAACQ,UAAU3D,EAAE,EAAE2D,UAAUpD,GAAG,IAAI;YAC7D;YACA,IAAG,CAAC2D,OAAM;YACVC,SAASD,KAAK,GAAGA;QACnB;QACAD;IACF,GAAG,EAAE;IACL3C,mBAASA,CAAC;QACR,MAAM8C,YAAYD,SAASE,sBAAsB,CAACR,MAAM,CAAC,EAAE;QAC3D,IAAI,CAACO,WAAW;QAChBA,UAAUE,SAAS,GAAGV,OAAOxB,CAAC;QAC9B,MAAMI,WAAW;YACf,IAAI8B,YAAYF,UAAUE,SAAS;YACnCV,OAAOxB,CAAC,GAAGkC;QACb;QACAF,UAAUvB,mBAAmB,CAAC,UAAUL;QACxC4B,UAAUzB,gBAAgB,CAAC,UAAUH,UAAU;YAAE+B,SAAS;QAAK;QAC/D,OAAO,IAAMH,UAAUvB,mBAAmB,CAAC,UAAUL;IACvD,GAAG;QAACqB;QAAOD;KAAO;IAClB,qBAEE,oBAACZ,wBAASA;QAACjG,WAAW8G;QAAOW,IAAI;YAAEC,UAAU;YAAGC,UAAU;YAAQC,SAAS;QAAM;kBAC/E,mCAAC7B,kBAAGA;;gBACAO,CAAAA,UAAWA,UAAUuB,SAAS,mBAAM,oBAACxB;gBACtC3B;;;;AAIT;;;;ACzDwC;AAEzB,SAASoD,mBAAmB,KAAkG;QAAlG,EAAEpD,QAAQ,EAAEkC,SAAS,EAAEN,MAAM,EAAqE,GAAlG;IACvC,qBACI,oBAACK,WAAWA;QAACC,WAAWA;QAAWN,QAAQA;kBACtC5B;;AAGb;;;;;;;;;;;;;;;;;;;ACRyG;AAMxD;AAGW;AAE5D,0BAA0B;AAC1B,mBAAmB;AACnB,mBAAmB;AACnB,2BAA2B;AAC3B,IAAI;AAEJ,SAASyD,UAAU,KAAkC;QAAlC,EAACC,MAAM,EAA2B,GAAlC;IACjB,qBAAO,uDAACJ,gHAAKA;QACXK,IAAG;QACHZ,IAAI;YAAEa,UAAU;YAASC,QAAQ;YAAGC,MAAM;YAAGC,OAAO;QAAE;QACtDC,WAAW;kBAEVN;;AAEL;AACA,sBAAsB;AACtB,gCAAgC;AAChC,iCAAiC;AACjC,sEAAsE;AACtE,yCAAyC;AACzC,oEAAoE;AACpE,yFAAyF;AACzF,qFAAqF;AACrF,oFAAoF;AACpF,OAAO;AACP,aAAa;AAEb,qDAAqD;AACrD,gCAAgC;AAChC,kCAAkC;AAClC,0BAA0B;AAC1B,4BAA4B;AAC5B,0BAA0B;AAC1B,0CAA0C;AAC1C,mEAAmE;AACnE,6BAA6B;AAC7B,gDAAgD;AAChD,oCAAoC;AACpC,eAAe;AACf,aAAa;AACb,YAAY;AACZ,0BAA0B;AAC1B,OAAO;AACP,IAAI;AAGJ,qBAAqB;AACd,SAASO,gBAAgB,KAAwG;QAAxG,EAAEjE,QAAQ,EAAEkC,SAAS,EAAEwB,MAAM,EAA2E,GAAxG;IAC9B,qBACE,wDAACrC,gHAAGA;QAAC0B,IAAI;YAAEmB,SAAS;YAAQC,eAAe;YAAUC,QAAQ;QAAQ;;0BACnE,uDAACf,iHAAWA;0BACZ,wDAACE,gHAAKA;gBAACc,WAAW;gBAAUC,SAAS;;kCAGnC,uDAAClB,yEAAkBA;wBAAClB,WAAWA;kCAC5BlC;;kCAEH,uDAACyD;wBAAUC,QAAQA;;;;;;AAI3B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClEe;AAiBS;AAWD;AACe;AAiBT;AACG;AAIhC,QAAQ;AACR,MAAMiD,SAAS,IAAI9K,eAAGA,CAAC,OAAO;AAC9B,MAAM+K,WAAWD,OAAO7J,GAAG,CAAC,OAAO;AAEnC,OAAO;AACP,MAAM+J,eAAkC;IACpCC,OAAO;IACP1C,QAAQ;IACR,uDAAuD;IACvD2C,WAAW;IACXC,YAAY,OAAO;AACvB;AAEA,+BAA+B;AAG/B,wCAAwC;AACxC,gDAAgD;AAChD,qEAAqE;AACrE,QAAQ;AACR,yDAAyD;AACzD,IAAI;AACJ,QAAQ;AACR,SAASC,qBACL,KASmB,EACnBC,GAAiC;QAVjC,EACIC,aAAa,EACbC,QAAQ,EACRC,QAAQ,EACRC,YAAY,EACZC,OAAO,EACPjM,YAAY,EAAE,EACdkM,KAAK,EACLzE,EAAE,EACa,GATnB;IAYA,YAAY;IACZ,MAAM,CAAC0E,kBAAkBC,oBAAoB,GAAGjD,kBAAQA,CAGrD;QACCkD,gBAAgB;QAChBC,gBAAgB;IACpB;IAEA,OAAO;IACP,MAAMC,UAAUrD,gBAAMA,CAAc;IACpC,MAAMsD,iBAAiBtD,gBAAMA,CAAe,EAAE;IAC9C,MAAMuD,gBAAgBvD,gBAAMA,CAAmC,CAAC;IAChE,MAAMwD,gBAAgBxD,gBAAMA,CAAmC,CAAC;IAChE,MAAM,CAACyD,mBAAmBC,qBAAqB,GAAGzD,kBAAQA,CAA2C,CAAC;IACtG,MAAM0D,iBAAiB3D,gBAAMA,CAAC;IAE9B,QAAQ;IACR,MAAM,CAAC4D,cAAcC,gBAAgB,GAAG5D,kBAAQA,CAAC;IACjD,MAAM,CAAC6D,cAAcC,gBAAgB,GAAG9D,kBAAQA,CAAC;IACjD,MAAM,CAACxF,OAAOuJ,SAAS,GAAG/D,kBAAQA,CAAgB;IAClD,MAAM,CAACgE,SAASC,WAAW,GAAGjE,kBAAQA,CAAC;IACvC,MAAM,CAACmD,gBAAgBe,kBAAkB,GAAGlE,kBAAQA,CAAC;IACrD,MAAM,CAACmE,cAAcC,gBAAgB,GAAGpE,kBAAQA,CAAsB,EAAE;IAExE,WAAW;IACX,MAAMqE,aAAavE,qBAAWA,CAAC,OAAO6C,UAAkB2B;QACpD,IAAI;YACA,MAAMC,WAAW,MAAMC,MAAM,GAAqB,OAAlB9B,cAAc+B,GAAG,EAAC,WAAS;gBACvDC,QAAQ;gBACRC,SAAS;oBACL,gBAAgB;gBACpB;gBACAC,MAAM1L,KAAK2L,SAAS,CAAC;oBACjBC,WAAWnC;oBACX2B;gBACJ;YACJ;YAEA,IAAI,CAACC,SAASQ,EAAE,EAAE;gBACd,MAAM,IAAIC,MAAM;YACpB;YAEA,MAAMjM,OAAO,MAAMwL,SAASU,IAAI;YAChC,OAAOlM,KAAKmM,KAAK;QACrB,EAAE,OAAO1K,OAAO;YACZ2H,SAAS3H,KAAK,CAAC,gBAAgBA;YAC/B,MAAMA;QACV;IACJ,GAAG,EAAE;IAEL,QAAQ;IACR,MAAM2K,gBAAgBrF,qBAAWA,CAAC;QAC9B,IAAI6D,gBAAgBE,cAAc;QAElCD,gBAAgB;QAChBG,SAAS;QAET,IAAI;YACA,cAAc;YACd,MAAMmB,QAAQ,MAAMb,WAAW1B,UAAUC;YACzCT,SAAS/J,GAAG,CAAC,UAAU8M;YAEvB,YAAY;YACZ,MAAM,EAAEE,UAAU,EAAEC,UAAU,EAAE,GAAG,MAAMC;YACzCjC,eAAekC,OAAO,GAAG;gBAACH;gBAAYC;aAAW;YACjDlD,SAAS/J,GAAG,CAAC,eAAegN;YAC5BjD,SAAS/J,GAAG,CAAC,eAAeiN;YAC5B,YAAY;YACZ,MAAMG,OAAO,IAAItF,+BAAIA,CAAC;gBAClBuF,gBAAgB;gBAChBC,UAAU;gBACVC,sBAAsB;oBAClBC,YAAYxD;gBAChB;gBACA,iDAAiD;gBACjDyD,iBAAiB;oBACbC,KAAK;oBACLC,KAAK;oBACLC,aAAa;oBACbC,WAAW;gBACf;YACJ;YACA9D,SAAS/J,GAAG,CAAC,SAASoN;YACtB,YAAY;YACZU,mBAAmBV;YAEnB,WAAW;YACX,MAAMA,KAAKW,OAAO,CACdzD,cAAc0D,KAAK,EACnBlB,OACA;gBACImB,eAAe;YACnB;YAEJlE,SAAS/J,GAAG,CAAC;YACb,YAAY;YACZ,IAAI;gBACA,MAAMkO,QAAQC,GAAG,CAAC;oBACdf,KAAKgB,gBAAgB,CAACC,YAAY,CAACrB;oBACnCI,KAAKgB,gBAAgB,CAACC,YAAY,CAACpB;iBACtC;YACL,EAAE,OAAOqB,cAAc;gBACnBvE,SAAS3H,KAAK,CAAC,WAAWkM;YAC1B,iCAAiC;YACrC;YAEA,aAAa;YACbtD,QAAQmC,OAAO,GAAGC;YAClB1B,gBAAgB;YAEhB,kBAAkB;YAClB,MAAM6C,qBAAqBC,MAAMC,IAAI,CAACrB,KAAKmB,kBAAkB,CAACG,MAAM;YACpE1C,gBAAgBuC;YAEhB,eAAe;YACfI,uBAAuBvB,KAAKgB,gBAAgB,CAAClC,QAAQ,EAAE;gBACnDpB,gBAAgB;gBAChBC,gBAAgB;gBAChBiC;gBACAC;YACJ;YAEA,mBAAmB;YACnBsB,mBAAmBK,OAAO,CAACC,CAAAA;gBACvB,aAAa;gBACbC,qBAAqBD;gBACrB9E,SAAS/J,GAAG,CAAC,gBAAgB6O,YAAY3C,QAAQ;gBAEjD,mCAAmC;gBACnC2C,YAAYE,oBAAoB,GAAGH,OAAO,CAACI,CAAAA;oBACvC,IAAIA,YAAYC,KAAK,IAAID,YAAYC,KAAK,YAAYhH,sCAAWA,EAAE;wBAC/DiH,sBAAsBF,YAAYC,KAAK,EAAED,aAAaH;oBAC1D;gBACJ;YACJ;YAEA,aAAa;YACb,IAAIzB,KAAKgB,gBAAgB,EAAE;gBACvBU,qBAAqB1B,KAAKgB,gBAAgB;gBAC1CrE,SAAS/J,GAAG,CAAC,gBAAgBoN,KAAKgB,gBAAgB,CAAClC,QAAQ;YAC/D;YAEAnC,SAAS/J,GAAG,CAAC;QAEjB,EAAE,OAAOoC,OAAO;YACZ2H,SAAS3H,KAAK,CAAC,YAAYA;YAC3BuJ,SAAS;YACT,YAAY;YACZwD,cAAclE,eAAekC,OAAO;YACpClC,eAAekC,OAAO,GAAG,EAAE;YAE3B,IAAInC,QAAQmC,OAAO,EAAE;gBACjB,IAAI;oBACA,MAAMnC,QAAQmC,OAAO,CAACiC,UAAU;gBACpC,EAAE,OAAO7Q,GAAG;oBACRwL,SAAS3H,KAAK,CAAC,YAAY7D;gBAC/B;gBACAyM,QAAQmC,OAAO,GAAG;YACtB;QACJ,SAAU;YACN3B,gBAAgB;QACpB;IACJ,GAAG;QAACjB;QAAUC;QAAUe;QAAcE;QAAcQ;KAAW;IAE/D,YAAY;IACZ,MAAMiB,oBAAoBxF,qBAAWA,CAAC;QAClC,IAAI;YACA,MAAM,CAACsF,YAAYC,WAAW,GAAG,MAAMiB,QAAQC,GAAG,CAAC;gBAC/ChG,oDAAqBA,CAAC;oBAClBkH,kBAAkB;oBAClBC,kBAAkB;oBAClBC,iBAAiB;gBACrB;gBACAnH,oDAAqBA,CAAC;oBAClBoF,YAAY;wBACRvD,OAAO;wBACP1C,QAAQ;wBACR2C,WAAW;oBACf;gBACJ;aACH;YACD,OAAO;gBAAE8C;gBAAYC;YAAW;QACpC,EAAE,OAAO7K,OAAO;YACZ2H,SAAS3H,KAAK,CAAC,aAAaA;YAC5B,MAAMA;QACV;IACJ,GAAG,EAAE;IAEL,OAAO;IACP,MAAM+M,gBAAgBzH,qBAAWA,CAAC,CAAC8H;QAC/BA,OAAOZ,OAAO,CAACK,CAAAA;YACXA,MAAMQ,IAAI;YACVR,MAAMS,MAAM;QAChB;IACJ,GAAG,EAAE;IAEL,aAAa;IACb,MAAMC,mBAAmBhI,gBAAMA,CAA0B,CAAC;IAC1D,MAAMiI,mBAAmBjI,gBAAMA,CAAmC,CAAC;IACnE,MAAMkI,mBAAmBlI,gBAAMA,CAAmC,CAAC;IAEnE,UAAU;IACV,MAAMgH,yBAAyBjH,qBAAWA,CAAC,CAACwE,UAAkBxI;QAC1D2H,qBAAqByE,CAAAA,OAAS;gBAC1B,GAAGA,IAAI;gBACP,CAAC5D,SAAS,EAAE;oBACR,GAAI4D,IAAI,CAAC5D,SAAS,IAAI;wBAClBpB,gBAAgB;wBAChBC,gBAAgB;wBAChBgF,sBAAsB;wBACtBC,sBAAsB;oBAC1B,CAAC;oBACD,GAAGtM,KAAK;gBACZ;YACJ;IACJ,GAAG,EAAE;IACL,SAAS;IACT,MAAMwL,wBAAwBxH,qBAAWA,CAAC,CACtCuH,OACAD,aACAH;QAEA,IAAI,CAACI,OAAO,OAAO,KAAQ;QAE3B,MAAM,EAAE/C,QAAQ,EAAE,GAAG2C;QACrB,MAAMoB,eAAehB,MAAMiB,IAAI,KAAKhI,gCAAKA,CAACiI,IAAI,CAACC,KAAK;QAEpDrG,SAAS/J,GAAG,CAAC,MAAiB,OAAXiP,MAAMiB,IAAI,EAAC,WAAShE,UAAU+C;QAEjD,YAAY;QACZ,MAAMoB,mBAAmB;YACrB,MAAMzE,UAAUqD,MAAMrD,OAAO;YAC7B,MAAM0E,cAAyC,CAAC;YAEhD,IAAIrB,MAAMiB,IAAI,KAAKhI,gCAAKA,CAACiI,IAAI,CAACI,KAAK,EAAE;gBACjCD,YAAYxF,cAAc,GAAG,CAACc;YAClC,OAAO,IAAIqD,MAAMiB,IAAI,KAAKhI,gCAAKA,CAACiI,IAAI,CAACC,KAAK,EAAE;gBACxCE,YAAYvF,cAAc,GAAG,CAACa;YAClC;YAEA+C,uBAAuBzC,UAAUoE;YAEjC,oCAAoC;YACpC,IAAIL,cAAc;gBACdjE,gBAAgB8D,CAAAA,OAAQ;2BAAIA;qBAAK;YACrC;QACJ;QAEA,gBAAgB;QAChBb,MAAM9N,EAAE,CAAC,SAASkP;QAClBpB,MAAM9N,EAAE,CAAC,WAAWkP;QAEpB,SAAS;QACTA;QAEA,mBAAmB;QACnB,0BAA0B;QAC1BrE,gBAAgB8D,CAAAA;YACZ,MAAMU,oBAAoBV,KAAKW,IAAI,CAACrQ,CAAAA,IAAKA,EAAE8L,QAAQ,KAAKA;YACxD,IAAI,CAACsE,mBAAmB;gBACpB,OAAO;uBAAIV;oBAAMjB;iBAAiC;YACtD;YACA,OAAO;mBAAIiB;aAAK;QACpB;QAGA,OAAO;QACP,OAAO;YACHb,MAAMyB,GAAG,CAAC,SAASL;YACnBpB,MAAMyB,GAAG,CAAC,WAAWL;QACzB;IACJ,GAAG;QAAC1B;KAAuB;IAE3B,WAAW;IACX,MAAMb,qBAAqBpG,qBAAWA,CAAC,CAAC0F;QAGpC,MAAMuD,gBAA8C;YAChD,YAAY;YACZC,sBAAsB,CAAC/B;gBACnB,IAAI,CAAEA,CAAAA,uBAAuB7G,4CAAgB,GAAI;gBAEjD+B,SAAS/J,GAAG,CAAC,aAAa6O,YAAY3C,QAAQ;gBAE9C,4BAA4B;gBAC5BF,gBAAgB8D,CAAAA;oBACZ,oBAAoB;oBACpB,IAAIA,KAAKW,IAAI,CAACrQ,CAAAA,IAAKA,EAAE8L,QAAQ,KAAK2C,YAAY3C,QAAQ,GAAG;wBACrD,OAAO4D;oBACX;oBACA,OAAO;2BAAIA;wBAAMjB;qBAAY;gBACjC;gBAEA,aAAa;gBACb,MAAMgC,uBAAuB,CAAC7B;oBAC1BjF,SAAS/J,GAAG,CAAC,cAAcgP,YAAYkB,IAAI,EAAErB,YAAY3C,QAAQ;oBACjE,IAAI8C,YAAYC,KAAK,EAAE;wBACnBC,sBAAsBF,YAAYC,KAAK,EAAiBD,aAAaH;oBACzE,OAAO;wBACHG,YAAY8B,IAAI,CAAC,cAAc,CAAC7B;4BAC5BC,sBAAsBD,OAAOD,aAAaH;wBAC9C;oBACJ;gBACJ;gBAEA,WAAW;gBACXA,YAAY1N,EAAE,CAAC,kBAAkB0P;gBAEjC,YAAY;gBACZhC,YAAYkC,iBAAiB,CAACnC,OAAO,CAACI,CAAAA;oBAClC,IAAIA,YAAYC,KAAK,EAAE;wBACnBC,sBAAsBF,YAAYC,KAAK,EAAiBD,aAAaH;oBACzE;gBACJ;gBAEA,SAAS;gBACT,OAAO;oBACHA,YAAY6B,GAAG,CAAC,kBAAkBG;gBACtC;YACJ;YAEA,YAAY;YACZG,yBAAyB,CAACnC;gBACtB9E,SAAS/J,GAAG,CAAC,eAAe6O,YAAY3C,QAAQ;gBAChDF,gBAAgB8D,CAAAA;oBACZ,MAAMmB,kBAAkBnB,KAAKoB,MAAM,CAAC9Q,CAAAA,IAAKA,EAAE8L,QAAQ,KAAK2C,YAAY3C,QAAQ;oBAC5EnC,SAAS/J,GAAG,CAAC,cAAciR,gBAAgB3S,GAAG,CAAC8B,CAAAA,IAAKA,EAAE8L,QAAQ;oBAC9D,OAAO+E;gBACX;YACJ;YAEA,SAAS;YACTE,iBAAiB,CAAClC,OAAoBD,aAA+BH;gBACjE,IAAI,CAACI,OAAO;gBACZlF,SAAS/J,GAAG,CAAC,WAAWiP,MAAMiB,IAAI,EAAErB,YAAY3C,QAAQ;gBACxD,WAAW;gBACXgD,sBAAsBD,OAAOD,aAAaH;YAC9C;YAEAuC,cAAc,CAACC;oBACOA;gBAAlB,MAAMC,YAAYD,CAAAA,mBAAAA,8BAAAA,mBAAAA,OAAQE,QAAQ,cAAhBF,uCAAAA,sBAAAA,YAAwB;gBAC1CtH,SAAS/J,GAAG,CAAC,gBAAgBsR;gBAC7B,yCAAyC;gBACzC5F,gBAAgB;gBAChBM,gBAAgB,EAAE;gBAClBL,SAAS;YACb;YAEA6F,cAAc;gBACVzH,SAAS/J,GAAG,CAAC;gBACb2L,SAAS;YACb;YAEA8F,aAAa;gBACT1H,SAAS/J,GAAG,CAAC;gBACb2L,SAAS;YACb;QACJ;QAEA,SAAS;QACTyB,KACKjM,EAAE,CAAC4G,oCAASA,CAAC2J,YAAY,EAAEf,cAAcS,YAAY,EACrDjQ,EAAE,CAAC4G,oCAASA,CAAC4J,YAAY,EAAEhB,cAAca,YAAY,EACrDrQ,EAAE,CAAC4G,oCAASA,CAAC6J,WAAW,EAAEjB,cAAcc,WAAW,EACnDtQ,EAAE,CAAC4G,oCAASA,CAAC8J,oBAAoB,EAAElB,cAAcC,oBAAoB,EACrEzP,EAAE,CAAC4G,oCAASA,CAAC+J,uBAAuB,EAAEnB,cAAcK,uBAAuB,EAC3E7P,EAAE,CAAC4G,oCAASA,CAACgK,eAAe,EAAEpB,cAAcQ,eAAe;QAEhE,SAAS;QACT,OAAO;YACH,IAAI,CAAC/D,MAAM;YACXA,KACKsD,GAAG,CAAC3I,oCAASA,CAAC2J,YAAY,EAAEf,cAAcS,YAAY,EACtDV,GAAG,CAAC3I,oCAASA,CAAC4J,YAAY,EAAEhB,cAAca,YAAY,EACtDd,GAAG,CAAC3I,oCAASA,CAAC6J,WAAW,EAAEjB,cAAcc,WAAW,EACpDf,GAAG,CAAC3I,oCAASA,CAAC8J,oBAAoB,EAAElB,cAAcC,oBAAoB,EACtEF,GAAG,CAAC3I,oCAASA,CAAC+J,uBAAuB,EAAEnB,cAAcK,uBAAuB,EAC5EN,GAAG,CAAC3I,oCAASA,CAACgK,eAAe,EAAEpB,cAAcQ,eAAe;YAEjE,YAAY;YACZ,OAAO7K;QACX;IACJ,GAAG;QAAC4I;KAAsB;IAE1B,OAAO;IACP,MAAM8C,eAAetK,qBAAWA,CAAC;QAC7BqC,SAAS/J,GAAG,CAAC;QACb,IAAI;YACA,WAAW;YACXmP,cAAclE,eAAekC,OAAO;YAEpC,SAAS;YACT,IAAInC,QAAQmC,OAAO,EAAE;gBACjB,MAAMnC,QAAQmC,OAAO,CAACiC,UAAU;gBAChCpE,QAAQmC,OAAO,GAAG;YACtB;YAEA,OAAO;YACPzB,gBAAgB;YAChBM,gBAAgB,EAAE;YAClBL,SAAS;YAET,WAAW;YACXsG,OAAOvD,MAAM,CAACxD,cAAciC,OAAO,EAAEyB,OAAO,CAACsD,CAAAA,KAAMA,MAAMA,GAAGC,MAAM;YAClEF,OAAOvD,MAAM,CAACvD,cAAcgC,OAAO,EAAEyB,OAAO,CAACsD,CAAAA,KAAMA,MAAMA,GAAGC,MAAM;YAClEjH,cAAciC,OAAO,GAAG,CAAC;YACzBhC,cAAcgC,OAAO,GAAG,CAAC;YAEzB,WAAW;YACX,IAAI1C,cAAc;gBACdA;YACJ;YAEAV,SAAS/J,GAAG,CAAC;QACjB,EAAE,OAAOoC,OAAO;YACZ2H,SAAS3H,KAAK,CAAC,YAAYA;YAC3BuJ,SAAS;QACb;IACJ,GAAG;QAAClB;KAAa;IAEjB,OAAO;IACP,MAAM2H,UAAU1K,qBAAWA,CAAC;YAAO2K,gFAAe;QAC9C,iBAAiB;QACjB,IAAIA,cAAc;YACd/G,eAAe6B,OAAO,GAAG;QAC7B;QAEApD,SAAS/J,GAAG,CAAC;QACb,IAAI,CAACgL,QAAQmC,OAAO,EAAE;QAEtB,MAAMiB,mBAAmBpD,QAAQmC,OAAO,CAACiB,gBAAgB;QACzD,MAAMpB,aAAa/B,eAAekC,OAAO,CAACmF,IAAI,CAC1CtU,CAAAA,IAAKA,EAAEkS,IAAI,KAAKhI,gCAAKA,CAACiI,IAAI,CAACI,KAAK;QAEpC,MAAMtD,aAAahC,eAAekC,OAAO,CAACmF,IAAI,CAC1CtU,CAAAA,IAAKA,EAAEkS,IAAI,KAAKhI,gCAAKA,CAACiI,IAAI,CAACC,KAAK;QAGpC,IAAI;YACA,IAAIpD,YAAY;gBACZ,MAAMA,WAAWyC,IAAI;YACzB;YACA,IAAIxC,YAAY;gBACZ,MAAMA,WAAWwC,IAAI;YACzB;QACJ,EAAE,OAAOrN,OAAO;YACZ2H,SAAS3H,KAAK,CAAC,WAAWA;QAC9B;QAEA,OAAO;QACP+M,cAAclE,eAAekC,OAAO;QACpClC,eAAekC,OAAO,GAAG,EAAE;QAE3B,OAAO;QACP,IAAInC,QAAQmC,OAAO,EAAE;YACjBnC,QAAQmC,OAAO,CAACiC,UAAU;YAC1BpE,QAAQmC,OAAO,GAAG;QACtB;QAEA,OAAO;QACPzB,gBAAgB;QAChBM,gBAAgB,EAAE;QAClBX,qBAAqB,CAAC;IAC1B,GAAG,EAAE;IAEL,WAAW;IACX,MAAMkH,yBAAyB7K,qBAAWA,CAAC,CAAC8K,cAAuBC;QAC/D5H,oBAAoBiF,CAAAA,OAAS;gBACzB,GAAGA,IAAI;gBACPhF,gBAAgB0H;gBAChBzH,gBAAgB0H;YACpB;IACJ,GAAG,EAAE;IAEL,eAAe;IACf,MAAMC,aAAahL,qBAAWA,CAAC;QAC3B,IAAI,CAACsD,QAAQmC,OAAO,EAAE;QAEtB,MAAMiB,mBAAmBpD,QAAQmC,OAAO,CAACiB,gBAAgB;QACzD,MAAMpB,aAAa/B,eAAekC,OAAO,CAACmF,IAAI,CAC1CtU,CAAAA,IAAKA,EAAEkS,IAAI,KAAKhI,gCAAKA,CAACiI,IAAI,CAACI,KAAK;QAGpC,IAAI,CAACvD,YAAY;QAEjB,IAAI;YACA,iBAAiB;YACjB,MAAM2F,sBAAsB,CAAC/H,iBAAiBE,cAAc;YAE5D,iBAAiB;YACjB,IAAI6H,qBAAqB;gBACrB,MAAM3F,WAAW4F,MAAM;YAC3B,OAAO;gBACH,MAAM5F,WAAW6F,IAAI;YACzB;YAEA,WAAW;YACXhH,WAAW,CAAC8G;YACZhE,uBAAuBP,iBAAiBlC,QAAQ,EAAE;gBAAEpB,gBAAgB6H;YAAoB;YAExF,0BAA0B;YAC1BJ,uBAAuBI,qBAAqB/H,iBAAiBG,cAAc;QAC/E,EAAE,OAAO3I,OAAO;YACZ2H,SAAS3H,KAAK,CAAC,aAAaA;YAC5BuJ,SAAS;QACb;IACJ,GAAG;QAACf;QAAkB+D;QAAwB4D;KAAuB;IAErE,eAAe;IACf,MAAMO,cAAcpL,qBAAWA,CAAC;QAC5B,IAAI,CAACsD,QAAQmC,OAAO,EAAE;QAEtB,MAAMiB,mBAAmBpD,QAAQmC,OAAO,CAACiB,gBAAgB;QACzD,MAAMnB,aAAahC,eAAekC,OAAO,CAACmF,IAAI,CAC1CtU,CAAAA,IAAKA,EAAEkS,IAAI,KAAKhI,gCAAKA,CAACiI,IAAI,CAACC,KAAK;QAGpC,IAAI,CAACnD,YAAY;QAEjB,IAAI;YACA,iBAAiB;YACjB,MAAM8F,sBAAsB,CAACnI,iBAAiBG,cAAc;YAE5D,iBAAiB;YACjB,IAAIgI,qBAAqB;gBACrB,MAAM9F,WAAW2F,MAAM;YAC3B,OAAO;gBACH,MAAM3F,WAAW4F,IAAI;YACzB;YAEA,WAAW;YACX/G,kBAAkBiH;YAClBpE,uBAAuBP,iBAAiBlC,QAAQ,EAAE;gBAAEnB,gBAAgBgI;YAAoB;YAExF,0BAA0B;YAC1BR,uBAAuB3H,iBAAiBE,cAAc,EAAEiI;QAC5D,EAAE,OAAO3Q,OAAO;YACZ2H,SAAS3H,KAAK,CAAC,aAAaA;YAC5BuJ,SAAS;QACb;IACJ,GAAG;QAACf;QAAkB+D;QAAwB4D;KAAuB;IAErE,oBAAoB;IACpB,MAAMS,wBAAwBtL,qBAAWA,CAAC;QACtC,IAAI,CAACsD,QAAQmC,OAAO,EAAE;QAEtB,MAAMiB,mBAAmBpD,QAAQmC,OAAO,CAACiB,gBAAgB;QACzD,MAAMpB,aAAa/B,eAAekC,OAAO,CAACmF,IAAI,CAC1CtU,CAAAA,IAAKA,EAAEkS,IAAI,KAAKhI,gCAAKA,CAACiI,IAAI,CAACI,KAAK;QAGpC,IAAI,CAACvD,YAAY;QAEjB,IAAI;YACA,MAAMiG,gBAAgB,CAACrH;YACvB,IAAIqH,eAAe;gBACf,MAAMjG,WAAW6F,IAAI;YACzB,OAAO;gBACH,MAAM7F,WAAW4F,MAAM;YAC3B;YAEA/G,WAAWoH;YACXtE,uBAAuBP,iBAAiBlC,QAAQ,EAAE;gBAAEpB,gBAAgB,CAACmI;YAAc;QACvF,EAAE,OAAO7Q,OAAO;YACZ2H,SAAS3H,KAAK,CAAC,eAAeA;YAC9BuJ,SAAS;QACb;IACJ,GAAG;QAACC;QAAS+C;KAAuB;IAEpC,oBAAoB;IACpB,MAAMuE,yBAAyBxL,qBAAWA,CAAC;QACvC,IAAI,CAACsD,QAAQmC,OAAO,EAAE;QAEtB,MAAMiB,mBAAmBpD,QAAQmC,OAAO,CAACiB,gBAAgB;QACzD,MAAMnB,aAAahC,eAAekC,OAAO,CAACmF,IAAI,CAC1CtU,CAAAA,IAAKA,EAAEkS,IAAI,KAAKhI,gCAAKA,CAACiI,IAAI,CAACC,KAAK;QAGpC,IAAI,CAACnD,YAAY;QAEjB,IAAI;YACA,MAAMkG,gBAAgB,CAACpI;YACvB,IAAIoI,eAAe;gBACf,MAAMlG,WAAW2F,MAAM;YAC3B,OAAO;gBACH,MAAM3F,WAAW4F,IAAI;YACzB;YAEA/G,kBAAkBqH;YAClBxE,uBAAuBP,iBAAiBlC,QAAQ,EAAE;gBAAEnB,gBAAgBoI;YAAc;QACtF,EAAE,OAAO/Q,OAAO;YACZ2H,SAAS3H,KAAK,CAAC,eAAeA;YAC9BuJ,SAAS;QACb;IACJ,GAAG;QAACZ;QAAgB4D;KAAuB;IAE3C,YAAY;IACZ3L,mBAASA,CAAC;QACN,OAAO;YACH,OAAO;YACPoP,QAAQ;QACZ;IACJ,GAAG,EAAE;IAEL,UAAU;IACV,MAAMgB,sBAAsB1L,qBAAWA,CAAC,CAACwE;QACrC,OAAOd,iBAAiB,CAACc,SAAS,IAAI;YAClCpB,gBAAgB;YAChBC,gBAAgB;YAChBgF,sBAAsB;YACtBC,sBAAsB;QAC1B;IACJ,GAAG;QAAC5E;KAAkB;IAEtB,WAAW;IACX,MAAM0D,uBAAuBpH,qBAAWA,CAAC,CAACmH;YAInBA,wCAKAA;QARnB,MAAMnL,QAAQ0P,oBAAoBvE,YAAY3C,QAAQ;QAEtD,SAAS;QACT,MAAMc,cAAa6B,yCAAAA,YAAYE,oBAAoB,GAAGuD,IAAI,CACtDe,CAAAA,MAAOA,IAAInD,IAAI,KAAKhI,gCAAKA,CAACiI,IAAI,CAACI,KAAK,eADrB1B,6DAAAA,uCAEhBI,KAAK;QAER,SAAS;QACT,MAAMhC,cAAa4B,0CAAAA,YAAYE,oBAAoB,GAAGuD,IAAI,CACtDe,CAAAA,MAAOA,IAAInD,IAAI,KAAKhI,gCAAKA,CAACiI,IAAI,CAACC,KAAK,eADrBvB,8DAAAA,wCAEhBI,KAAK;QAERN,uBAAuBE,YAAY3C,QAAQ,EAAE;YACzC,GAAGxI,KAAK;YACRoH,gBAAgBkC,aAAa,CAACA,WAAWpB,OAAO,GAAG;YACnDb,gBAAgBkC,aAAa,CAACA,WAAWrB,OAAO,GAAG;QACvD;IACJ,GAAG;QAACwH;QAAqBzE;KAAuB;IAEhD,aAAa;IACb,MAAM2E,oBAAoB5L,qBAAWA,CAAC,CAACmH;QACnC,MAAM0E,eAAenI,iBAAiB,CAACyD,YAAY3C,QAAQ,CAAC,IAAI;YAC5DpB,gBAAgB;YAChBC,gBAAgB;YAChBgF,sBAAsB;YACtBC,sBAAsB;QAC1B;QAEArB,uBAAuBE,YAAY3C,QAAQ,EAAE;YACzC,GAAGqH,YAAY;YACfzI,gBAAgB,CAACyI,aAAazI,cAAc;QAChD;IACJ,GAAG;QAACM;QAAmBuD;KAAuB;IAE9C,aAAa;IACb,MAAM6E,oBAAoB9L,qBAAWA,CAAC,CAACmH;QACnC,MAAM0E,eAAenI,iBAAiB,CAACyD,YAAY3C,QAAQ,CAAC,IAAI;YAC5DpB,gBAAgB;YAChBC,gBAAgB;YAChBgF,sBAAsB;YACtBC,sBAAsB;QAC1B;QAEArB,uBAAuBE,YAAY3C,QAAQ,EAAE;YACzC,GAAGqH,YAAY;YACfxI,gBAAgB,CAACwI,aAAaxI,cAAc;QAChD;IACJ,GAAG;QAACK;QAAmBuD;KAAuB;IAE9C,uBAAuB;IACvB,MAAM8E,yBAAyB/L,qBAAWA,CAAC,CAACgM;QACxC,MAAMhQ,QAAQ0H,iBAAiB,CAACsI,cAAc;QAC9C,IAAI,CAAChQ,OAAO,OAAO;YAAEoH,gBAAgB;YAAMC,gBAAgB;QAAK;QAEhE,OAAO;YACHD,gBAAgBF,iBAAiBE,cAAc,GAAGpH,MAAMoH,cAAc,GAAG;YACzEC,gBAAgBH,iBAAiBG,cAAc,GAAGrH,MAAMqH,cAAc,GAAG;QAC7E;IACJ,GAAG;QAACH;QAAkBQ;KAAkB;IAExC,UAAU;IACV,MAAMuI,iCAAmBhN,UAAU,CAAC;YAAC,EACjCkI,WAAW,EACXgF,OAAO,EACP9I,cAAc,EAKjB;QACG,MAAM+I,WAAWnM,gBAAMA,CAAmB;QAC1C,MAAM,CAACsF,YAAY8G,cAAc,GAAGnM,kBAAQA,CAA+C;QAE3F,WAAW;QACX5E,mBAASA,CAAC;YACN,IAAI,CAAC6L,aAAa;YAElB,cAAc;YACd,MAAMmF,mBAAmBxF,MAAMC,IAAI,CAACI,YAAYkC,iBAAiB,CAACrC,MAAM,IACnE4D,IAAI,CAACe,CAAAA,MAAOA,IAAInD,IAAI,KAAKhI,gCAAKA,CAACiI,IAAI,CAACC,KAAK;YAE9C,gBAAgB;YAChB,IAAI4D,oBAAoBA,iBAAiB/E,KAAK,EAAE;gBAC5C8E,cAAcC,iBAAiB/E,KAAK;YACxC;YAEA,WAAW;YACX,MAAMC,wBAAwB,CAACD;gBAC3B,IAAIA,MAAMiB,IAAI,KAAKhI,gCAAKA,CAACiI,IAAI,CAACC,KAAK,EAAE;oBACjC2D,cAAc9E;gBAClB;YACJ;YAEA,aAAa;YACb,MAAMgF,0BAA0B,CAAChF;gBAC7B,IAAIA,MAAMiB,IAAI,KAAKhI,gCAAKA,CAACiI,IAAI,CAACC,KAAK,EAAE;oBACjC2D,cAAc;gBAClB;YACJ;YAEA,SAAS;YACTlF,YAAY1N,EAAE,CAAC4G,oCAASA,CAACgK,eAAe,EAAE7C;YAC1CL,YAAY1N,EAAE,CAAC4G,oCAASA,CAACmM,iBAAiB,EAAED;YAE5C,OAAO;YACP,OAAO;gBACHpF,YAAY6B,GAAG,CAAC3I,oCAASA,CAACgK,eAAe,EAAE7C;gBAC3CL,YAAY6B,GAAG,CAAC3I,oCAASA,CAACmM,iBAAiB,EAAED;YACjD;QACJ,GAAG;YAACpF;SAAY;QAEhB,cAAc;QACd7L,mBAASA,CAAC;YACN,MAAMmR,eAAeL,SAAS3G,OAAO;YACrC,IAAI,CAACgH,gBAAgB,CAAClH,YAAY;YAElC,UAAU;YACV,MAAOkH,aAAaC,UAAU,CAAE;gBAC5BD,aAAaE,WAAW,CAACF,aAAaC,UAAU;YACpD;YAEA,SAAS;YACT,IAAIrJ,gBAAgB;gBAChBkC,WAAWqH,MAAM,CAACH;YACtB;YAEA,OAAO;gBACH,IAAIlH,YAAY;oBACZA,WAAWyC,MAAM,CAACyE;gBACtB;YACJ;QACJ,GAAG;YAAClH;YAAYlC;SAAe;QAE/B,qBACI,qBAACvG,kBAAGA;YACA0B,IAAI;gBACA+D,OAAO;gBACPsK,aAAa;gBACbC,SAAS;gBACTnN,SAAS;gBACToN,YAAY;gBACZC,gBAAgB;gBAChB3N,UAAU;YACd;;8BAEA,oBAAC4N;oBACGtK,KAAKyJ;oBACLc,QAAQ;oBACRC,WAAW;oBACXC,OAAOjB;oBACPlJ,OAAO;wBACHV,OAAO;wBACP1C,QAAQ;wBACRwN,WAAW;wBACX1N,SAAS0D,iBAAiB,UAAU;oBACxC;;gBAEH,CAACA,gCACE,oBAACvG,kBAAGA;oBACA0B,IAAI;wBACAa,UAAU;wBACViO,KAAK;wBACL/N,MAAM;wBACNC,OAAO;wBACPF,QAAQ;wBACRK,SAAS;wBACToN,YAAY;wBACZC,gBAAgB;wBAChBF,SAAS;oBACb;8BAEA,kCAAChQ,kBAAGA;wBACA0B,IAAI;4BACA+D,OAAO;4BACP1C,QAAQ;4BACR0N,cAAc;4BACd5N,SAAS;4BACToN,YAAY;4BACZC,gBAAgB;4BAChBF,SAAS;4BACTU,OAAO;4BACPC,UAAU;4BACVC,YAAY;wBAChB;kCAECvG,YAAY3C,QAAQ,CAACmJ,MAAM,CAAC,GAAGC,WAAW;;;;;IAMnE;IAEA,UAAU;IACV,MAAMC,iCAAmB5O,UAAU,CAAC;YAAC,EACjCkI,WAAW,EACXjD,OAAO,EAIV;QACG,MAAM4J,WAAW7N,gBAAMA,CAAmB;QAC1C,MAAM,CAACqF,YAAYyI,cAAc,GAAG7N,kBAAQA,CAA+C;QAE3F5E,mBAASA,CAAC;YACN,IAAI,CAAC6L,aAAa;YAElB,MAAMK,wBAAwB,CAACD;gBAC3B,IAAIA,MAAMiB,IAAI,KAAKhI,gCAAKA,CAACiI,IAAI,CAACI,KAAK,EAAE;oBACjCkF,cAAcxG;gBAClB;YACJ;YAEA,MAAMgF,0BAA0B,CAAChF;gBAC7B,IAAIA,MAAMiB,IAAI,KAAKhI,gCAAKA,CAACiI,IAAI,CAACI,KAAK,EAAE;oBACjCkF,cAAc;gBAClB;YACJ;YAEA,YAAY;YACZ,MAAMC,mBAAmBlH,MAAMC,IAAI,CAACI,YAAYkC,iBAAiB,CAACrC,MAAM,IACnE4D,IAAI,CAACe,CAAAA,MAAOA,IAAInD,IAAI,KAAKhI,gCAAKA,CAACiI,IAAI,CAACI,KAAK;YAE9C,IAAImF,oBAAoBA,iBAAiBzG,KAAK,EAAE;gBAC5CwG,cAAcC,iBAAiBzG,KAAK;YACxC;YAEAJ,YAAY1N,EAAE,CAAC4G,oCAASA,CAACgK,eAAe,EAAE7C;YAC1CL,YAAY1N,EAAE,CAAC4G,oCAASA,CAACmM,iBAAiB,EAAED;YAE5C,OAAO;gBACHpF,YAAY6B,GAAG,CAAC3I,oCAASA,CAACgK,eAAe,EAAE7C;gBAC3CL,YAAY6B,GAAG,CAAC3I,oCAASA,CAACmM,iBAAiB,EAAED;YACjD;QACJ,GAAG;YAACpF;SAAY;QAEhB7L,mBAASA,CAAC;YACN,MAAM2S,eAAeH,SAASrI,OAAO;YACrC,IAAIwI,gBAAgB3I,YAAY;gBAC5BA,WAAWsH,MAAM,CAACqB;gBAClB,oBAAoB;gBACpBA,aAAab,KAAK,GAAGlJ;gBACrB,OAAO;oBACHoB,WAAW0C,MAAM,CAACiG;gBACtB;YACJ;QACJ,GAAG;YAAC3I;YAAYpB;SAAQ;QAExB,qBAAO,oBAACgK;YAAMvL,KAAKmL;YAAUZ,QAAQ;YAACC,WAAW;;IACrD;IAEA,QAAQ;IACR,MAAMgB,oBAAoBnO,qBAAWA,CAAC,CAACmH,aAA0BgF;QAC7D,MAAMiC,iBAAiBrC,uBAAuB5E,YAAY3C,QAAQ;QAElE,qBACI,qBAAC1H,kBAAGA;YAEA0B,IAAI;gBACAa,UAAU;gBACVkO,cAAc;gBACd7O,UAAU;gBACVoO,SAAS;gBACTuB,WAAW;YACf;;8BAGA,oBAACpC;oBACG9E,aAAaA;oBACbgF,SAASA;oBACT9I,gBAAgB+K,eAAe/K,cAAc;;gBAIhD,CAAC8I,yBACE,oBAAC0B;oBACG1G,aAAaA;oBACbjD,SAAS,CAACkK,eAAehL,cAAc;;8BAK/C,qBAACrC,oBAAIA;oBAAC3C,SAAS;oBACXI,IAAI;wBACAa,UAAU;wBACVC,QAAQ;wBACRC,MAAM;wBACNC,OAAO;wBACP9G,GAAG;wBACHoU,SAAS;wBACTE,gBAAgB;wBAChBsB,KAAK;oBACT;;sCAEA,oBAACvN,oBAAIA;4BAACwN,IAAI;sCACN,kCAAC1N,yBAAUA;gCACP2N,MAAK;gCACLhB,OAAOY,eAAehL,cAAc,GAAG,YAAY;gCACnDpM,SAAS,IAAM4U,kBAAkBzE;0CAEhCiH,eAAehL,cAAc,iBAAG,oBAACzB,uBAAYA,sBAAM,oBAACE,wBAAaA;;;sCAG1E,oBAACd,oBAAIA;4BAACwN,IAAI;sCACN,kCAAC1N,yBAAUA;gCACP2N,MAAK;gCACLhB,OAAOY,eAAe/K,cAAc,GAAG,YAAY;gCACnDrM,SAAS,IAAM8U,kBAAkB3E;0CAEhCiH,eAAe/K,cAAc,iBAAG,oBAACpB,yBAAcA,sBAAM,oBAACE,4BAAiBA;;;sCAGhF,oBAACpB,oBAAIA;4BAACwN,IAAI;sCACN,mCAAC5N,yBAAUA;gCAAC8N,SAAQ;gCAAUjB,OAAM;;oCAC/BrG,YAAY3C,QAAQ;oCAAC;oCAAE2H,WAAW;;;;wBAK1CA,yBACG,oBAACpL,oBAAIA;4BAACwN,IAAI;sCACN,kCAAC1N,yBAAUA;gCACP2N,MAAK;gCACLxX,SAASsU;gCACTkC,OAAOtJ,UAAU,UAAU;gCAC3B1F,IAAI;oCAAEgP,OAAO;gCAAQ;gCACrBtP,OAAOgG,UAAU,SAAS;0CAEzBA,wBAAU,oBAAC/C,qBAAUA,sBAAM,oBAACF,kBAAOA;;;wBAM/CkL,yBACG,oBAACpL,oBAAIA;4BAACwN,IAAI;sCACN,kCAAC1N,yBAAUA;gCACP2N,MAAK;gCACLxX,SAASwU;gCACTgC,OAAOnK,iBAAiB,YAAY;gCACpC7E,IAAI;oCAAEgP,OAAO;gCAAQ;gCACrBtP,OAAOmF,iBAAiB,UAAU;0CAEjCA,+BAAiB,oBAAChC,uBAASA,sBAAM,oBAACE,0BAAYA;;;;;;WAtF1D4F,YAAY3C,QAAQ;IA6FrC,GAAG;QAACN;QAASb;QAAgB0I;QAAwBH;QAAmBE;QAAmBR;QAAuBE;KAAuB;IAEzI,SAAS;IACT,IAAI3H,cAAc;QACd,qBACI,qBAAC/G,kBAAGA;YAAC0B,IAAI;gBACLmB,SAAS;gBACTC,eAAe;gBACfmN,YAAY;gBACZC,gBAAgB;gBAChBnN,QAAQ;gBACRnH,GAAG;YACP;;8BACI,oBAACoI,+BAAgBA;8BACjB,oBAACH,yBAAUA;oBAAC8N,SAAQ;oBAAQjQ,IAAI;wBAAEkQ,IAAI;oBAAE;8BAAG;;;;IAGvD;IAEA,SAAS;IACT,IAAIhU,OAAO;QACP,qBACI,qBAACkG,oBAAKA;YAAC+N,UAAS;YAAQnQ,IAAI;gBAAEoQ,GAAG;YAAE;;8BAC/B,oBAACjO,yBAAUA;oBAAC8N,SAAQ;8BAAS/T;;8BAC7B,oBAACqC,qBAAMA;oBACH0R,SAAQ;oBACRjB,OAAM;oBACNxW,SAASqO;oBACTwJ,yBAAW,oBAAC9M,sBAAWA;oBACvBvD,IAAI;wBAAEkQ,IAAI;oBAAE;8BACf;;;;IAKb;IAEA,QAAQ;IACR,SAASI;QACL,gBAAgB;QAChB,IAAI/K,gBAAgBT,QAAQmC,OAAO,EAAE;YACjC,qBACI,qBAAC3I,kBAAGA;gBAAC/F,WAAWA;gBAAWyH,IAAI;oBAAEqB,QAAQ;oBAAQF,SAAS;oBAAQC,eAAe;gBAAS;;kCACtF,oBAAC9C,kBAAGA;wBAAC0B,IAAI;4BAAEuQ,MAAM;4BAAGrQ,UAAU;4BAAQhG,GAAG;wBAAE;kCACvC,mCAACqI,oBAAIA;4BAAC3C,SAAS;4BAAC2B,SAAS;;8CACrB,oBAACgB,oBAAIA;oCAACwN,IAAI;oCAACS,IAAI;oCAAIC,IAAI5K,aAAavL,MAAM,KAAK,IAAI,KAAK;8CACnDqV,kBAAkB7K,QAAQmC,OAAO,CAACiB,gBAAgB,EAAE;;gCAExDrC,aAAazN,GAAG,CAAC,SAAUuQ,WAAW;oCACnC,qBACI,oBAACpG,oBAAIA;wCAACwN,IAAI;wCAACS,IAAI;wCAAIC,IAAI;kDAClBd,kBAAkBhH,aAAa;uCADLA,YAAY3C,QAAQ;gCAI3D;;;;kCAIR,qBAAC1H,kBAAGA;wBAAC0B,IAAI;4BACL9F,GAAG;4BACHwW,WAAW;4BACXC,aAAa;4BACbxP,SAAS;4BACTqN,gBAAgB;4BAChBsB,KAAK;wBACT;;0CACI,oBAACvR,qBAAMA;gCACH0R,SAAQ;gCACRjB,OAAO,CAACtK,iBAAiBE,cAAc,GAAG,UAAU;gCACpDpM,SAASgU;gCACT6D,WAAW,CAAC3L,iBAAiBE,cAAc,iBAAG,oBAACjC,qBAAUA,sBAAM,oBAACF,kBAAOA;0CAEtE,CAACiC,iBAAiBE,cAAc,GAAG,SAAS;;0CAGjD,oBAACrG,qBAAMA;gCACH0R,SAAQ;gCACRjB,OAAO,CAACtK,iBAAiBG,cAAc,GAAG,UAAU;gCACpDrM,SAASoU;gCACTyD,WAAW3L,iBAAiBG,cAAc,iBAAG,oBAAChC,uBAASA,sBAAM,oBAACE,0BAAYA;0CAEzE2B,iBAAiBG,cAAc,GAAG,UAAU;;0CAGjD,oBAACtG,qBAAMA;gCACH0R,SAAQ;gCACRjB,OAAM;gCACNxW,SAASsT;gCACTuE,yBAAW,oBAACpN,sBAAWA;0CAC1B;;;;;;QAMjB;QAEA,aAAa;QACb,qBACI,qBAAC3E,kBAAGA;YAAC/F,WAAWA;YAAWyH,IAAI;gBAC3BqB,QAAQ;gBACRF,SAAS;gBACTC,eAAe;gBACfmN,YAAY;gBACZC,gBAAgB;gBAChBtU,GAAG;YACP;;8BACI,oBAACiI,yBAAUA;oBAAC8N,SAAQ;oBAAKW,YAAY;8BAAC;;8BAGtC,qBAACrS,qBAAMA;oBACH0R,SAAQ;oBACRjB,OAAM;oBACNxW,SAASqO;oBACTgK,UAAUxL;oBACVgL,yBAAW,oBAACxN,uBAASA;oBACrB7C,IAAI;wBAAEkQ,IAAI;oBAAE;;wBACf;wBAEI7K,8BACG,oBAAC/C,+BAAgBA;4BACb0N,MAAM;4BACNhQ,IAAI;gCACAgP,OAAO;gCACP8B,IAAI;4BACR;;;;;;IAMxB;IAEA,OAAO;IACP,qBACI,oBAACxS,kBAAGA;QAAC6F,KAAKA;QAAKnE,IAAIA;QAAIyE,OAAOA;kBACzBvI,sBACG,oBAACkG,oBAAKA;YACF+N,UAAS;YACTY,sBACI,oBAACxS,qBAAMA;gBACHyQ,OAAM;gBACNgB,MAAK;gBACLxX,SAASqO;0BACZ;;sBAKJ3K;aAGLoU;;AAIhB;AAEA,qBAAqB;AACrB,MAAMU,4BAAcrP,oBAAUA,CAACuC;AAC/B8M,YAAYC,WAAW,GAAG;AAEH;;;;;;;;;;;;;;;;;;;;;;;ACvsC6C;AACvC;AAqD7B;;;CAGC,GACM,eAAeG,qBAAqBC,IAA+C;IACtF,MAAMrV,MAAM,MAAMkV,2BAAOA,CAA2BC,cAAGA,CAACG,IAAI,EAAEH,cAAGA,CAACI,kBAAkB,EAAEF,KAAKG,MAAM,EAAEH,KAAKI,OAAO,EAAEJ,KAAKK,OAAO;IAC7H,OAAO1V;AACX;;;AC7DoE;AACvC;AAgC7B;;;CAGC,GACM,eAAe2V,sBAAsBN,IAAgD;IACxF,MAAMrV,MAAM,MAAMkV,2BAAOA,CAA4BC,cAAGA,CAACG,IAAI,EAAEH,cAAGA,CAACS,mBAAmB,EAAEP,KAAKG,MAAM,EAAEH,KAAKI,OAAO,EAAEJ,KAAKK,OAAO;IAC/H,OAAO1V;AACX;;;;;;;;;;AC9BuB;AAC0D;AAU7D;AACgB;AACI;AACgB;AAElB;AACtC,MAAMwW,aAAa,IAAI1Z,eAAGA,CAAC,OAAO;AAElC,MAAM2Z,kBAAkB,CAACC,OAAiB,iCAAiCC,IAAI,CAACD;AAChF,MAAME,kBAAkB,CAACF,OAAiB,WAAWC,IAAI,CAACD;AAQnD,SAASG,oBAAoB,KAAyD;QAAzD,EAAEC,IAAI,EAAEC,OAAO,EAAEC,YAAY,EAA4B,GAAzD;QAuBgEX;IAtBhG,MAAMxO,WAAW2O,WAAWzY,GAAG,CAAC,OAAO;IAEvC,MAAM,CAACkZ,UAAUC,YAAY,GAAGxR,kBAAQA,CAAC;IACzC,MAAM,CAACyR,QAAQC,UAAU,GAAG1R,kBAAQA,CAAC;IACrC,MAAM,CAAC2R,UAAUC,YAAY,GAAG5R,kBAAQA,CAAgB;IACxD,MAAM,CAAC6R,oBAAoBC,sBAAsB,GAAG9R,kBAAQA,CAAiC,EAAE;IAE/F,iDAAiD;IACjD5E,mBAASA,CAAC;QACNb,QAAQnC,GAAG,CAAC,+BAA+ByZ;IAC/C,GAAG;QAACA;KAAmB;IAEvB,uCAAuC;IACvCzW,mBAASA,CAAC;QACNb,QAAQnC,GAAG,CAAC,qBAAqBuZ;IACrC,GAAG;QAACA;KAAS;IACb,MAAM,CAACI,SAASC,WAAW,GAAGhS,kBAAQA,CAAC;IACvC,MAAM,CAACiS,WAAWC,aAAa,GAAGlS,kBAAQA,CAAC;IAC3C,MAAM,CAACmS,gBAAgBC,kBAAkB,GAAGpS,kBAAQA,CAAC;IAErD,MAAM,CAACqS,eAAeC,iBAAiB,GAAGtS,kBAAQA,CAA+D;IACjH,MAAMuS,gBAAgBxS,gBAAMA,CAAC;IAC7B,MAAM,CAACyS,YAAY,GAAG3B,sCAAaA,CAACF,sBAAUA,CAAC8B,QAAQ,CAACC,QAAQ,EAAE,+BAA8B/B,8CAAAA,sBAAUA,CAAC8B,QAAQ,CAACC,QAAQ,CAACC,aAAa,cAA1ChC,kEAAAA,4CAA4CiC,YAAY;IACxJ,MAAM,CAACC,eAAe,GAAGhC,sCAAaA,CAACJ,gBAAIA,CAAC1X,IAAI,CAAC+Z,WAAW,EAAE,oBAAoB,CAAC,CAACrC,gBAAIA,CAAC1X,IAAI,CAAC+Z,WAAW,CAACC,gBAAgB;IAE1H3X,mBAASA,CAAC;QACN,IAAIoX,eAAeH,iBAAiB,CAACE,cAAchN,OAAO,EAAE;YACxDgN,cAAchN,OAAO,GAAG;YACxB,MAAMyN,cAAwC;gBAC1C,GAAGX,aAAa;gBAChBY,qBAAqBT;gBACrBjB,UAAUc,CAAAA,0BAAAA,oCAAAA,cAAed,QAAQ,KAAI,EAAE;gBACvC2B,MAAMb,CAAAA,0BAAAA,oCAAAA,cAAea,IAAI,KAAI;YACjC;YACAC,eAAeH;QACnB;IACJ,GAAG;QAACR;QAAaH;KAAc;IAE/B,MAAMc,iBAAiBrT,qBAAWA,CAAC,OAAOgQ;QACtC,IAAI,CAACA,OAAOyB,QAAQ,IAAI,CAACzB,OAAOoD,IAAI,EAAE;YAClCxC,oBAAKA,CAAClW,KAAK,CAAC;YACZ;QACJ;QAEA0X,aAAa;QAEb,IAAI;gBAiBKkB;YAhBL,MAAM9Y,MAAM,MAAMoV,oBAAoBA,CAAC;gBACnCI;gBACAE,SAAS;oBAAEqD,UAAU;gBAAK;YAC9B;YAEA9Y,QAAQnC,GAAG,CAAC,oBAAoBkC;YAEhC,SAAS;YACT,IAAIA,IAAIgZ,GAAG,IAAI,CAAChZ,IAAIiZ,SAAS,IAAI,CAACjZ,IAAIkZ,QAAQ,EAAE;oBACvBlZ;gBAArB,MAAMmZ,eAAenZ,EAAAA,WAAAA,IAAIgZ,GAAG,cAAPhZ,+BAAAA,SAASyX,OAAO,KAAI;gBACzCrB,oBAAKA,CAAClW,KAAK,CAACiZ;gBACZ;YACJ;YAEA,YAAY;YACZ,MAAML,eAAe9Y,IAAIvB,IAAI;YAC7B,IAAI,EAACqa,yBAAAA,oCAAAA,qBAAAA,aAAcra,IAAI,cAAlBqa,yCAAAA,mBAAoBM,OAAO,GAAE;oBACTN,qBAA2B9Y;gBAAhD,MAAMmZ,eAAeL,CAAAA,yBAAAA,oCAAAA,sBAAAA,aAAcra,IAAI,cAAlBqa,0CAAAA,oBAAoB1Y,GAAG,OAAIJ,YAAAA,IAAIvB,IAAI,cAARuB,gCAAAA,UAAUI,GAAG,KAAI;gBACjEgW,oBAAKA,CAAClW,KAAK,CAACiZ;gBACZ;YACJ;YAEA,MAAMC,UAAkCN,aAAara,IAAI,CAAC2a,OAAO;YAEjE,aAAa;YACb,MAAMC,iBAAiBD,QAAQpK,MAAM,CAACsK,CAAAA,IAAKA,EAAEC,WAAW,KAAK;YAC7D,MAAMC,cAAcJ,QAAQpK,MAAM,CAACsK,CAAAA,IAAKA,EAAEC,WAAW,KAAK,yBAAyBD,EAAEC,WAAW,KAAK;YACrG,MAAME,eAAeL,QAAQpK,MAAM,CAACsK,CAAAA,IAAKA,EAAEC,WAAW,KAAK,aAAaD,EAAEC,WAAW,KAAK,yBAAyBD,EAAEC,WAAW,KAAK;YAErI,IAAIF,eAAe/a,MAAM,GAAG,GAAG;gBAC3B8X,oBAAKA,CAACsD,OAAO,CAAC,QAA8B,OAAtBL,eAAe/a,MAAM,EAAC;gBAC5C0Y,yBAAAA,mCAAAA;YACJ;YAEA,IAAIwC,YAAYlb,MAAM,GAAG,GAAG;gBACxB,MAAMqb,eAAeH,YAAYpd,GAAG,CAACkd,CAAAA,IAAKA,EAAElZ,GAAG,EAAE4O,MAAM,CAAC4K,SAASrb,IAAI,CAAC;gBACtE,IAAIob,cAAc;oBACd,4BAA4B;oBAC5BvD,wBAAKA,CAACuD;gBACV;YACJ;YAEA,IAAIF,aAAanb,MAAM,GAAG,GAAG;gBACzB,MAAMub,gBAAgBJ,aAAard,GAAG,CAACkd,CAAAA,IAAKA,EAAElZ,GAAG,EAAE4O,MAAM,CAAC4K,SAASrb,IAAI,CAAC;gBACxE,IAAIsb,eAAe;oBACfzD,oBAAKA,CAAClW,KAAK,CAAC,YAA0B,OAAd2Z;gBAC5B;YACJ;QACJ,EAAE,OAAO3Z,OAAO;YACZD,QAAQC,KAAK,CAAC,4BAA4BA;YAC1CkW,oBAAKA,CAAClW,KAAK,CAAC;QAChB,SAAU;YACN0X,aAAa;QACjB;IACJ,GAAG;QAACZ;KAAa;IAEjB,MAAM8C,iBAAiBtU,qBAAWA,CAAC;QAC/B,MAAMoC,SAASC,SAAS9J,GAAG,CAAC,OAAO;QACnC6J,OAAO9J,GAAG,CAAC;QACXga,kBAAkB;QAClB,MAAM9X,MAAsD,MAAM2V,qBAAqBA,CAAC;YAAEH,QAAQ,CAAC;YAAGE,SAAS;gBAAEqD,UAAU;YAAK;QAAE;QAClInR,OAAO9J,GAAG,CAAC,wBAAwBc,KAAK2L,SAAS,CAACvK;QAClD8X,kBAAkB;QAElB,IAAI9X,IAAIgZ,GAAG,IAAI,CAAChZ,IAAIiZ,SAAS,IAAI,CAACjZ,IAAIkZ,QAAQ,EAAE;gBACvBlZ;YAArB,MAAMmZ,eAAenZ,EAAAA,WAAAA,IAAIgZ,GAAG,cAAPhZ,+BAAAA,SAASyX,OAAO,KAAI;YACzCrB,oBAAKA,CAAClW,KAAK,CAACiZ;YACZ3B,sBAAsB,EAAE;YACxB5P,OAAO1H,KAAK,CAAC,8BAA8BiZ;QAC/C,OAAO;gBAEWnZ,gBAAAA;YADd,6BAA6B;YAC7B,MAAM+Z,QAAQ/Z,EAAAA,YAAAA,IAAIvB,IAAI,cAARuB,iCAAAA,iBAAAA,UAAUvB,IAAI,cAAduB,qCAAAA,eAAgB+Z,KAAK,KAAI,EAAE;YACzCnS,OAAO9J,GAAG,CAAC,+BAA+Bc,KAAK2L,SAAS,CAACwP;YAEzD,+BAA+B;YAC/B,MAAMC,iBAAiBD,MAAM3d,GAAG,CAACwc,CAAAA,OAAS;oBACtChU,IAAIgU,KAAKqB,IAAI;oBACbC,MAAMtB,KAAKsB,IAAI;oBACfC,WAAWvB,KAAKuB,SAAS;gBAC7B;YAEA3C,sBAAsBwC;YAEtB,uBAAuB;YACvB,IAAIA,eAAe1b,MAAM,GAAG,KAAK,CAAC+Y,UAAU;gBACxC,MAAM+C,cAAcJ,cAAc,CAAC,EAAE,CAACE,IAAI;gBAC1CtS,OAAO9J,GAAG,CAAC,8BAA8Bsc;gBACzC9C,YAAY8C;YAChB,OAAO,IAAIJ,eAAe1b,MAAM,KAAK,GAAG;gBACpCsJ,OAAOyS,IAAI,CAAC;YAChB;QACJ;IACJ,GAAG,EAAE,GAAG,kBAAkB;IAE1BvZ,mBAASA,CAAC;QACN,IAAIgW,MAAM;YACNgD;QACJ,OAAO;YACH5C,YAAY;YACZE,UAAU;YACVE,YAAY;YACZE,sBAAsB,EAAE;YACxBE,WAAW;YACXE,aAAa;YACbI,iBAAiB;YACjBC,cAAchN,OAAO,GAAG;QAC5B;IACJ,GAAG;QAAC6L;QAAMgD;KAAe;IAEzB,MAAMQ,uBAAuB9U,qBAAWA,CAAC;YAiCV6Q;QAhC3B,MAAMkE,gBAAgBtD,SAAS7Y,KAAK,CAAC,MAAMhC,GAAG,CAACoe,CAAAA,IAAKA,EAAEC,IAAI,IAAIzL,MAAM,CAACwL,CAAAA,IAAKA;QAC1E,IAAID,cAAcjc,MAAM,KAAK,GAAG;YAC5B8X,oBAAKA,CAAClW,KAAK,CAAC;YACZ;QACJ;QAEA,MAAMwa,oBAA2C,EAAE;QACnD,KAAK,MAAMC,SAASJ,cAAe;YAC/B,IAAI9D,gBAAgBkE,QAAQ;gBACxB,MAAM/B,OAAOhC,gBAAgB+D,SAAS,WAAW;gBACjDD,kBAAkBje,IAAI,CAAC;oBAAEuN,UAAU2Q;oBAAOC,cAAchC;gBAAK;YACjE,OAAO;gBACHxC,oBAAKA,CAAClW,KAAK,CAAC,2BAAiC,OAANya,OAAM;gBAC7C;YACJ;QACJ;QAEA,IAAI,CAACtD,YAAYA,SAASoD,IAAI,OAAO,IAAI;YACrCrE,oBAAKA,CAAClW,KAAK,CAAC;YACZ;QACJ;QAEA0X,aAAa;QAEb,IAAI,CAACW,gBAAgB;YACjB,MAAMsC,cAAc,MAAMvE,8BAAWA,CAACwE,eAAe;YACrD,IAAI,CAACD,aAAa;gBACdjD,aAAa;gBACb;YACJ;QACJ;QAEA,MAAMmD,sBAAqB1E,8CAAAA,sBAAUA,CAAC8B,QAAQ,CAACC,QAAQ,CAACC,aAAa,cAA1ChC,kEAAAA,4CAA4CiC,YAAY;QACnF,MAAM9C,SAAgE;YAClEyB,UAAUyD;YACV9B,MAAMvB,SAASoD,IAAI;YACnBtD,QAAQA,OAAOsD,IAAI;YACnBhD,SAASA,QAAQgD,IAAI;QACzB;QAEA,IAAIM,oBAAoB;YACpB9C,cAAchN,OAAO,GAAG;YACxB,MAAM+P,YAAsC;gBACxC,GAAGxF,MAAM;gBACTmD,qBAAqBoC;gBACrB9D,UAAUzB,OAAOyB,QAAQ,IAAI,EAAE;gBAC/B2B,MAAMpD,OAAOoD,IAAI,IAAI;YACzB;YACAC,eAAemC;QACnB,OAAO;YACH5E,wBAAKA,CAAC;YACN4B,iBAAiBxC;QACrB;IAEJ,GAAG;QAACyB;QAAUE;QAAQE;QAAUI;QAASoB;QAAgBN;KAAe;IAExE,qBACI,qBAAC1C,qBAAMA;QAACiB,MAAMA;QAAMC,SAAS,IAAMA;QAAWkE,UAAS;QAAKC,SAAS;;0BACjE,oBAAClF,0BAAWA;0BAAC;;0BACb,oBAACD,4BAAaA;0BACV,mCAACzT,kBAAGA;oBAAC6Y,WAAU;oBAAOnX,IAAI;wBAAEkQ,IAAI;oBAAE;;sCAC9B,oBAAC+B,wBAASA;4BACNmF,SAAS;4BACTC,QAAO;4BACPzW,IAAG;4BACH5I,OAAM;4BACN4c,MAAK;4BACLsC,SAAS;4BACTI,SAAS;4BACTC,MAAM;4BACNtH,SAAQ;4BACRuH,aAAY;4BACZvf,OAAOgb;4BACPwE,UAAU,CAACpf,IAAM6a,YAAY7a,EAAEqf,MAAM,CAACzf,KAAK;4BAC3C4Y,UAAU8C;;sCAEd,oBAAC1B,wBAASA;4BACNoF,QAAO;4BACPzW,IAAG;4BACH5I,OAAM;4BACN4c,MAAK;4BACLsC,SAAS;4BACTjH,SAAQ;4BACRhY,OAAOkb;4BACPsE,UAAU,CAACpf,IAAM+a,UAAU/a,EAAEqf,MAAM,CAACzf,KAAK;4BACzC4Y,UAAU8C;;sCAEd,oBAACzB,2BAAYA;4BACTyF,QAAQ;4BACR/W,IAAG;4BACHgX,SAASrE,mBAAmBnb,GAAG,CAAC,CAACyf,SAAWA,OAAO3B,IAAI;4BACvDje,OAAOob,YAAY;4BACnBoE,UAAU,CAACK,OAAuBC;gCAC9B9b,QAAQnC,GAAG,CAAC,yBAAyBie;gCACrCzE,YAAYyE;4BAChB;4BACAC,YAAY3E,YAAY;4BACxB4E,eAAe,CAACH,OAAOI,eAAe/M;gCAClC,sEAAsE;gCACtE,IAAIA,WAAW,SAAS;oCACpBlP,QAAQnC,GAAG,CAAC,2BAA2Boe;oCACvC5E,YAAY4E;gCAChB;4BACJ;4BACAC,aAAa,CAAC3G;gCACV,MAAM,EAAE4G,UAAU,EAAE,GAAGC,aAAa,GAAG7G;gCACvC,qBACI,oBAACS,wBAASA;oCACL,GAAGoG,WAAW;oCACfrgB,OAAM;oCACNiY,SAAQ;oCACRmI,YAAY;wCACR,GAAGA,UAAU;wCACbE,4BACI;;gDACKzE,+BAAiB,oBAACvR,+BAAgBA;oDAAC0M,OAAM;oDAAUgB,MAAM;qDAAS;gDAClEoI,WAAWE,YAAY;;;oCAGpC;;4BAGZ;;sCAEJ,oBAACrG,wBAASA;4BACNoF,QAAO;4BACPzW,IAAG;4BACH5I,OAAM;4BACN4c,MAAK;4BACLsC,SAAS;4BACTI,SAAS;4BACTC,MAAM;4BACNtH,SAAQ;4BACRuH,aAAY;4BACZvf,OAAOwb;4BACPgE,UAAU,CAACpf,IAAMqb,WAAWrb,EAAEqf,MAAM,CAACzf,KAAK;4BAC1C4Y,UAAU8C;;;;;0BAItB,qBAAC7B,4BAAaA;;kCACV,oBAACvT,qBAAMA;wBAAC/F,SAAS,IAAMua;wBAAWlC,UAAU8C;kCAAW;;kCACvD,oBAACpV,qBAAMA;wBAAC/F,SAAS8d;wBAAsBrG,SAAQ;wBAAYY,UAAU8C;kCAChEA,0BAAY,oBAACrR,+BAAgBA;4BAAC0N,MAAM;6BAAS;;;;;;AAKlE;;;;;;;;ACxVoD;AACV;AACE;AACA;AACsC;AAC3B;AACC;AACvB;AAEjC,SAASyI;IACP,MAAM,CAACC,kBAAkBC,oBAAoB,GAAGjX,kBAAQA,CAAC;IAEzD,qBACE,qBAACpD,kBAAGA;QAAC0B,IAAI;YAAE4Y,IAAI;YAAG1e,GAAG;QAAE;;0BACrB,oBAACoE,kBAAGA;0BAAC;;0BACL,oBAACC,qBAAMA;gBAAC0R,SAAQ;gBAAYzX,SAAS,IAAMmgB,oBAAoB;0BAAO;;YAIrED,kCACC,oBAAC7F,mBAAmBA;gBAClBC,MAAM4F;gBACN3F,SAAS,IAAM4F,oBAAoB;;0BAIvC,oBAAC3H,WAAWA;gBACV3M,UAAS;gBACTC,UAAU,QAAmD,OAA3C/E,KAAKC,MAAM,GAAG6L,QAAQ,CAAC,IAAIwN,SAAS,CAAC,GAAG;gBAC1DzU,eAAeoU,0BAASA,CAACM,SAAS,CAACC,OAAO;;0BAE5C,oBAACR,0BAAcA;;;AAGrB;AAEe,SAASS;IACtB,qBACE,oBAAChc,wBAAQA;kBACP,kCAACkE,6BAAeA;YAAC/B,WAAW;gBAAE3D,IAAI;gBAAqCO,KAAK;YAAa;YAAG4E,sBAAQ,oBAAChJ,oBAAMA;sBACzG,kCAAC8gB;;;AAIT","sources":["webpack://_N_E/./src/components/navbar/NavBar.tsx","webpack://_N_E/../../node_modules/.pnpm/react-i18next@15.6.0_i18next@24.2.3_typescript@5.7.3__react-dom@19.1.0_react@19.1.0__react@19.1.0_typescript@5.7.3/node_modules/react-i18next/dist/es/index.js","webpack://_N_E/../../libs/fanfanlo/src/i18n/i18n-init.ts","webpack://_N_E/../../libs/fanfanlo/src/storage/store-page-context.tsx","webpack://_N_E/../../libs/app/ui/src/components/app/AppShell.tsx","webpack://_N_E/../../libs/app/ui/src/components/page/PageContent.tsx","webpack://_N_E/../../libs/app/ui/src/components/page/AndroidPageContent.tsx","webpack://_N_E/../../libs/app/ui/src/components/tabbar/Tabbar.tsx","webpack://_N_E/../../libs/im/livekit/src/livekit-meeting/MeetingRoom.tsx","webpack://_N_E/../../libs/app/model/src/remote/emc/inviteContacts.ts","webpack://_N_E/../../libs/app/model/src/remote/emc/tmsEmcGetContactTypes.ts","webpack://_N_E/./src/components/dialogs/InviteContactDialog.tsx","webpack://_N_E/./src/pages/home/index.tsx"],"sourcesContent":["import { useRouter } from \"next/router\";\r\nimport { useTranslation } from \"@fanfanlo\";\r\n\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport { BottomNavigation, BottomNavigationAction } from \"@mui/material\";\r\ninterface TabInfoType {\r\n  label: string;\r\n  value: string;\r\n  icon: React.ReactNode;\r\n}\r\n\r\nexport function NavBar() {\r\n  const router = useRouter();\r\n  const { pathname } = router;\r\n  const { t } = useTranslation('emergency-call/components/navbar/content');\r\n  const tabInfoList: TabInfoType[] = [\r\n    { label: t('NavBar.home'), value: '/', icon: <HomeIcon /> },\r\n    // { label: t('content.create'), value: '/script-creator', icon: <CreateIcon /> },\r\n    // { label: t('content.market'), value: '/market', icon: <StorefrontIcon /> },\r\n    { label: t('NavBar.settings'), value: '/settings', icon: <SettingsIcon /> },\r\n  ];\r\n  return (\r\n\r\n    <BottomNavigation showLabels value={pathname}>\r\n      {tabInfoList.map(e => (\r\n        <BottomNavigationAction\r\n          key={e.value}\r\n          label={e.label}\r\n          icon={e.icon}\r\n          data-id={`tabbar-${e.value}`}\r\n          className={pathname === e.value ? 'Mui-selected' : ''}\r\n          onClick={() => {\r\n            if (pathname === e.value) return;\r\n            router.push(e.value);\r\n          }}\r\n        />\r\n      ))}\r\n    </BottomNavigation>\r\n  );\r\n}","export * from \"C:\\\\work\\\\android-droid\\\\html\\\\website-2024-12\\\\node_modules\\\\.pnpm\\\\react-i18next@15.6.0_i18next@24.2.3_typescript@5.7.3__react-dom@19.1.0_react@19.1.0__react@19.1.0_typescript@5.7.3\\\\node_modules\\\\react-i18next\\\\dist\\\\es\\\\index.js\"","\"use client\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\nimport Backend, { type HttpBackendOptions } from \"i18next-http-backend\";\r\n\r\nimport i18next from \"i18next\";\r\nimport { Log } from \"../log/Log\";\r\nimport { isServer } from \"../nextjs/env/env\";\r\n;\r\nexport { useTranslation } from 'react-i18next';\r\nlet fileDateVersion:string = ''// = getConfig().publicRuntimeConfig?.version\r\nexport const i18nLogger = new Log(false, `i18n`);\r\nconst windowHref = (()=>{\r\n  if(typeof window === 'undefined')return ''\r\n  const u = new URL(window.location.href || window.parent?.location.href);\r\n  // 同域文本iframe里的页面会获取不到href，所以判断一下直接用父级的就行.\r\n  return u.origin == null || u.origin == 'null' ? '' : u.origin\r\n})()\r\nconst backendOptions = {\r\n  loadPath: function (lngs: string[], namespaces: string[]) {\r\n    const log = i18nLogger.sub(false, `i18n loadpath`);\r\n    log.pause = true;\r\n    const lng = lngs[0]\r\n    let p = ``\r\n    // p = `/options/_locales/${lngs[0].replace(\"-\", \"_\")}/messages.json`;\r\n    // p = `/locales/zh-CN/ns1/content.json`;\r\n    // p = `locales/${lng}/${namespaces[0]}.json?v=${fileDateVersion}`\r\n    const ps = namespaces[0].split('/')\r\n    ps.splice(ps.length - 1, 0, lng)\r\n    p = `locales/${ps.join('/')}.json?v=${fileDateVersion}`\r\n    log.log(`lngs=`, lngs);\r\n    log.log(`namespaces=`, namespaces);\r\n    log.log(\"p=\", p);\r\n    p = `${windowHref}/${p}`\r\n    log.log('windowHref p=', p)\r\n    return p;\r\n\r\n  },\r\n  parse: function (\r\n    data: string,\r\n    languages?: string | string[],\r\n    namespaces?: string | string[]\r\n  ) {\r\n    const log = i18nLogger.sub(false, `i18n backend parse`);\r\n    log.pause = true;\r\n    // log.log(`parrrse`, data, languages, namespaces);\r\n    const l = JSON.parse(data);\r\n    log.print(`before set i18ndata`);\r\n    // i18nData = l as II18n;\r\n    // log.log(`i18nData.rule.scripts.sys.rules`, i18nData.rule.scripts.sys.rules);\r\n    log.log(`parrrse`, languages, namespaces);\r\n    return l;\r\n  },\r\n};\r\nconst backend = new Backend();\r\nbackend.init(null, backendOptions);\r\nexport const i18n = i18next;\r\n// export const resources: Resource = {\r\n//   // 'zh-CN': {\r\n//   //   translation: _.merge({}, zhCN),\r\n//   // },\r\n//   // en: {\r\n//   //   translation: _.merge({}, en),\r\n//   // },\r\n// };\r\n\r\n\r\ni18n.on(\"languageChanged\", async function (lng) {\r\n  const log = i18nLogger.sub(false, `onlanguageChanged`);\r\n  log.pause = true;\r\n  log.log(`lllllng`, lng);\r\n  // lng = \"en\";\r\n  // const p = `/options/_locales/${lng.replace(\"-\", \"_\")}/messages.json`;\r\n});\r\n\r\n\r\n\r\n\r\nexport function i18nInit(_fileDateVersion:string=''){\r\n  fileDateVersion = _fileDateVersion\r\n  i18n\r\n  .use(LanguageDetector)\r\n  .use(backend)\r\n  .use(initReactI18next)\r\n  .init<HttpBackendOptions>({\r\n    load: \"currentOnly\",\r\n    // load: \"all\",\r\n    // supportedLngs: ['zh-CN', 'zh-TW', 'en', 'en-GB', 'ja'],\r\n    // resources,\r\n    fallbackLng: isServer ? \"en\" : \"zh-CN\",\r\n    // fallbackLng: \"zh-CN\",\r\n    // lng: \"zh-CN\",\r\n    partialBundledLanguages:true,\r\n    ns:[],\r\n    \r\n    debug: false,\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    },\r\n    detection: {\r\n      caches: [\"localStorage\"],\r\n    },\r\n  });\r\n}\r\ni18n.on(\"missingKey\", function (lngs, namespace, key, res) {\r\n  console.error(\r\n    \"i18n mssing key, lngs=%s, namespace=%s, key=%s, res=%s\",\r\n    lngs,\r\n    namespace,\r\n    key,\r\n    res\r\n  );\r\n});\r\n\r\ni18n.on(\"loaded\", function (loaded) {\r\n  const log = i18nLogger.sub(false, `onloaded`);\r\n  log.pause = true;\r\n  log.log(`onloaded arguments`, loaded);\r\n});\r\n\r\ni18n.on(\"failedLoading\", function (lng, ns, msg) {\r\n  const log = i18nLogger.sub(false, `onfailedLoading`);\r\n  log.pause = true;\r\n  log.log(`failedLoading arguments`, lng, ns, msg);\r\n});\r\n\r\ni18n.on(\"added\", function () {\r\n  console.log('added', arguments)\r\n});   \r\n\r\nexport default i18n;","import { createContext } from \"react\";\r\nimport { storeUtils } from \"./store-utils\";\r\n// import { storeUtils } from \"./store\";\r\nconst s = storeUtils.namespace('store-page-context')\r\n\r\nexport interface IPageScrollPosition{\r\n    x:number\r\n    y:number\r\n}\r\n\r\nfunction create(){\r\n    return createContext(s)\r\n}\r\nexport const StorePageContext = createContext<any>(s)\r\n\r\nexport const StorePageDynamicContext = createContext<Record<string, any>>({})","'use client'\r\nimport { i18n, i18nInit, IPageScrollPosition, StorePageContext, StorePageDynamicContext, toProxy, watchUpdates, storeUtils } from \"@fanfanlo\";\r\nimport { useRouter } from \"next/router\";\r\nimport { PropsWithChildren, useEffect } from \"react\";\r\nimport { I18nextProvider } from \"react-i18next\";\r\n\r\n\r\ni18nInit()\r\n\r\nexport function AppShell({ children }: PropsWithChildren) {\r\n  const router = useRouter();\r\n  const scrollKey = 'scrollPositionInfo'\r\n  const href = window.location.href.split(\"#\")[0]\r\n  const dynamicKey = `dynamic-${href}`\r\n  const s = storeUtils.namespace(dynamicKey);\r\n  let o: Record<string, unknown>|undefined = s.read(dynamicKey)\r\n  if (!o) {\r\n    o = {}\r\n    s.write(dynamicKey, o)\r\n  }\r\n  o = toProxy(o)\r\n  useEffect(() => {\r\n\r\n    router.beforePopState((state) => {\r\n      s.clearAll()\r\n      return true\r\n    })\r\n  })\r\n  useEffect(() => {\r\n    s.write(dynamicKey, o)\r\n    return watchUpdates(o, () => {\r\n      s.write(dynamicKey, o)\r\n    })\r\n  }, [])\r\n  useEffect(() => {\r\n    const info = (s.read(scrollKey) || { x: 0, y: 0 }) as IPageScrollPosition\r\n    // console.log('app shell scroll info info = ', info)\r\n    if (info.x == 0 && info.y == 0) {\r\n      listenScroll()\r\n    } else {\r\n      window.requestAnimationFrame(() => {\r\n        window.scrollTo(info.x, info.y)\r\n        listenScroll()\r\n      })\r\n    }\r\n    function onScroll(e: Event) {\r\n      // console.log('app shell on scroll', { x: window.scrollX, y: window.scrollY })\r\n      s.write(scrollKey, { x: window.scrollX, y: window.scrollY })\r\n    }\r\n    function listenScroll() {\r\n      window.addEventListener('scroll', onScroll)\r\n    }\r\n\r\n    function unsub() {\r\n      window.removeEventListener('scroll', onScroll)\r\n    }\r\n    return unsub\r\n  });\r\n  return (\r\n    <StorePageContext value={s}>\r\n      <StorePageDynamicContext value={o}>\r\n\r\n        <I18nextProvider i18n={i18n}>\r\n          {children}\r\n        </I18nextProvider>\r\n      </StorePageDynamicContext>\r\n    </StorePageContext>\r\n  )\r\n}","import { Box, Button, Container } from '@mui/material';\r\nimport { createContext, PropsWithChildren, useContext, useEffect } from 'react';\r\nimport { ITitleI18nConf, ITitleI18nNsConf, ITitleI18nTitleConf } from '.';\r\nimport { isBuild, isDev, isServer, loadI18nValue, publicRuntimeConfig } from '@fanfanlo';\r\nimport { read } from 'fs';\r\nimport { useTranslation } from '@fanfanlo';\r\n\r\n\r\nfunction Reload(){\r\n  if(!isDev)return <>  </>\r\n  const {t} = useTranslation(\"app-ui/components/page/content\")\r\n  return(\r\n    <Box>\r\n      <Button onClick={() => {window.location.reload()}}>{t(\"PageContent.refresh\")}</Button>\r\n      {new Date().toLocaleString()}\r\n    </Box>\r\n  )\r\n}\r\n\r\nconst ScrollP = createContext({ x: 0, y: 0 });\r\nlet index = 0;\r\nexport default function PageContent({ children, titleConf, reload }: {titleConf?:ITitleI18nConf, reload?: boolean} & PropsWithChildren) {\r\n  index++;\r\n  const scroll = useContext(ScrollP);\r\n  const clazz = `${Date.now() + Math.random() * Date.now()}`;\r\n  useEffect(()=>{\r\n    async function loadTitle(){\r\n      if(!titleConf)return\r\n      let title = titleConf.title\r\n      if(titleConf.ns){\r\n        title = await loadI18nValue(titleConf.ns, titleConf.key || \"content.title\")\r\n      }\r\n      if(!title)return\r\n      document.title = title\r\n    }\r\n    loadTitle()\r\n  }, [])\r\n  useEffect(() => {\r\n    const container = document.getElementsByClassName(clazz)[0];\r\n    if (!container) return;\r\n    container.scrollTop = scroll.y;\r\n    const onScroll = () => {\r\n      var scrollTop = container.scrollTop;\r\n      scroll.y = scrollTop;\r\n    };\r\n    container.removeEventListener('scroll', onScroll);\r\n    container.addEventListener('scroll', onScroll, { passive: true });\r\n    return () => container.removeEventListener('scroll', onScroll);\r\n  }, [clazz, scroll]);\r\n  return (\r\n\r\n    <Container className={clazz} sx={{ flexGrow: 1, overflow: 'auto', padding: \"0px\" }}>\r\n      <Box>\r\n        {(reload || (reload == undefined)) && <Reload />}\r\n        {children}\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import { PropsWithChildren } from \"react\";\r\nimport PageContent from \"./PageContent\";\r\nimport { ITitleI18nConf } from \".\";\r\nexport default function AndroidPageContent({ children, titleConf, reload }: {titleConf?:ITitleI18nConf, reload?: boolean} & PropsWithChildren)  {\r\n    return (\r\n        <PageContent titleConf={titleConf} reload={reload}>\r\n            {children}\r\n        </PageContent>\r\n    )\r\n}\r\n","'use client';\r\nimport { BottomNavigation, BottomNavigationAction, Box, CssBaseline, Paper, Stack } from '@mui/material';\r\n\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport StorefrontIcon from '@mui/icons-material/Storefront';\r\nimport { useRouter } from 'next/router';\r\nimport React, { PropsWithChildren } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ITitleI18nConf } from '../page';\r\nimport AndroidPageContent from '../page/AndroidPageContent';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\n// interface TabInfoType {\r\n//   label: string;\r\n//   value: string;\r\n//   icon: React.ReactNode;\r\n// }\r\n\r\nfunction BottomBar({navBar}:{navBar?:React.ReactNode}) {\r\n  return <Paper\r\n    id=\"bottom-navigation\"\r\n    sx={{ position: 'fixed', bottom: 0, left: 0, right: 0 }}\r\n    elevation={3}>\r\n    {/* <NavBar /> */}\r\n    {navBar}\r\n  </Paper>;\r\n}\r\n// function NavBar() {\r\n//   const router = useRouter();\r\n//   const { pathname } = router;\r\n//   const { t } = useTranslation('app-ui/components/tabbar/content');\r\n//   const tabInfoList: TabInfoType[] = [\r\n//     { label: t('content.home'), value: '/', icon: <HomeIcon /> },\r\n//     // { label: t('content.create'), value: '/script-creator', icon: <CreateIcon /> },\r\n//     // { label: t('content.market'), value: '/market', icon: <StorefrontIcon /> },\r\n//     { label: t('content.settings'), value: '/settings', icon: <SettingsIcon /> },\r\n//   ];\r\n//   return (\r\n\r\n//     <BottomNavigation showLabels value={pathname}>\r\n//       {tabInfoList.map(e => (\r\n//         <BottomNavigationAction\r\n//           key={e.value}\r\n//           label={e.label}\r\n//           icon={e.icon}\r\n//           data-id={`tabbar-${e.value}`}\r\n//           className={pathname === e.value ? 'Mui-selected' : ''}\r\n//           onClick={() => {\r\n//             if (pathname === e.value) return;\r\n//             router.push(e.value);\r\n//           }}\r\n//         />\r\n//       ))}\r\n//     </BottomNavigation>\r\n//   );\r\n// }\r\n\r\n\r\n// testWatchUpdates()\r\nexport function TabbarContainer({ children, titleConf, navBar }: {titleConf?:ITitleI18nConf, navBar:React.ReactNode} & PropsWithChildren)  {\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', height: '100vh' }}>\r\n      <CssBaseline />\r\n      <Stack direction={\"column\"} spacing={3}\r\n      \r\n      >\r\n        <AndroidPageContent titleConf={titleConf}>\r\n          {children}\r\n        </AndroidPageContent>\r\n        <BottomBar navBar={navBar} />\r\n      </Stack>\r\n    </Box>\r\n  );\r\n}\r\n\r\n","import React, {\n    useCallback,\n    useEffect,\n    useRef,\n    useState,\n    forwardRef,\n    ForwardedRef\n} from 'react';\nimport {\n    Room,\n    RoomEvent,\n    Participant,\n    RemoteParticipant,\n    RemoteTrack,\n    Track,\n    LocalTrack,\n    LocalVideoTrack,\n    LocalAudioTrack,\n    createLocalAudioTrack,\n    createLocalVideoTrack,\n    VideoPreset,\n    VideoPresets,\n    TrackPublication,\n    LocalParticipant\n} from 'livekit-client';\nimport {\n    Box,\n    Button,\n    Typography,\n    Alert,\n    IconButton,\n    CircularProgress,\n    Stack,\n    SxProps,\n    Theme\n} from '@mui/material';\nimport Grid from '@mui/material/Grid';\nimport {\n    Mic as MicIcon,\n    MicOff as MicOffIcon,\n    ScreenShare as ScreenShareIcon,\n    StopScreenShare as StopScreenShareIcon,\n    Videocam as VideoIcon,\n    VideocamOff as VideoOffIcon,\n    CallEnd as CallEndIcon,\n    Settings as SettingsIcon,\n    VolumeUp as VolumeUpIcon,\n    VolumeOff as VolumeOffIcon,\n    Fullscreen as FullscreenIcon,\n    FullscreenExit as FullscreenExitIcon,\n    Refresh as RefreshIcon,\n    Visibility as VisibilityIcon,\n    VisibilityOff as VisibilityOffIcon\n} from '@mui/icons-material';\nimport { Log } from '@fanfanlo';\n// import { mainModel } from '@src/libs/mc/main/MainModel';\nimport { MeetingRoomProps, VideoPresetConfig, ExtendedParticipantState, ParticipantState } from './meeting-room.intf';\n\n// 日志记录器\nconst logger = new Log(false, 'livekit-meeting.MeetingRoom');\nconst uiLogger = logger.sub(false, 'MeetingRoom_ui');\n\n// 视频预设\nconst VIDEO_PRESET: VideoPresetConfig = {\n    width: 1280,\n    height: 720,\n    // @ts-ignore - frameRate is used by LiveKit internally\n    frameRate: 24,\n    maxBitrate: 3000 * 1000, // 3Mbps\n};\n\n// 类型定义已移至 meetint-room.intf.ts\n\n\n// function getTokenEndpoint(): string {\n//     if (!mainModel.appConfig?.livekit?.jwt) {\n//         throw new Error('LiveKit JWT endpoint is not configured');\n//     }\n//     return `${mainModel.appConfig.livekit.jwt}/token`;\n// }\n// 主组件实现\nfunction MeetingRoomComponent(\n    {\n        livekitConfig,\n        roomName,\n        userName,\n        onDisconnect,\n        onError,\n        className = '',\n        style,\n        sx\n    }: MeetingRoomProps,\n    ref: ForwardedRef<HTMLDivElement>\n) {\n    // 全局音视频控制状态\n    const [globalMediaState, setGlobalMediaState] = useState<{\n        isAudioEnabled: boolean;\n        isVideoEnabled: boolean;\n    }>({\n        isAudioEnabled: true,\n        isVideoEnabled: true,\n    });\n\n    // Refs\n    const roomRef = useRef<Room | null>(null);\n    const localTracksRef = useRef<LocalTrack[]>([]);\n    const videoElements = useRef<Record<string, HTMLVideoElement>>({});\n    const audioElements = useRef<Record<string, HTMLAudioElement>>({});\n    const [participantStates, setParticipantStates] = useState<Record<string, ExtendedParticipantState>>({});\n    const isUnmountedRef = useRef(false);\n\n    // State\n    const [isConnecting, setIsConnecting] = useState(false);\n    const [hasConnected, setHasConnected] = useState(false);\n    const [error, setError] = useState<string | null>(null);\n    const [isMuted, setIsMuted] = useState(false);\n    const [isVideoEnabled, setIsVideoEnabled] = useState(true);\n    const [participants, setParticipants] = useState<RemoteParticipant[]>([]);\n\n    // 获取 token\n    const fetchToken = useCallback(async (roomName: string, identity: string) => {\n        try {\n            const response = await fetch(`${livekitConfig.jwt}/token`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    room_name: roomName,\n                    identity,\n                }),\n            });\n\n            if (!response.ok) {\n                throw new Error('获取 token 失败');\n            }\n\n            const data = await response.json();\n            return data.token;\n        } catch (error) {\n            uiLogger.error('获取 token 失败:', error);\n            throw error;\n        }\n    }, []);\n\n    // 连接到房间\n    const connectToRoom = useCallback(async () => {\n        if (isConnecting || hasConnected) return;\n\n        setIsConnecting(true);\n        setError(null);\n\n        try {\n            // 1. 获取 token\n            const token = await fetchToken(roomName, userName);\n            uiLogger.log('token:', token);\n\n            // 2. 创建本地轨道\n            const { audioTrack, videoTrack } = await createLocalTracks();\n            localTracksRef.current = [audioTrack, videoTrack];\n            uiLogger.log('audioTrack:', audioTrack);\n            uiLogger.log('videoTrack:', videoTrack);\n            // 3. 创建房间连接\n            const room = new Room({\n                adaptiveStream: true,\n                dynacast: true,\n                videoCaptureDefaults: {\n                    resolution: VIDEO_PRESET,\n                },\n                // @ts-ignore - publishDefaults is a valid option\n                publishDefaults: {\n                    dtx: true,\n                    red: true,\n                    forceStereo: false,\n                    simulcast: true,\n                } as any, // Type assertion to bypass type checking for now\n            });\n            uiLogger.log('room:', room);\n            // 4. 设置事件监听\n            setupRoomListeners(room);\n\n            // 5. 连接到房间\n            await room.connect(\n                livekitConfig.wsUrl,\n                token,\n                {\n                    autoSubscribe: true,\n                }\n            );\n            uiLogger.log('room connected');\n            // 6. 发布本地轨道\n            try {\n                await Promise.all([\n                    room.localParticipant.publishTrack(audioTrack),\n                    room.localParticipant.publishTrack(videoTrack)\n                ]);\n            } catch (publishError) {\n                uiLogger.error('发布轨道失败:', publishError);\n                // 即使发布失败也继续，因为可能已经有其他参与者发布了相同的轨道\n            }\n\n            // 7. 更新引用和状态\n            roomRef.current = room;\n            setHasConnected(true);\n\n            // 8. 添加现有远程参与者到状态\n            const remoteParticipants = Array.from(room.remoteParticipants.values());\n            setParticipants(remoteParticipants);\n\n            // 9. 更新本地参与者状态\n            updateParticipantState(room.localParticipant.identity, {\n                isAudioEnabled: true,\n                isVideoEnabled: true,\n                audioTrack,\n                videoTrack,\n            });\n\n            // 10. 为现有远程参与者设置轨道\n            remoteParticipants.forEach(participant => {\n                // 初始化远程参与者状态\n                initParticipantState(participant);\n                uiLogger.log('已初始化远程参与者状态:', participant.identity);\n                \n                // 使用 getTrackPublications 获取所有轨道发布\n                participant.getTrackPublications().forEach(publication => {\n                    if (publication.track && publication.track instanceof RemoteTrack) {\n                        handleTrackSubscribed(publication.track, publication, participant);\n                    }\n                });\n            });\n            \n            // 初始化本地参与者状态\n            if (room.localParticipant) {\n                initParticipantState(room.localParticipant);\n                uiLogger.log('已初始化本地参与者状态:', room.localParticipant.identity);\n            }\n\n            uiLogger.log('成功加入会议');\n\n        } catch (error) {\n            uiLogger.error('连接房间失败啦:', error);\n            setError('加入会议失败，请检查网络和权限设置');\n            // 发生错误时清理资源\n            cleanupTracks(localTracksRef.current);\n            localTracksRef.current = [];\n\n            if (roomRef.current) {\n                try {\n                    await roomRef.current.disconnect();\n                } catch (e) {\n                    uiLogger.error('断开连接时出错:', e);\n                }\n                roomRef.current = null;\n            }\n        } finally {\n            setIsConnecting(false);\n        }\n    }, [roomName, userName, isConnecting, hasConnected, fetchToken]);\n\n    // 创建本地音视频轨道\n    const createLocalTracks = useCallback(async () => {\n        try {\n            const [audioTrack, videoTrack] = await Promise.all([\n                createLocalAudioTrack({\n                    echoCancellation: true,\n                    noiseSuppression: true,\n                    autoGainControl: true,\n                }),\n                createLocalVideoTrack({\n                    resolution: {\n                        width: 1280,\n                        height: 720,\n                        frameRate: 24,\n                    },\n                }),\n            ]);\n            return { audioTrack, videoTrack };\n        } catch (error) {\n            uiLogger.error('创建本地轨道失败:', error);\n            throw error;\n        }\n    }, []);\n\n    // 清理轨道\n    const cleanupTracks = useCallback((tracks: LocalTrack[]) => {\n        tracks.forEach(track => {\n            track.stop();\n            track.detach();\n        });\n    }, []);\n\n    // 跟踪已处理的轨道元素\n    const trackElementsRef = useRef<Record<string, boolean>>({});\n    const videoElementsRef = useRef<Record<string, HTMLVideoElement>>({});\n    const audioElementsRef = useRef<Record<string, HTMLAudioElement>>({});\n\n    // 更新参与者状态\n    const updateParticipantState = useCallback((identity: string, state: Partial<ParticipantState>) => {\n        setParticipantStates(prev => ({\n            ...prev,\n            [identity]: {\n                ...(prev[identity] || {\n                    isAudioEnabled: true,\n                    isVideoEnabled: true,\n                    isAudioEnabledGlobal: true,\n                    isVideoEnabledGlobal: true,\n                }),\n                ...state,\n            },\n        }));\n    }, []);\n    // 处理轨道订阅\n    const handleTrackSubscribed = useCallback((\n        track: RemoteTrack,\n        publication: TrackPublication,\n        participant: Participant\n    ) => {\n        if (!track) return () => { };\n\n        const { identity } = participant;\n        const isVideoTrack = track.kind === Track.Kind.Video;\n\n        uiLogger.log(`处理 ${track.kind} 轨道订阅:`, identity, track);\n\n        // 更新轨道状态的函数\n        const updateTrackState = () => {\n            const isMuted = track.isMuted;\n            const stateUpdate: Partial<ParticipantState> = {};\n\n            if (track.kind === Track.Kind.Audio) {\n                stateUpdate.isAudioEnabled = !isMuted;\n            } else if (track.kind === Track.Kind.Video) {\n                stateUpdate.isVideoEnabled = !isMuted;\n            }\n\n            updateParticipantState(identity, stateUpdate);\n\n            // 强制触发重新渲染以确保 ParticipantVideo 组件更新\n            if (isVideoTrack) {\n                setParticipants(prev => [...prev]);\n            }\n        };\n\n        // 监听轨道静音/取消静音事件\n        track.on('muted', updateTrackState);\n        track.on('unmuted', updateTrackState);\n\n        // 初始状态更新\n        updateTrackState();\n\n        // 强制更新参与者列表以触发重新渲染\n        // 这确保了即使没有状态变化，组件也会检查新的轨道\n        setParticipants(prev => {\n            const participantExists = prev.some(p => p.identity === identity);\n            if (!participantExists) {\n                return [...prev, participant as RemoteParticipant];\n            }\n            return [...prev];\n        });\n\n\n        // 清理函数\n        return () => {\n            track.off('muted', updateTrackState);\n            track.off('unmuted', updateTrackState);\n        };\n    }, [updateParticipantState]);\n\n    // 设置房间事件监听\n    const setupRoomListeners = useCallback((room: Room) => {\n        // 保存所有事件处理函数引用，以便后续清理\n        type EventHandler = (...args: any[]) => void;\n        const eventHandlers: Record<string, EventHandler> = {\n            // 处理远程参与者连接\n            participantConnected: (participant: RemoteParticipant) => {\n                if (!(participant instanceof RemoteParticipant)) return;\n\n                uiLogger.log('远程参与者已连接:', participant.identity);\n\n                // 添加新参与者到状态（使用函数式更新确保不重复添加）\n                setParticipants(prev => {\n                    // 如果已经存在该参与者，则返回原数组\n                    if (prev.some(p => p.identity === participant.identity)) {\n                        return prev;\n                    }\n                    return [...prev, participant];\n                });\n\n                // 监听参与者的轨道发布\n                const handleTrackPublished = (publication: TrackPublication) => {\n                    uiLogger.log('远程参与者发布轨道:', publication.kind, participant.identity);\n                    if (publication.track) {\n                        handleTrackSubscribed(publication.track as RemoteTrack, publication, participant);\n                    } else {\n                        publication.once('subscribed', (track: RemoteTrack) => {\n                            handleTrackSubscribed(track, publication, participant);\n                        });\n                    }\n                };\n\n                // 添加轨道发布监听\n                participant.on('trackPublished', handleTrackPublished);\n\n                // 处理已经发布的轨道\n                participant.trackPublications.forEach(publication => {\n                    if (publication.track) {\n                        handleTrackSubscribed(publication.track as RemoteTrack, publication, participant);\n                    }\n                });\n\n                // 返回清理函数\n                return () => {\n                    participant.off('trackPublished', handleTrackPublished);\n                };\n            },\n\n            // 处理参与者断开连接\n            participantDisconnected: (participant: RemoteParticipant) => {\n                uiLogger.log('远程参与者已断开连接:', participant.identity);\n                setParticipants(prev => {\n                    const newParticipants = prev.filter(p => p.identity !== participant.identity);\n                    uiLogger.log('更新后的参与者列表:', newParticipants.map(p => p.identity));\n                    return newParticipants;\n                });\n            },\n\n            // 处理轨道订阅\n            trackSubscribed: (track: RemoteTrack, publication: TrackPublication, participant: Participant) => {\n                if (!track) return;\n                uiLogger.log('轨道订阅成功:', track.kind, participant.identity);\n                // 处理远程轨道订阅\n                handleTrackSubscribed(track, publication, participant as RemoteParticipant);\n            },\n\n            disconnected: (reason?: any) => {\n                const reasonStr = reason?.toString?.() || '未知原因';\n                uiLogger.log('已从房间断开连接，原因:', reasonStr);\n                // 更新状态但不调用 handleDisconnect，因为可能是我们主动断开的\n                setHasConnected(false);\n                setParticipants([]);\n                setError(null);\n            },\n\n            reconnecting: () => {\n                uiLogger.log('正在重新连接到房间...');\n                setError('正在重新连接...');\n            },\n\n            reconnected: () => {\n                uiLogger.log('已重新连接到房间');\n                setError(null);\n            }\n        };\n\n        // 添加事件监听\n        room\n            .on(RoomEvent.Disconnected, eventHandlers.disconnected)\n            .on(RoomEvent.Reconnecting, eventHandlers.reconnecting)\n            .on(RoomEvent.Reconnected, eventHandlers.reconnected)\n            .on(RoomEvent.ParticipantConnected, eventHandlers.participantConnected)\n            .on(RoomEvent.ParticipantDisconnected, eventHandlers.participantDisconnected)\n            .on(RoomEvent.TrackSubscribed, eventHandlers.trackSubscribed);\n\n        // 返回清理函数\n        return () => {\n            if (!room) return;\n            room\n                .off(RoomEvent.Disconnected, eventHandlers.disconnected)\n                .off(RoomEvent.Reconnecting, eventHandlers.reconnecting)\n                .off(RoomEvent.Reconnected, eventHandlers.reconnected)\n                .off(RoomEvent.ParticipantConnected, eventHandlers.participantConnected)\n                .off(RoomEvent.ParticipantDisconnected, eventHandlers.participantDisconnected)\n                .off(RoomEvent.TrackSubscribed, eventHandlers.trackSubscribed);\n\n            // 确保返回 void\n            return undefined;\n        };\n    }, [handleTrackSubscribed]);\n\n    // 离开会议\n    const leaveMeeting = useCallback(async () => {\n        uiLogger.log('正在离开会议...');\n        try {\n            // 停止所有本地轨道\n            cleanupTracks(localTracksRef.current);\n\n            // 断开房间连接\n            if (roomRef.current) {\n                await roomRef.current.disconnect();\n                roomRef.current = null;\n            }\n\n            // 更新状态\n            setHasConnected(false);\n            setParticipants([]);\n            setError(null);\n\n            // 清除所有媒体元素\n            Object.values(videoElements.current).forEach(el => el && el.remove());\n            Object.values(audioElements.current).forEach(el => el && el.remove());\n            videoElements.current = {};\n            audioElements.current = {};\n\n            // 调用断开连接回调\n            if (onDisconnect) {\n                onDisconnect();\n            }\n\n            uiLogger.log('已成功离开会议');\n        } catch (error) {\n            uiLogger.error('离开会议时出错:', error);\n            setError('离开会议时出错，请重试');\n        }\n    }, [onDisconnect]);\n\n    // 清理函数\n    const cleanup = useCallback(async (isUnmounting = false) => {\n        // 如果是组件卸载，设置卸载标志\n        if (isUnmounting) {\n            isUnmountedRef.current = true;\n        }\n\n        uiLogger.log('执行清理...');\n        if (!roomRef.current) return;\n\n        const localParticipant = roomRef.current.localParticipant;\n        const audioTrack = localTracksRef.current.find(\n            t => t.kind === Track.Kind.Audio\n        ) as LocalAudioTrack | undefined;\n        const videoTrack = localTracksRef.current.find(\n            t => t.kind === Track.Kind.Video\n        ) as LocalVideoTrack | undefined;\n\n        try {\n            if (audioTrack) {\n                await audioTrack.stop();\n            }\n            if (videoTrack) {\n                await videoTrack.stop();\n            }\n        } catch (error) {\n            uiLogger.error('停止轨道失败:', error);\n        }\n\n        // 清理轨道\n        cleanupTracks(localTracksRef.current);\n        localTracksRef.current = [];\n\n        // 清理房间\n        if (roomRef.current) {\n            roomRef.current.disconnect();\n            roomRef.current = null;\n        }\n\n        // 清理状态\n        setHasConnected(false);\n        setParticipants([]);\n        setParticipantStates({});\n    }, []);\n\n    // 更新全局媒体状态\n    const updateGlobalMediaState = useCallback((audioEnabled: boolean, videoEnabled: boolean) => {\n        setGlobalMediaState(prev => ({\n            ...prev,\n            isAudioEnabled: audioEnabled,\n            isVideoEnabled: videoEnabled,\n        }));\n    }, []);\n\n    // 切换静音状态（全局控制）\n    const toggleMute = useCallback(async () => {\n        if (!roomRef.current) return;\n\n        const localParticipant = roomRef.current.localParticipant;\n        const audioTrack = localTracksRef.current.find(\n            t => t.kind === Track.Kind.Audio\n        ) as LocalAudioTrack | undefined;\n\n        if (!audioTrack) return;\n\n        try {\n            // 全局按钮基于全局状态进行切换\n            const newGlobalAudioState = !globalMediaState.isAudioEnabled;\n\n            // 同步更新本地麦克风的物理状态\n            if (newGlobalAudioState) {\n                await audioTrack.unmute();\n            } else {\n                await audioTrack.mute();\n            }\n\n            // 更新本地UI状态\n            setIsMuted(!newGlobalAudioState);\n            updateParticipantState(localParticipant.identity, { isAudioEnabled: newGlobalAudioState });\n\n            // 更新全局音频状态，这将影响所有参与者的有效状态\n            updateGlobalMediaState(newGlobalAudioState, globalMediaState.isVideoEnabled);\n        } catch (error) {\n            uiLogger.error('切换静音状态失败:', error);\n            setError('切换麦克风状态失败');\n        }\n    }, [globalMediaState, updateParticipantState, updateGlobalMediaState]);\n\n    // 切换视频状态（全局控制）\n    const toggleVideo = useCallback(async () => {\n        if (!roomRef.current) return;\n\n        const localParticipant = roomRef.current.localParticipant;\n        const videoTrack = localTracksRef.current.find(\n            t => t.kind === Track.Kind.Video\n        ) as LocalVideoTrack | undefined;\n\n        if (!videoTrack) return;\n\n        try {\n            // 全局按钮基于全局状态进行切换\n            const newGlobalVideoState = !globalMediaState.isVideoEnabled;\n\n            // 同步更新本地摄像头的物理状态\n            if (newGlobalVideoState) {\n                await videoTrack.unmute();\n            } else {\n                await videoTrack.mute();\n            }\n\n            // 更新本地UI状态\n            setIsVideoEnabled(newGlobalVideoState);\n            updateParticipantState(localParticipant.identity, { isVideoEnabled: newGlobalVideoState });\n\n            // 更新全局视频状态，这将影响所有参与者的有效状态\n            updateGlobalMediaState(globalMediaState.isAudioEnabled, newGlobalVideoState);\n        } catch (error) {\n            uiLogger.error('切换视频状态失败:', error);\n            setError('切换摄像头状态失败');\n        }\n    }, [globalMediaState, updateParticipantState, updateGlobalMediaState]);\n\n    // 切换本地静音状态（仅本地tile）\n    const handleLocalMuteToggle = useCallback(async () => {\n        if (!roomRef.current) return;\n\n        const localParticipant = roomRef.current.localParticipant;\n        const audioTrack = localTracksRef.current.find(\n            t => t.kind === Track.Kind.Audio\n        ) as LocalAudioTrack | undefined;\n\n        if (!audioTrack) return;\n\n        try {\n            const newMutedState = !isMuted;\n            if (newMutedState) {\n                await audioTrack.mute();\n            } else {\n                await audioTrack.unmute();\n            }\n\n            setIsMuted(newMutedState);\n            updateParticipantState(localParticipant.identity, { isAudioEnabled: !newMutedState });\n        } catch (error) {\n            uiLogger.error('切换本地静音状态失败:', error);\n            setError('切换麦克风状态失败');\n        }\n    }, [isMuted, updateParticipantState]);\n\n    // 切换本地视频状态（仅本地tile）\n    const handleLocalVideoToggle = useCallback(async () => {\n        if (!roomRef.current) return;\n\n        const localParticipant = roomRef.current.localParticipant;\n        const videoTrack = localTracksRef.current.find(\n            t => t.kind === Track.Kind.Video\n        ) as LocalVideoTrack | undefined;\n\n        if (!videoTrack) return;\n\n        try {\n            const newVideoState = !isVideoEnabled;\n            if (newVideoState) {\n                await videoTrack.unmute();\n            } else {\n                await videoTrack.mute();\n            }\n\n            setIsVideoEnabled(newVideoState);\n            updateParticipantState(localParticipant.identity, { isVideoEnabled: newVideoState });\n        } catch (error) {\n            uiLogger.error('切换本地视频状态失败:', error);\n            setError('切换摄像头状态失败');\n        }\n    }, [isVideoEnabled, updateParticipantState]);\n\n    // 组件卸载时清理资源\n    useEffect(() => {\n        return () => {\n            // 清理资源\n            cleanup(true);\n        };\n    }, []);\n\n    // 获取参与者状态\n    const getParticipantState = useCallback((identity: string): ParticipantState => {\n        return participantStates[identity] || {\n            isAudioEnabled: true,\n            isVideoEnabled: true,\n            isAudioEnabledGlobal: true,\n            isVideoEnabledGlobal: true,\n        };\n    }, [participantStates]);\n\n    // 初始化参与者状态\n    const initParticipantState = useCallback((participant: Participant) => {\n        const state = getParticipantState(participant.identity);\n\n        // 更新音频状态\n        const audioTrack = participant.getTrackPublications().find(\n            pub => pub.kind === Track.Kind.Audio\n        )?.track as LocalAudioTrack | undefined;\n\n        // 更新视频状态\n        const videoTrack = participant.getTrackPublications().find(\n            pub => pub.kind === Track.Kind.Video\n        )?.track as LocalVideoTrack | undefined;\n\n        updateParticipantState(participant.identity, {\n            ...state,\n            isAudioEnabled: audioTrack ? !audioTrack.isMuted : false,\n            isVideoEnabled: videoTrack ? !videoTrack.isMuted : false\n        });\n    }, [getParticipantState, updateParticipantState]);\n\n    // 切换参与者的音频状态\n    const handleToggleAudio = useCallback((participant: Participant) => {\n        const currentState = participantStates[participant.identity] || {\n            isAudioEnabled: true,\n            isVideoEnabled: true,\n            isAudioEnabledGlobal: true,\n            isVideoEnabledGlobal: true,\n        };\n\n        updateParticipantState(participant.identity, {\n            ...currentState,\n            isAudioEnabled: !currentState.isAudioEnabled\n        });\n    }, [participantStates, updateParticipantState]);\n\n    // 切换参与者的视频状态\n    const handleToggleVideo = useCallback((participant: Participant) => {\n        const currentState = participantStates[participant.identity] || {\n            isAudioEnabled: true,\n            isVideoEnabled: true,\n            isAudioEnabledGlobal: true,\n            isVideoEnabledGlobal: true,\n        };\n\n        updateParticipantState(participant.identity, {\n            ...currentState,\n            isVideoEnabled: !currentState.isVideoEnabled\n        });\n    }, [participantStates, updateParticipantState]);\n\n    // 获取参与者的实际媒体状态（考虑全局覆盖）\n    const getEffectiveMediaState = useCallback((participantId: string) => {\n        const state = participantStates[participantId];\n        if (!state) return { isAudioEnabled: true, isVideoEnabled: true };\n\n        return {\n            isAudioEnabled: globalMediaState.isAudioEnabled ? state.isAudioEnabled : false,\n            isVideoEnabled: globalMediaState.isVideoEnabled ? state.isVideoEnabled : false,\n        };\n    }, [globalMediaState, participantStates]);\n\n    // 参与者视频组件\n    const ParticipantVideo = React.memo(({\n        participant,\n        isLocal,\n        isVideoEnabled\n    }: {\n        participant: Participant;\n        isLocal: boolean;\n        isVideoEnabled: boolean;\n    }) => {\n        const videoRef = useRef<HTMLVideoElement>(null);\n        const [videoTrack, setVideoTrack] = useState<RemoteTrack | LocalVideoTrack | Track | null>(null);\n\n        // 处理视频轨道变化\n        useEffect(() => {\n            if (!participant) return;\n\n            // 查找现有的视频轨道发布\n            const videoPublication = Array.from(participant.trackPublications.values())\n                .find(pub => pub.kind === Track.Kind.Video);\n\n            // 如果轨道已存在，则直接设置\n            if (videoPublication && videoPublication.track) {\n                setVideoTrack(videoPublication.track);\n            }\n\n            // 当订阅轨道时处理\n            const handleTrackSubscribed = (track: Track) => {\n                if (track.kind === Track.Kind.Video) {\n                    setVideoTrack(track as RemoteTrack | LocalVideoTrack);\n                }\n            };\n\n            // 当取消订阅轨道时处理\n            const handleTrackUnsubscribed = (track: Track) => {\n                if (track.kind === Track.Kind.Video) {\n                    setVideoTrack(null);\n                }\n            };\n\n            // 添加事件监听\n            participant.on(RoomEvent.TrackSubscribed, handleTrackSubscribed);\n            participant.on(RoomEvent.TrackUnsubscribed, handleTrackUnsubscribed);\n\n            // 清理函数\n            return () => {\n                participant.off(RoomEvent.TrackSubscribed, handleTrackSubscribed);\n                participant.off(RoomEvent.TrackUnsubscribed, handleTrackUnsubscribed);\n            };\n        }, [participant]);\n\n        // 处理视频元素附加/分离\n        useEffect(() => {\n            const videoElement = videoRef.current;\n            if (!videoElement || !videoTrack) return;\n\n            // 清理现有视频源\n            while (videoElement.firstChild) {\n                videoElement.removeChild(videoElement.firstChild);\n            }\n\n            // 附加视频轨道\n            if (isVideoEnabled) {\n                videoTrack.attach(videoElement);\n            }\n\n            return () => {\n                if (videoTrack) {\n                    videoTrack.detach(videoElement);\n                }\n            };\n        }, [videoTrack, isVideoEnabled]);\n\n        return (\n            <Box\n                sx={{\n                    width: '100%',\n                    aspectRatio: '16/9',\n                    bgcolor: 'grey.800',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    position: 'relative',\n                }}\n            >\n                <video\n                    ref={videoRef}\n                    autoPlay\n                    playsInline\n                    muted={isLocal}\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                        objectFit: 'cover',\n                        display: isVideoEnabled ? 'block' : 'none'\n                    }}\n                />\n                {!isVideoEnabled && (\n                    <Box\n                        sx={{\n                            position: 'absolute',\n                            top: 0,\n                            left: 0,\n                            right: 0,\n                            bottom: 0,\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            bgcolor: 'grey.900',\n                        }}\n                    >\n                        <Box\n                            sx={{\n                                width: 80,\n                                height: 80,\n                                borderRadius: '50%',\n                                display: 'flex',\n                                alignItems: 'center',\n                                justifyContent: 'center',\n                                bgcolor: 'primary.main',\n                                color: 'white',\n                                fontSize: 32,\n                                fontWeight: 'bold',\n                            }}\n                        >\n                            {participant.identity.charAt(0).toUpperCase()}\n                        </Box>\n                    </Box>\n                )}\n            </Box>\n        );\n    });\n\n    // 参与者音频组件\n    const ParticipantAudio = React.memo(({\n        participant,\n        isMuted,\n    }: {\n        participant: Participant;\n        isMuted: boolean;\n    }) => {\n        const audioRef = useRef<HTMLAudioElement>(null);\n        const [audioTrack, setAudioTrack] = useState<RemoteTrack | LocalAudioTrack | Track | null>(null);\n\n        useEffect(() => {\n            if (!participant) return;\n\n            const handleTrackSubscribed = (track: Track) => {\n                if (track.kind === Track.Kind.Audio) {\n                    setAudioTrack(track as RemoteTrack | LocalAudioTrack);\n                }\n            };\n\n            const handleTrackUnsubscribed = (track: Track) => {\n                if (track.kind === Track.Kind.Audio) {\n                    setAudioTrack(null);\n                }\n            };\n\n            // 查找现有的音频轨道\n            const audioPublication = Array.from(participant.trackPublications.values())\n                .find(pub => pub.kind === Track.Kind.Audio);\n\n            if (audioPublication && audioPublication.track) {\n                setAudioTrack(audioPublication.track);\n            }\n\n            participant.on(RoomEvent.TrackSubscribed, handleTrackSubscribed);\n            participant.on(RoomEvent.TrackUnsubscribed, handleTrackUnsubscribed);\n\n            return () => {\n                participant.off(RoomEvent.TrackSubscribed, handleTrackSubscribed);\n                participant.off(RoomEvent.TrackUnsubscribed, handleTrackUnsubscribed);\n            };\n        }, [participant]);\n\n        useEffect(() => {\n            const audioElement = audioRef.current;\n            if (audioElement && audioTrack) {\n                audioTrack.attach(audioElement);\n                // 远程音频默认静音，除非用户手动取消\n                audioElement.muted = isMuted;\n                return () => {\n                    audioTrack.detach(audioElement);\n                };\n            }\n        }, [audioTrack, isMuted]);\n\n        return <audio ref={audioRef} autoPlay playsInline />;\n    });\n\n    // 渲染参与者\n    const renderParticipant = useCallback((participant: Participant, isLocal: boolean) => {\n        const effectiveState = getEffectiveMediaState(participant.identity);\n\n        return (\n            <Box\n                key={participant.identity}\n                sx={{\n                    position: 'relative',\n                    borderRadius: 2,\n                    overflow: 'hidden',\n                    bgcolor: 'background.paper',\n                    boxShadow: 1,\n                }}\n            >\n                {/* 视频元素 */}\n                <ParticipantVideo\n                    participant={participant}\n                    isLocal={isLocal}\n                    isVideoEnabled={effectiveState.isVideoEnabled}\n                />\n\n                {/* 音频元素 */}\n                {!isLocal && (\n                    <ParticipantAudio\n                        participant={participant}\n                        isMuted={!effectiveState.isAudioEnabled}\n                    />\n                )}\n\n                {/* 控制栏 */}\n                <Grid container\n                    sx={{\n                        position: 'absolute',\n                        bottom: 0,\n                        left: 0,\n                        right: 0,\n                        p: 1,\n                        bgcolor: 'rgba(0, 0, 0, 0.6)',\n                        justifyContent: 'center',\n                        gap: 1,\n                    }}\n                >\n                    <Grid item>\n                        <IconButton\n                            size=\"small\"\n                            color={effectiveState.isAudioEnabled ? 'primary' : 'error'}\n                            onClick={() => handleToggleAudio(participant)}\n                        >\n                            {effectiveState.isAudioEnabled ? <VolumeUpIcon /> : <VolumeOffIcon />}\n                        </IconButton>\n                    </Grid>\n                    <Grid item>\n                        <IconButton\n                            size=\"small\"\n                            color={effectiveState.isVideoEnabled ? 'primary' : 'error'}\n                            onClick={() => handleToggleVideo(participant)}\n                        >\n                            {effectiveState.isVideoEnabled ? <VisibilityIcon /> : <VisibilityOffIcon />}\n                        </IconButton>\n                    </Grid>\n                    <Grid item>\n                        <Typography variant=\"caption\" color=\"white\">\n                            {participant.identity} {isLocal && '(你)'}\n                        </Typography>\n                    </Grid>\n\n                    {/* 本地麦克风控制 */}\n                    {isLocal && (\n                        <Grid item>\n                            <IconButton\n                                size=\"small\"\n                                onClick={handleLocalMuteToggle}\n                                color={isMuted ? 'error' : 'primary'}\n                                sx={{ color: 'white' }}\n                                title={isMuted ? '取消静音' : '静音'}\n                            >\n                                {isMuted ? <MicOffIcon /> : <MicIcon />}\n                            </IconButton>\n                        </Grid>\n                    )}\n\n                    {/* 本地视频控制 */}\n                    {isLocal && (\n                        <Grid item>\n                            <IconButton\n                                size=\"small\"\n                                onClick={handleLocalVideoToggle}\n                                color={isVideoEnabled ? 'primary' : 'error'}\n                                sx={{ color: 'white' }}\n                                title={isVideoEnabled ? '关闭摄像头' : '开启摄像头'}\n                            >\n                                {isVideoEnabled ? <VideoIcon /> : <VideoOffIcon />}\n                            </IconButton>\n                        </Grid>\n                    )}\n                </Grid>\n            </Box>\n        );\n    }, [isMuted, isVideoEnabled, getEffectiveMediaState, handleToggleAudio, handleToggleVideo, handleLocalMuteToggle, handleLocalVideoToggle]);\n\n    // 渲染加载状态\n    if (isConnecting) {\n        return (\n            <Box sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                justifyContent: 'center',\n                height: '100%',\n                p: 3\n            }}>\n                <CircularProgress />\n                <Typography variant=\"body1\" sx={{ mt: 2 }}>正在连接会议...</Typography>\n            </Box>\n        );\n    }\n\n    // 渲染错误状态\n    if (error) {\n        return (\n            <Alert severity=\"error\" sx={{ m: 2 }}>\n                <Typography variant=\"body1\">{error}</Typography>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={connectToRoom}\n                    startIcon={<RefreshIcon />}\n                    sx={{ mt: 1 }}\n                >\n                    重试连接\n                </Button>\n            </Alert>\n        );\n    }\n\n    // 渲染主界面\n    function renderMainContent() {\n        // 如果已经连接，显示会议界面\n        if (hasConnected && roomRef.current) {\n            return (\n                <Box className={className} sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n                    <Box sx={{ flex: 1, overflow: 'auto', p: 2 }}>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} md={participants.length === 0 ? 12 : 6}>\n                                {renderParticipant(roomRef.current.localParticipant, true)}\n                            </Grid>\n                            {participants.map(function (participant) {\n                                return (\n                                    <Grid item xs={12} md={6} key={participant.identity}>\n                                        {renderParticipant(participant, false)}\n                                    </Grid>\n                                );\n                            })}\n                        </Grid>\n                    </Box>\n                    {/* 底部控制栏 */}\n                    <Box sx={{\n                        p: 2,\n                        borderTop: '1px solid',\n                        borderColor: 'divider',\n                        display: 'flex',\n                        justifyContent: 'center',\n                        gap: 2\n                    }}>\n                        <Button\n                            variant=\"contained\"\n                            color={!globalMediaState.isAudioEnabled ? 'error' : 'primary'}\n                            onClick={toggleMute}\n                            startIcon={!globalMediaState.isAudioEnabled ? <MicOffIcon /> : <MicIcon />}\n                        >\n                            {!globalMediaState.isAudioEnabled ? '取消静音' : '静音'}\n                        </Button>\n\n                        <Button\n                            variant=\"contained\"\n                            color={!globalMediaState.isVideoEnabled ? 'error' : 'primary'}\n                            onClick={toggleVideo}\n                            startIcon={globalMediaState.isVideoEnabled ? <VideoIcon /> : <VideoOffIcon />}\n                        >\n                            {globalMediaState.isVideoEnabled ? '关闭摄像头' : '开启摄像头'}\n                        </Button>\n\n                        <Button\n                            variant=\"contained\"\n                            color=\"error\"\n                            onClick={leaveMeeting}\n                            startIcon={<CallEndIcon />}\n                        >\n                            离开会议\n                        </Button>\n                    </Box>\n                </Box>\n            );\n        }\n\n        // 未连接时显示连接界面\n        return (\n            <Box className={className} sx={{\n                height: '100%',\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                justifyContent: 'center',\n                p: 3\n            }}>\n                <Typography variant=\"h6\" gutterBottom>\n                    准备加入会议\n                </Typography>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={connectToRoom}\n                    disabled={isConnecting}\n                    startIcon={<VideoIcon />}\n                    sx={{ mt: 2 }}\n                >\n                    加入会议\n                    {isConnecting && (\n                        <CircularProgress\n                            size={16}\n                            sx={{\n                                color: 'inherit',\n                                ml: 1\n                            }}\n                        />\n                    )}\n                </Button>\n            </Box>\n        );\n    }\n\n    // 渲染组件\n    return (\n        <Box ref={ref} sx={sx} style={style}>\n            {error ? (\n                <Alert\n                    severity=\"error\"\n                    action={\n                        <Button\n                            color=\"inherit\"\n                            size=\"small\"\n                            onClick={connectToRoom}\n                        >\n                            重试\n                        </Button>\n                    }\n                >\n                    {error}\n                </Alert>\n            ) : (\n                renderMainContent()\n            )}\n        </Box>\n    );\n}\n\n// 使用 forwardRef 导出组件\nconst MeetingRoom = forwardRef(MeetingRoomComponent);\nMeetingRoom.displayName = 'MeetingRoom';\n\nexport { MeetingRoom };","import { IRequestParams, IResultContent, request } from \"@fanfanlo\";\nimport { tms } from \"../tms\";\nimport { IRequestOptions } from \"../IRequestOptions\";\n\n/**\n * @description 单个联系人的信息，由前端提供\n */\nexport interface IEmcContactIdentity {\n    identity: string;\n    identityType: 'email' | 'mobile';\n}\n\n/**\n * @description 邀请联系人的请求参数\n */\nexport interface IEmcInviteContactsParams extends IRequestParams {\n    contacts: IEmcContactIdentity[];\n    remark?: string;\n    type: string;\n    message?: string;\n    matrix_access_token: string; // 新增：用于创建 Matrix 房间的授权 Token\n}\n\n/**\n * @description 单个邀请的处理结果，由后端返回\n */\nexport interface IEmcInviteResultItem {\n    identity: string;\n    result_code: string; // 使用 ResultCode 的字符串形式\n    msg: string;\n}\n\n/**\n * @description 邀请联系人的完整响应体\n */\n// export interface IEmcInviteContactsResult extends IResultContent {\n//     data: {\n//         data: {\n//             results: IEmcInviteResultItem[];\n//             msg?: string;\n//         };\n//         msg?: string;\n//     };\n//     results?: IEmcInviteResultItem[]; // 保持向后兼容\n// }\n\nexport interface IEmcInviteContactsResult extends IResultContent {\n    data: {\n        is_ok:boolean;\n        results: IEmcInviteResultItem[];\n        msg?: string;\n    };\n}\n\n/**\n * @description 调用邀请联系人接口的函数\n * @param opts 包含 params, gateway, handler 的请求选项\n */\nexport async function tmsEmcInviteContacts(opts: IRequestOptions<IEmcInviteContactsParams>) {\n    const res = await request<IEmcInviteContactsResult>(tms.TEmc, tms.MEmcInviteContacts, opts.params, opts.gateway, opts.handler);\n    return res;\n}","import { IRequestParams, IResultContent, request } from \"@fanfanlo\";\nimport { tms } from \"../tms\";\nimport { IRequestOptions } from \"../IRequestOptions\";\n\n/**\n * @description 获取联系人类型的请求参数\n */\nexport interface IEmcGetContactTypesParams extends IRequestParams {\n    // 可能不需要额外参数，但保留结构以备将来扩展\n}\n\n/**\n * @description 单个联系人类型\n */\nexport interface IEmcContactTypeItem {\n    id: string;\n    name: string;\n    // 根据实际需要可以添加更多字段，例如 icon, description 等\n}\n\n/**\n * @description 获取联系人类型的完整响应体\n */\nexport interface IEmcGetContactTypesResult extends IResultContent {\n    data: {\n        types: Array<{\n            uuid: string;\n            name: string;\n            is_system: boolean;\n        }>;\n    };\n}\n\n/**\n * @description 调用获取联系人类型接口的函数\n * @param opts 包含 params, gateway, handler 的请求选项\n */\nexport async function tmsEmcGetContactTypes(opts: IRequestOptions<IEmcGetContactTypesParams>) {\n    const res = await request<IEmcGetContactTypesResult>(tms.TEmc, tms.MEmcGetContactTypes, opts.params, opts.gateway, opts.handler);\n    return res;\n}\n","import {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    TextField,\n    Box,\n    CircularProgress,\n    Autocomplete,\n} from '@mui/material';\nimport { useState, useCallback, useEffect, useRef, SyntheticEvent } from 'react';\nimport { \n    IEmcInviteContactsParams, \n    tmsEmcInviteContacts, \n    IEmcContactIdentity, \n    user, \n    tmsEmcGetContactTypes,\n    IEmcGetContactTypesResult,\n    IEmcContactTypeItem,\n    IEmcInviteResultItem,\n} from '@app/model';\nimport toast from 'react-hot-toast';\nimport { matrixUser } from '@im/matrix';\nimport { authService } from '@src/services/authService';\nimport { Log, useProxyWatch,\n    IRequestResult } from '@fanfanlo';\nconst fileLogger = new Log(false, 'InviteContactDialog.tsx');\n\nconst isValidIdentity = (text: string) => /(^\\d{11}$)|(^[a-zA-Z0-9]{32}$)/.test(text);\nconst is11DigitNumber = (text: string) => /^\\d{11}$/.test(text);\n\ninterface InviteContactDialogProps {\n    open: boolean;\n    onClose: () => void;\n    onInviteSent?: () => void;\n}\n\nexport function InviteContactDialog({ open, onClose, onInviteSent }: InviteContactDialogProps) {\n    const uiLogger = fileLogger.sub(false, 'InviteContactDialog_ui');\n\n    const [contacts, setContacts] = useState('');\n    const [remark, setRemark] = useState('');\n    const [callType, setCallType] = useState<string | null>(null);\n    const [availableCallTypes, setAvailableCallTypes] = useState<readonly IEmcContactTypeItem[]>([]);\n    \n    // Debug effect to log availableCallTypes changes\n    useEffect(() => {\n        console.log('availableCallTypes updated:', availableCallTypes);\n    }, [availableCallTypes]);\n    \n    // Debug effect to log callType changes\n    useEffect(() => {\n        console.log('callType updated:', callType);\n    }, [callType]);\n    const [message, setMessage] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [isTypesLoading, setIsTypesLoading] = useState(false);\n\n    const [pendingParams, setPendingParams] = useState<Omit<IEmcInviteContactsParams, 'matrix_access_token'> | null>(null);\n    const executionLock = useRef(false);\n    const [accessToken] = useProxyWatch(matrixUser.userData.userInfo, 'loginResponse.access_token', matrixUser.userData.userInfo.loginResponse?.access_token);\n    const [isUserLoggedIn] = useProxyWatch(user.data.sessionData, 'global_user_info', !!user.data.sessionData.global_user_info);\n\n    useEffect(() => {\n        if (accessToken && pendingParams && !executionLock.current) {\n            executionLock.current = true;\n            const finalParams: IEmcInviteContactsParams = {\n                ...pendingParams,\n                matrix_access_token: accessToken,\n                contacts: pendingParams?.contacts || [],\n                type: pendingParams?.type || ''\n            };\n            executeApiCall(finalParams);\n        }\n    }, [accessToken, pendingParams]);\n\n    const executeApiCall = useCallback(async (params: IEmcInviteContactsParams) => {\n        if (!params.contacts || !params.type) {\n            toast.error('请填写联系人和呼叫类型');\n            return;\n        }\n\n        setIsLoading(true);\n        \n        try {\n            const res = await tmsEmcInviteContacts({\n                params,\n                handler: { printLog: true }\n            });\n\n            console.log('Invite response:', res);\n\n            // 处理响应结果\n            if (res.err || !res.shellIsOk || !res.dataIsOk) {\n                const errorMessage = res.err?.message || '邀请失败，请稍后重试';\n                toast.error(errorMessage);\n                return;\n            }\n\n            // 处理嵌套的响应结构\n            const responseData = res.data;\n            if (!responseData?.data?.results) {\n                const errorMessage = responseData?.data?.msg || res.data?.msg || '未返回有效的结果';\n                toast.error(errorMessage);\n                return;\n            }\n            \n            const results: IEmcInviteResultItem[] = responseData.data.results;\n\n            // 统计成功和失败的数量\n            const successResults = results.filter(r => r.result_code === 'SUCCESS');\n            const infoResults = results.filter(r => r.result_code === 'INVITE_ALREADY_SENT' || r.result_code === 'ALREADY_A_CONTACT');\n            const errorResults = results.filter(r => r.result_code !== 'SUCCESS' && r.result_code !== 'INVITE_ALREADY_SENT' && r.result_code !== 'ALREADY_A_CONTACT');\n\n            if (successResults.length > 0) {\n                toast.success(`成功邀请 ${successResults.length} 个联系人`);\n                onInviteSent?.();\n            }\n            \n            if (infoResults.length > 0) {\n                const infoMessages = infoResults.map(r => r.msg).filter(Boolean).join('\\n');\n                if (infoMessages) {\n                    // 使用默认的 toast 替代 toast.info\n                    toast(infoMessages);\n                }\n            }\n            \n            if (errorResults.length > 0) {\n                const errorMessages = errorResults.map(r => r.msg).filter(Boolean).join('\\n');\n                if (errorMessages) {\n                    toast.error(`部分邀请失败：\\n${errorMessages}`);\n                }\n            }\n        } catch (error) {\n            console.error('Error in executeApiCall:', error);\n            toast.error('处理请求时发生错误，请稍后重试');\n        } finally {\n            setIsLoading(false);\n        }\n    }, [onInviteSent]);\n\n    const fetchCallTypes = useCallback(async () => {\n        const logger = uiLogger.sub(false, 'fetchCallTypes_fn');\n        logger.log('Fetching call types...');\n        setIsTypesLoading(true);\n        const res: IRequestResult<IEmcGetContactTypesResult, any> = await tmsEmcGetContactTypes({ params: {}, handler: { printLog: true } });\n        logger.log('Call types response:', JSON.stringify(res));\n        setIsTypesLoading(false);\n\n        if (res.err || !res.shellIsOk || !res.dataIsOk) {\n            const errorMessage = res.err?.message || 'Failed to load call types.';\n            toast.error(errorMessage);\n            setAvailableCallTypes([]);\n            logger.error('Failed to load call types:', errorMessage);\n        } else {\n            // 从 res.data.data.types 获取数据\n            const types = res.data?.data?.types || [];\n            logger.log('Setting availableCallTypes:', JSON.stringify(types));\n            \n            // 转换为 IEmcContactTypeItem[] 格式\n            const formattedTypes = types.map(type => ({\n                id: type.uuid,\n                name: type.name,\n                is_system: type.is_system\n            }));\n            \n            setAvailableCallTypes(formattedTypes);\n            \n            // 只在 callType 为空时设置默认值\n            if (formattedTypes.length > 0 && !callType) {\n                const defaultType = formattedTypes[0].name;\n                logger.log('Setting default call type:', defaultType);\n                setCallType(defaultType);\n            } else if (formattedTypes.length === 0) {\n                logger.warn('No call types available');\n            }\n        }\n    }, []); // 移除了 callType 依赖\n\n    useEffect(() => {\n        if (open) {\n            fetchCallTypes();\n        } else {\n            setContacts('');\n            setRemark('');\n            setCallType(null);\n            setAvailableCallTypes([]);\n            setMessage('');\n            setIsLoading(false);\n            setPendingParams(null);\n            executionLock.current = false;\n        }\n    }, [open, fetchCallTypes]);\n\n    const handleSendInvitation = useCallback(async () => {\n        const contactInputs = contacts.split('\\n').map(c => c.trim()).filter(c => c);\n        if (contactInputs.length === 0) {\n            toast.error('Please enter at least one contact.');\n            return;\n        }\n\n        const contactIdentities: IEmcContactIdentity[] = [];\n        for (const input of contactInputs) {\n            if (isValidIdentity(input)) {\n                const type = is11DigitNumber(input) ? 'mobile' : 'email';\n                contactIdentities.push({ identity: input, identityType: type });\n            } else {\n                toast.error(`Invalid contact format: ${input}. Must be an 11-digit number or a 32-character string.`);\n                return;\n            }\n        }\n\n        if (!callType || callType.trim() === '') {\n            toast.error('Please select or enter a call type.');\n            return;\n        }\n\n        setIsLoading(true);\n\n        if (!isUserLoggedIn) {\n            const appLoggedIn = await authService.showLoginDialog();\n            if (!appLoggedIn) {\n                setIsLoading(false);\n                return; \n            }\n        }\n\n        const currentAccessToken = matrixUser.userData.userInfo.loginResponse?.access_token;\n        const params: Omit<IEmcInviteContactsParams, 'matrix_access_token'> = {\n            contacts: contactIdentities,\n            type: callType.trim(),\n            remark: remark.trim(),\n            message: message.trim(),\n        };\n\n        if (currentAccessToken) {\n            executionLock.current = true;\n            const apiParams: IEmcInviteContactsParams = {\n                ...params,\n                matrix_access_token: currentAccessToken,\n                contacts: params.contacts || [],\n                type: params.type || ''\n            };\n            executeApiCall(apiParams);\n        } else {\n            toast('Waiting for Matrix to log in...');\n            setPendingParams(params);\n        }\n\n    }, [contacts, remark, callType, message, executeApiCall, isUserLoggedIn]);\n\n    return (\n        <Dialog open={open} onClose={() => onClose()} maxWidth=\"sm\" fullWidth>\n            <DialogTitle>Invite Emergency Contact</DialogTitle>\n            <DialogContent>\n                <Box component=\"form\" sx={{ mt: 2 }}>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"contacts\"\n                        label=\"Contacts (11-digit number or 32-char ID)\"\n                        type=\"text\"\n                        fullWidth\n                        multiline\n                        rows={4}\n                        variant=\"outlined\"\n                        placeholder=\"13800138000&#10;550e8400e29b41d4a716446655440000\"\n                        value={contacts}\n                        onChange={(e) => setContacts(e.target.value)}\n                        disabled={isLoading}\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"remark\"\n                        label=\"Remark Name (Optional)\"\n                        type=\"text\"\n                        fullWidth\n                        variant=\"outlined\"\n                        value={remark}\n                        onChange={(e) => setRemark(e.target.value)}\n                        disabled={isLoading}\n                    />\n                    <Autocomplete\n                        freeSolo\n                        id=\"call-type-autocomplete\"\n                        options={availableCallTypes.map((option) => option.name)}\n                        value={callType || ''}\n                        onChange={(event: SyntheticEvent, newValue: string | null) => {\n                            console.log('Call type changed to:', newValue);\n                            setCallType(newValue);\n                        }}\n                        inputValue={callType || ''}\n                        onInputChange={(event, newInputValue, reason) => {\n                            // Only update when the user is typing, not when an option is selected\n                            if (reason === 'input') {\n                                console.log('Input value changed to:', newInputValue);\n                                setCallType(newInputValue);\n                            }\n                        }}\n                        renderInput={(params) => {\n                            const { InputProps, ...otherParams } = params;\n                            return (\n                                <TextField\n                                    {...otherParams}\n                                    label=\"Call Type\"\n                                    variant=\"outlined\"\n                                    InputProps={{\n                                        ...InputProps,\n                                        endAdornment: (\n                                            <>\n                                                {isTypesLoading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                                                {InputProps.endAdornment}\n                                            </>\n                                        ),\n                                    }}\n                                />\n                            );\n                        }}\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"message\"\n                        label=\"Invitation Message (Optional)\"\n                        type=\"text\"\n                        fullWidth\n                        multiline\n                        rows={3}\n                        variant=\"outlined\"\n                        placeholder=\"I've added you as my emergency contact. Please accept the invitation.\"\n                        value={message}\n                        onChange={(e) => setMessage(e.target.value)}\n                        disabled={isLoading}\n                    />\n                </Box>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => onClose()} disabled={isLoading}>Close</Button>\n                <Button onClick={handleSendInvitation} variant=\"contained\" disabled={isLoading}>\n                    {isLoading ? <CircularProgress size={24} /> : 'Send Invitation'}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}","import { AppShell, TabbarContainer } from '@app/ui';\nimport { MeetingRoom } from '@im/livekit';\nimport { IMOpenPageLink } from '@im/matrix';\nimport { Box, Button } from '@mui/material';\nimport { InviteContactDialog } from '@src/components/dialogs/InviteContactDialog';\nimport { NavBar } from '@src/components/navbar/NavBar';\nimport { mainModel } from '@src/libs/mc/main/MainModel';\nimport { useState } from 'react';\n\nfunction Content() {\n  const [openInviteDialog, setOpenInviteDialog] = useState(false);\n\n  return (\n    <Box sx={{ my: 2, p: 2 }}>\n      <Box>v1</Box>\n      <Button variant=\"contained\" onClick={() => setOpenInviteDialog(true)}>\n        Invite Contact\n      </Button>\n\n      {openInviteDialog && (\n        <InviteContactDialog \n          open={openInviteDialog} \n          onClose={() => setOpenInviteDialog(false)} \n        />\n      )}\n\n      <MeetingRoom\n        roomName=\"test-room\"\n        userName={`user-${Math.random().toString(36).substring(2, 8)}`}\n        livekitConfig={mainModel.appConfig.livekit}\n      />\n      <IMOpenPageLink />\n    </Box>\n  );\n}\n\nexport default function Home() {\n  return (\n    <AppShell>\n      <TabbarContainer titleConf={{ ns: 'emergency-call/pages/home/content', key: 'home.title' }} navBar={<NavBar />}>\n        <Content />\n      </TabbarContainer>\n    </AppShell>\n  );\n}\n\n"],"names":["useRouter","useTranslation","HomeIcon","SettingsIcon","BottomNavigation","BottomNavigationAction","NavBar","router","pathname","t","tabInfoList","label","value","icon","showLabels","map","e","data-id","className","onClick","push","initReactI18next","LanguageDetector","Backend","i18next","Log","isServer","fileDateVersion","i18nLogger","windowHref","window","u","URL","location","href","parent","origin","backendOptions","loadPath","lngs","namespaces","log","sub","pause","lng","p","ps","split","splice","length","join","parse","data","languages","l","JSON","print","backend","init","i18n","on","i18nInit","_fileDateVersion","use","load","fallbackLng","partialBundledLanguages","ns","debug","interpolation","escapeValue","detection","caches","namespace","key","res","console","error","loaded","msg","arguments","createContext","storeUtils","s","create","StorePageContext","StorePageDynamicContext","toProxy","watchUpdates","useEffect","I18nextProvider","AppShell","children","scrollKey","dynamicKey","o","read","write","beforePopState","state","clearAll","info","x","y","listenScroll","requestAnimationFrame","scrollTo","onScroll","scrollX","scrollY","addEventListener","unsub","removeEventListener","Box","Button","Container","useContext","isDev","loadI18nValue","Reload","reload","Date","toLocaleString","ScrollP","index","PageContent","titleConf","scroll","clazz","now","Math","random","loadTitle","title","document","container","getElementsByClassName","scrollTop","passive","sx","flexGrow","overflow","padding","undefined","AndroidPageContent","CssBaseline","Paper","Stack","React","BottomBar","navBar","id","position","bottom","left","right","elevation","TabbarContainer","display","flexDirection","height","direction","spacing","useCallback","useRef","useState","forwardRef","Room","RoomEvent","RemoteParticipant","RemoteTrack","Track","createLocalAudioTrack","createLocalVideoTrack","Typography","Alert","IconButton","CircularProgress","Grid","Mic","MicIcon","MicOff","MicOffIcon","Videocam","VideoIcon","VideocamOff","VideoOffIcon","CallEnd","CallEndIcon","VolumeUp","VolumeUpIcon","VolumeOff","VolumeOffIcon","Refresh","RefreshIcon","Visibility","VisibilityIcon","VisibilityOff","VisibilityOffIcon","logger","uiLogger","VIDEO_PRESET","width","frameRate","maxBitrate","MeetingRoomComponent","ref","livekitConfig","roomName","userName","onDisconnect","onError","style","globalMediaState","setGlobalMediaState","isAudioEnabled","isVideoEnabled","roomRef","localTracksRef","videoElements","audioElements","participantStates","setParticipantStates","isUnmountedRef","isConnecting","setIsConnecting","hasConnected","setHasConnected","setError","isMuted","setIsMuted","setIsVideoEnabled","participants","setParticipants","fetchToken","identity","response","fetch","jwt","method","headers","body","stringify","room_name","ok","Error","json","token","connectToRoom","audioTrack","videoTrack","createLocalTracks","current","room","adaptiveStream","dynacast","videoCaptureDefaults","resolution","publishDefaults","dtx","red","forceStereo","simulcast","setupRoomListeners","connect","wsUrl","autoSubscribe","Promise","all","localParticipant","publishTrack","publishError","remoteParticipants","Array","from","values","updateParticipantState","forEach","participant","initParticipantState","getTrackPublications","publication","track","handleTrackSubscribed","cleanupTracks","disconnect","echoCancellation","noiseSuppression","autoGainControl","tracks","stop","detach","trackElementsRef","videoElementsRef","audioElementsRef","prev","isAudioEnabledGlobal","isVideoEnabledGlobal","isVideoTrack","kind","Kind","Video","updateTrackState","stateUpdate","Audio","participantExists","some","off","eventHandlers","participantConnected","handleTrackPublished","once","trackPublications","participantDisconnected","newParticipants","filter","trackSubscribed","disconnected","reason","reasonStr","toString","reconnecting","reconnected","Disconnected","Reconnecting","Reconnected","ParticipantConnected","ParticipantDisconnected","TrackSubscribed","leaveMeeting","Object","el","remove","cleanup","isUnmounting","find","updateGlobalMediaState","audioEnabled","videoEnabled","toggleMute","newGlobalAudioState","unmute","mute","toggleVideo","newGlobalVideoState","handleLocalMuteToggle","newMutedState","handleLocalVideoToggle","newVideoState","getParticipantState","pub","handleToggleAudio","currentState","handleToggleVideo","getEffectiveMediaState","participantId","ParticipantVideo","memo","isLocal","videoRef","setVideoTrack","videoPublication","handleTrackUnsubscribed","TrackUnsubscribed","videoElement","firstChild","removeChild","attach","aspectRatio","bgcolor","alignItems","justifyContent","video","autoPlay","playsInline","muted","objectFit","top","borderRadius","color","fontSize","fontWeight","charAt","toUpperCase","ParticipantAudio","audioRef","setAudioTrack","audioPublication","audioElement","audio","renderParticipant","effectiveState","boxShadow","gap","item","size","variant","mt","severity","m","startIcon","renderMainContent","flex","xs","md","borderTop","borderColor","gutterBottom","disabled","ml","action","MeetingRoom","displayName","request","tms","tmsEmcInviteContacts","opts","TEmc","MEmcInviteContacts","params","gateway","handler","tmsEmcGetContactTypes","MEmcGetContactTypes","Dialog","DialogActions","DialogContent","DialogTitle","TextField","Autocomplete","user","toast","matrixUser","authService","useProxyWatch","fileLogger","isValidIdentity","text","test","is11DigitNumber","InviteContactDialog","open","onClose","onInviteSent","contacts","setContacts","remark","setRemark","callType","setCallType","availableCallTypes","setAvailableCallTypes","message","setMessage","isLoading","setIsLoading","isTypesLoading","setIsTypesLoading","pendingParams","setPendingParams","executionLock","accessToken","userData","userInfo","loginResponse","access_token","isUserLoggedIn","sessionData","global_user_info","finalParams","matrix_access_token","type","executeApiCall","responseData","printLog","err","shellIsOk","dataIsOk","errorMessage","results","successResults","r","result_code","infoResults","errorResults","success","infoMessages","Boolean","errorMessages","fetchCallTypes","types","formattedTypes","uuid","name","is_system","defaultType","warn","handleSendInvitation","contactInputs","c","trim","contactIdentities","input","identityType","appLoggedIn","showLoginDialog","currentAccessToken","apiParams","maxWidth","fullWidth","component","autoFocus","margin","multiline","rows","placeholder","onChange","target","freeSolo","options","option","event","newValue","inputValue","onInputChange","newInputValue","renderInput","InputProps","otherParams","endAdornment","IMOpenPageLink","mainModel","Content","openInviteDialog","setOpenInviteDialog","my","substring","appConfig","livekit","Home"],"sourceRoot":"","ignoreList":[1]}