# GitHub Actions 工作流程：部署静态网站到七牛云对象存储 Kodo
# 文件名: deploy-to-qiniu.website.dev.zh-cn.emc.qiniu.yml
#
# 使用前请确保：
# 1. 在 GitHub 仓库的 Settings -> Secrets and variables -> Actions 中设置了以下两个 Secret:
#    - QINIU_ACCESS_KEY: 你的七牛云 Access Key
#    - QINIU_SECRET_KEY: 你的七牛云 Secret Key
# 2. 修改下面标记为 "TODO" 的占位符。

name: Deploy Website to Qiniu Cloud

# 触发条件：当代码被推送到 main 分支时执行
on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # 使用最新的 Ubuntu 环境来执行任务

    steps:
      # 第 1 步：拉取你的 GitHub 仓库代码
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 第 2 步：构建你的网站
      - name: Setup Node.js Environment
        uses: actions/setup-node@v4
        with:
          node-version: '18' # 指定你项目使用的 Node.js 版本
          cache: 'npm' # 缓存 npm 依赖，加快后续构建速度
      - name: Install Dependencies and Build Project
        run: |
          npm install
          # 确保你的构建命令会把产物输出到 'docs' 目录
          npm run build 

      # 第 3 步：上传文件到七牛云 (使用官方 Action)
      - name: Upload Files to Qiniu Kodo
        uses: qiniu/upload-to-qiniu-kodo-action@v1
        with:
          # 关键：从 GitHub Secrets 中读取 AK 和 SK，保证安全
          ak: ${{ secrets.QINIU_ACCESS_KEY }}
          sk: ${{ secrets.QINIU_SECRET_KEY }}
          
          # TODO: 修改为你在七牛云创建的存储空间名称 (Bucket)
          bucket: 'emc-website-dev-zh-cn' 
          
          # 关键：根据你的设置，源目录已修改为 'docs'
          source-dir: 'docs' 
          
          # (可选) 上传到 bucket 中的哪个子目录，默认为根目录 '/'
          # dest-dir: '/'

      # 第 4 步：为所有 HTML 文件设置 'no-cache' 缓存策略
      - name: Set 'no-cache' for all HTML files
        run: |
          # 下载并准备 qshell 工具
          echo "Downloading qshell..."
          wget https://github.com/qiniu/qshell/releases/download/v2.10.0/qshell-v2.10.0-linux-amd64.tar.gz -O qshell.tar.gz
          tar -xvf qshell.tar.gz
          mv qshell-v2.10.0-linux-amd64 qshell
          chmod +x qshell
          
          # 配置 qshell 账户信息
          echo "Configuring qshell account..."
          ./qshell account ${{ secrets.QINIU_ACCESS_KEY }} ${{ secrets.QINIU_SECRET_KEY }} deploy_user
          
          # 核心步骤：列出bucket中所有文件，筛选出.html文件，然后循环为它们设置 no-cache
          echo "Finding and updating cache policy for all .html files..."
          BUCKET_NAME="your-bucket-name" # TODO: 再次确认你的 Bucket 名称
          
          ./qshell listbucket $BUCKET_NAME | grep '\.html$' | awk '{print $1}' | while read key; do
            echo "Setting 'Cache-Control: no-cache' for file: $key"
            ./qshell chgm $BUCKET_NAME "$key" 'Cache-Control: no-cache'
          done

          echo "Cache policies for all HTML files have been set successfully."
