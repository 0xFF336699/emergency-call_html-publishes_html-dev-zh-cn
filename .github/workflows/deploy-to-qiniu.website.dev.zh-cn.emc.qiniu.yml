# 最终混合方案 v6：反向忽略非 HTML 文件
name: Deploy HTML to Qiniu (Assets via GitHub Pages)

on:
  push:
    branches:
      - main

jobs:
  deploy-html:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Upload HTML files to Qiniu
        env:
          QINIU_BUCKET_NAME: ${{ secrets.QINIU_BUCKET_NAME }}
          QINIU_ACCESS_KEY: ${{ secrets.QINIU_ACCESS_KEY }}
          QINIU_SECRET_KEY: ${{ secrets.QINIU_SECRET_KEY }}
        run: |
          # --- 准备工作 ---
          echo "Downloading and setting up qshell v2.16.0..."
          wget https://github.com/qiniu/qshell/releases/download/v2.16.0/qshell-v2.16.0-linux-amd64.tar.gz -O qshell.tar.gz
          tar -xvf qshell.tar.gz
          chmod +x qshell
          
          echo "Configuring qshell account..."
          ./qshell account $QINIU_ACCESS_KEY $QINIU_SECRET_KEY deploy_user

          # --- 核心步骤：生成一个包含所有非 HTML 文件的忽略列表 ---
          echo "Generating ignore list for non-HTML files..."
          # 注意这里的 -not -name "*.html"，它会查找所有不是 .html 的文件
          find docs -type f -not -name "*.html" | sed 's/docs\///' > non-html-files.txt
          
          echo "--- Files to be ignored by qshell ---"
          cat non-html-files.txt

          # --- 上传文件，同时忽略列表中的所有文件 ---
          echo "Uploading all files from 'docs' while ignoring the list..."
          cat > qupload-html.json << EOF
          {
              "src_dir": "docs",
              "bucket": "$QINIU_BUCKET_NAME",
              "overwrite": true,
              "rescan_local": true,
              "log_level": "info",
              "skip_file_prefixes": "non-html-files.txt"
          }
          EOF
          
          ./qshell qupload -c 10 qupload-html.json

          # --- 刷新 CDN 缓存 ---
          echo "Refreshing CDN cache for HTML files..."
          find docs -type f -name "*.html" | sed 's/docs\///' > html-files.txt
          sed -e 's/index\.html$//' -e 's/\.html$//' html-files.txt | awk -v domain="https://emc-website-dev-zh-cn.qiniu.fanfanlo.com/" '{print domain$0}' > urls_to_refresh.txt
          
          echo "--- URLs to be refreshed ---"
          cat urls_to_refresh.txt
          
          # 执行刷新, 请在确认无误后取消注释
          # ./qshell cdnrefresh -i urls_to_refresh.txt

          echo "HTML deployment and CDN refresh completed."
